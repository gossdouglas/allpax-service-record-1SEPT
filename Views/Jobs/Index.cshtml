@model allpax_service_record.Models.View_Models.vm_Jobs

@*@model IEnumerable<allpax_service_record.Models.View_Models.vm_Jobs>*@

@{
    ViewBag.Title = "Jobs";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/underscore@1.11.0/underscore-min.js"></script>

    <style>

        .active_div {
            text-align: center
        }

        /*AN INVISIBLE HORIZONTAL SPACE*/
        .sectionSeparator {
            margin: 1px;
            opacity: 0;
        }

        table {
            table-layout: auto !important;
        }

        thead th, tbody td, tfoot td, tfoot th {
            /*width: auto !important;*/
            white-space: nowrap;
        }

        .subJobTypes_div {
            height: 200px;
            /*width: 100%;*/
            overflow: auto;
        }

        .jobResourceTypes_div {
            height: 200px;
            /*width: 100%;*/
            /*overflow: auto;*/
            overflow-y: auto;
        }

        .sub-job-type_input, .sub-job-type_label {
            padding: 0px;
            margin: 0px;
        }

        .tbl_header {
            border: 1px solid black;
            padding: 0px;
        }

        .tbl_returned-cell {
            border-left: 1px solid black;
            border-bottom: 1px solid black;
            border-right: 1px solid black;
            /*padding: 5px;*/
        }

        .sectionSeparator {
            margin: 1px;
            opacity: 0;
        }

        /*@@media (min-width: 992px) {
            .modal-dialog {
                max-width: 60%;
            }
        }*/

        /*.modal-dialog {
            position: relative;
            display: table;*/ /*This is important*/
        /*overflow-y: auto;
            overflow-x: auto;
            width: auto;
            min-width: 300px;
        }*/

        /*BEGIN CHANGE LAYOUT FOR MOBILE*/
        @@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
            /* Force table to not be like tables anymore */
            table, thead, tbody, th, td, tr {
                display: block;
            }
                /* Hide table headers (but not display: none;, for accessibility) */
                thead tr {
                    position: absolute;
                    top: -9999px;
                    left: -9999px;
                }

            tr {
                border: 1px solid #ccc;
            }

            td {
                /* Behave  like a "row" */
                border: none;
                border-bottom: 1px solid #eee;
                position: relative;
                padding-left: 50%;
            }

                td:before {
                    /* Now like a table header */
                    position: absolute;
                    /* Top/left values mimic padding */
                    top: 6px;
                    left: 6px;
                    width: 45%;
                    padding-right: 10px;
                    white-space: nowrap;
                }
            /*END CHANGE LAYOUT FOR MOBILE*/
        }
    </style>
    <script>
        $(document).ready(function () {//begin document read jquery statements

            var indexJobCrspdtEntries_Add = 0;
            var subJobTypes_Add = [];

            var jobCrspdtInfo_Add = [];
            var jobCrspdtInfoJson_Add = [];

            fn_enableSelect2();

            var customerCodeNew_dpdwn = $('#customer-code-new');

            $(".jobNewForm.btn_save").click(function () {

                fn_loadEntries_Add();
                fn_buildJsonObjects();

                //if (fn_rowFilled($(this))) {

                    var modal = $(this).parent().parent();
                    var temp_jobID = modal.find('.job-id').val();
                    var temp_active = modal.find('.job-active').prop('checked');
                    var temp_customerCode = modal.find('.customer-code').val();
                    var temp_customerName = modal.find('.customer-name').val();
                    var temp_location = modal.find('.customer-location').val();
                    var temp_customerContact = modal.find('.customer-contact').val();
                    var temp_nrmlHoursStart = modal.find('.normal-hours-start').val();
                    var temp_nrmlHoursEnd = modal.find('.normal-hours-end').val();
                var temp_nrmlHoursDaily = modal.find('.normal-hours-daily').val();
                var temp_dblTimeHours = modal.find('.double-time-hours').prop('checked');
                    var temp_description = modal.find('.job-description').val(); 

                //    console.log("Save button was pressed.")
                //    console.log("temp_jobID: " + temp_jobID);
                //    console.log("temp_active: " + temp_active);
                //    console.log("temp_customerCode: " + temp_customerCode);
                //    console.log("temp_customerName: " + temp_customerName);
                //    console.log("temp_location: " + temp_location);
                //    console.log("temp_customerContact: " + temp_customerContact);
                //    console.log("temp_nrmlHoursStart: " + temp_nrmlHoursStart);
                //    console.log("temp_nrmlHoursEnd: " + temp_nrmlHoursEnd);
                //console.log("temp_nrmlHoursDaily: " + temp_nrmlHoursDaily);
                //console.log("temp_dblTimeHours: " + temp_dblTimeHours);
                //    console.log("temp_description: " + temp_description);

                    var data = {
                        jobID: temp_jobID,
                        active: temp_active,
                        customerCode: temp_customerCode,
                        location: temp_location,
                        customerContact: temp_customerContact,
                        nrmlHoursStart: temp_nrmlHoursStart,
                        nrmlHoursEnd: temp_nrmlHoursEnd,
                        nrmlHoursDaily: temp_nrmlHoursDaily,
                        dblTimeHours: temp_dblTimeHours,
                        description: temp_description,
                        subJobTypes_Add: subJobTypes_Add,
                        jobCrspdtInfo: jobCrspdtInfoJson_Add
                    };

                    //fn_showSpinner();

                    $.ajax({
                        url: '/Jobs/AddJob',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            window.location.href = response;
                        },
                        error: function (response) {
                            console.log("an error!");
                            $(response).each(function (index, item) {
                                console.log(item.name)
                            });
                        }
                    });
                //}
            });

            $('#jobEditForm').on('show.bs.modal', function (event) {

                var button = $(event.relatedTarget) // Button that triggered the modal
                var temp_jobID = button.data('job-id') // Extract info from data-* attributes
                var temp_customerCode = button.data('customer-code') // Extract info from data-* attributes
                var temp_customerContact = button.data('customer-contact') // Extract info from data-* attributes
                var temp_jobDescription = button.data('job-description') // Extract info from data-* attributes
                var temp_active = button.data('active') // Extract info from data-* attributes
                var temp_id = button.data('id') // Extract info from data-* attributes

                var modal = $(this)
                modal.find('.modal-title').text('Job Edit Form')
                modal.find('.job-id').val(temp_jobID)
                modal.find('.customer-code').val(temp_customerCode)
                modal.find('.customer-contact').val(temp_customerContact)
                modal.find('.job-description').val(temp_jobDescription)
                modal.find('.active').val(temp_active)
                modal.find('.id').val(temp_id)

                if (temp_active == "True") {
                    console.log("temp_active is true.")
                    modal.find('.active').prop('checked', true);
                }
                else {
                    modal.find('.active').prop('checked', false);
                }
            })

            $('#jobNewForm').on('show.bs.modal', function (event) {
                //begin fill the jobs dropdown

                var tempCustomerCodeArr = [];

                //begin fill the customer code dropdown
                $.ajax({
                    url: '/DataService.asmx/GetCustomerInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: '%' },
                    success: function (data) {
                        $(customerCodeNew_dpdwn).empty();
                        customerCodeNew_dpdwn.append($('<option/>', { value: -1, text: 'Select Customer Code' }));
                        $(data).each(function (index, item) {

                            tempCustomerCodeArr.push(item.customerCode);//is this really needed?
                            customerCodeNew_dpdwn.append($('<option/>', { value: item.customerCode, text: item.customerCode }));
                        });
                    }
                });
                //end fill the customer code dropdown
            })

            //begin customer code dropdown change
            customerCodeNew_dpdwn.change(function () {

                var currCustomerCode = $(this).val();
                console.clear();

                if (currCustomerCode == '-1') {
                    $("#customer-name-new").val('');
                    $("#customer-location-new").val('');
                }
                else {
                    $.ajax({
                        url: '/DataService.asmx/GetCustomerInfoByJobID',
                        method: 'post',
                        dataType: 'json',
                        data: { jobID: '%' },
                        success: function (data) {

                            $(data).each(function (index, item) {

                                if (item.customerCode == currCustomerCode) {
                                    //console.log("Selected customerCode: " + item.customerCode)
                                    //console.log("Selected customerName: " + item.customerName)
                                    //console.log("Selected address: " + item.address)
                                    $("#customer-name-new").val(item.customerName);
                                    $("#customer-location-new").val(item.address);
                                }
                            });
                        }
                    });
                }
            });
            //end customer code dropdown change

            $(".jobEditForm.btn_save").click(function () {

                if (fn_rowFilled($(this))) {

                    var modal = $(this).parent().parent();
                    var temp_customerCode = modal.find('.customer-code').val()
                    var temp_customerContact = modal.find('.customer-name').val()
                    var temp_jobDescription = modal.find('.job-description').val()
                    var temp_id = modal.find('.id').val()

                    var data = {
                        customerCode: temp_customerCode,
                        customerContact: temp_customerContact,
                        jobDescription: temp_jobDescription,
                        id: temp_id
                    };

                    fn_showSpinner();

                    $.ajax({
                        url: '/Customers/UpdateCustomer',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            window.location.href = response;
                        },
                        error: function (response) {
                            console.log("an error!");
                            $(response).each(function (index, item) {

                                //var modelErrors = item.ModelErrors
                                //console.log(item.name)
                                //console.log(item.Email)
                                //console.log(item.ModelErrors)
                                console.log(item.name)
                            });
                        }
                    });
                }
            });

            $(".jobEditForm.btn_delete").click(function () {

                var modal = $(this).parent().parent().parent();
                var temp_customerCode = modal.find('.customer-code').val()
                var temp_customerContact = modal.find('.customer-name').val()

                var data = {
                    customerCode: temp_customerCode,
                };

                fn_showSpinner();

                $.confirm({
                    title: 'Delete Customer ' + temp_customerContact + ': ' + temp_customerCode + '?',
                    content: '',
                    buttons: {
                        confirm: function () {
                            fn_showSpinner();
                            $.ajax({
                                url: '/Customers/DeleteCustomer',
                                method: 'post',
                                contentType: 'application/json',
                                dataType: 'json',
                                data: JSON.stringify(data),
                                traditional: true,
                                success: function (response) {
                                    window.location.href = response;
                                }
                            });
                        },
                        cancel: function () {
                        }
                    }
                });
            });

            $(".returnedRecords .Btn_delete").click(function () {

                var currentRow = $(this).parent().parent();
                var temp_customerCode = currentRow.find('.customerCode_div').html()

                var data = {
                    customerCode: temp_customerCode,
                };

                $.confirm({
                    title: 'Delete Customer ' + temp_customerCode + '?',
                    content: '',
                    buttons: {
                        confirm: function () {
                            fn_showSpinner();
                            $.ajax({
                                url: '/Customers/DeleteCustomer',
                                method: 'post',
                                contentType: 'application/json',
                                dataType: 'json',
                                data: JSON.stringify(data),
                                traditional: true,
                                success: function (response) {
                                    window.location.href = response;
                                }
                            });
                        },
                        cancel: function () {
                        }
                    }
                });
            });

            function fn_showSpinner() {
                $.LoadingOverlay("show", {
                    image: "",
                    fontawesome: "fa fa-cog fa-spin"
                });
            }

            $('.customer-code, .customer-name, .job-description').keyup(function () {
                $(this).val($(this).val().toUpperCase());
            });

            //BEGIN MISCELLANEOUS SECTION

            //enable the select2 add-on
            function fn_enableSelect2() {

                $('#customer-code-new').select2({
                    width: "100%",
                    placeholder: "Select Customer",
                    closeOnSelect: "false"
                })
            }

            //disable the select2 add-on
            function fn_disableSelect2() {
                $('#customer-code-new').select2('destroy')
            }

            //END MISCELLANEOUS SECTION

            //BEGIN VALIDATION BEFORE SAVING SECTION
            function fn_rowFilled(button) {
                var currentRow = button.parent().parent();
                var rowFilled = true;
                var temp_customerCode = currentRow.find(".customer-code").val();
                var temp_customerContact = currentRow.find(".customer-name").val();
                var temp_jobDescription = currentRow.find(".job-description").val();

                var temp_customerCodeMatch = temp_customerCode.match(/^([A-Z]{3})$/);//maches the form ABC
                var temp_jobDescriptionMatch = temp_jobDescription.match(/([A-Za-z ]+), ([A-Za-z]{2}$)/);//maches the form LAS VEGAS, NV

                //if (temp_customerCode.length < 3) {
                if (!temp_customerCodeMatch) {
                    $.alert({
                        title: 'Error!',
                        content: 'Customer code must be at least 3 letters.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                if (temp_customerContact.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'Customer name must not be empty.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                if (!temp_jobDescriptionMatch) {
                    $.alert({
                        title: 'Error!',
                        content: 'Location must not be empty and must match the form City, ST.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }
                return rowFilled;
            }
            //END VALIDATION BEFORE SAVING SECTION

            $(".Btn_add").click(function () {

                //if (fn_rowFilled($(this))) {

                //fn_produceParsedShortNames($(this));
                //fn_disableSelect2();
                var currentRow = $(this).parent().parent();
                //console.log(currentRow.attr("class"));

                //var cleaned_narrDiv = fn_cleanupDataEntryFields(currentRow.find(".narr_div").html());
                //currentRow.find(".narr_div").html(cleaned_narrDiv);//set the content of .narr_div to cleaned html

                currentRow.find(".name_input").attr("disabled", "true");//lock the name field for edits
                currentRow.find(".email_input").attr("disabled", "true");//lock the name field for edits
                currentRow.find(".Btn_add").hide();//remove the add button, only needed for new work descriptions
                currentRow.find(".Btn_clear").hide();//remove the clear button, only needed for new work descriptions
                currentRow.find(".Btn_edit").removeAttr("hidden");//show the edit button, only needed for work description line entries
                currentRow.find(".Btn_delete").removeAttr("hidden");//show the delete button, only needed for work description line entries
                //currentRow.last().find(".narr_div").css('border-bottom-style', 'none');
                //currentRow.find(".dpdwn_parsed_div").css('border-bottom-style', 'none');
                //currentRow.find(".button_div").css('border-bottom-style', 'none');

                indexJobCrspdtEntries_Add = indexJobCrspdtEntries_Add + 1;

                $(".jobCrspdtLine_template_row_hidden").removeAttr("hidden");
                currentRow.prop("id", "jobCrspdtLine_" + indexJobCrspdtEntries_Add).appendTo("#jobCrspdtLine_template");
                $("#jobCrspdtLine_" + indexJobCrspdtEntries_Add).prop("class", " row addRecord jobCrspdtLine");
                $("#jobCrspdtLine_" + indexJobCrspdtEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                $(".jobCrspdtLine_template_row_hidden").clone(true).prop("class", "row entryRow jobCrspdtLine_template_row_active").appendTo("#jobCrspdtLine_template");
                $(".jobCrspdtLine_template_row_hidden").attr("hidden", "true");


                //fn_enableSelect2();
                //enable_disableSave();
                //}
            });

            $(".Btn_edit").click(function () {
                var currentRow = $(this).parent().parent();

                $(this).hide();
                $(currentRow).find(".Btn_save").removeAttr("hidden");
                $(currentRow).find(".Btn_save").show();

                currentRow.find(".name_input").removeAttr("disabled");//
                currentRow.find(".email_input").removeAttr("disabled");//
                $(currentRow).find(".name_input, .email_input").css("color", "red");
            });

            $(".Btn_save").click(function () {

                //if (fn_rowFilled($(this))) {

                var currentRow = $(this).parent().parent();
                //var cleaned_narrDiv = fn_cleanupDataEntryFields(currentRow.find(".narr_div").html());
                //currentRow.find(".narr_div").html(cleaned_narrDiv);//set the content of .narr_div to cleaned html

                $(this).hide();
                $(currentRow).find(".Btn_edit").removeAttr("hidden");
                $(currentRow).find(".Btn_edit").show();

                currentRow.find(".name_input").attr("disabled", "true");//lock the name field for edits
                currentRow.find(".email_input").attr("disabled", "true");//lock the name field for edits
                $(currentRow).find(".name_input, .email_input").css("color", "black");

                //}
                //else {

                //    $.alert({
                //        title: 'Error!',
                //        content: 'One or more row entries incorrect.  Narrative section must 10 or greater, at least one team member must be added and hours must be of form H.0, H.25, H.5, or H.75.',
                //    });
                //}
            });

            $(".Btn_delete").click(function () {
                var currentRow = $(this).parent().parent();
                //var currentNumValidRecs = $(".returnedRecords.workDescLine").length + indexWorkDescEntries_Add;
                temp_LineClass = $(currentRow).prop("class");

                //if this line is a new record, simply remove it
                if (temp_LineClass.includes("addRecord")) {
                    $(currentRow).remove();
                }

                //if this line is a returned record, set its class to deletedRecords
                //if (temp_LineClass.includes("returnedRecords")) {

                //    //used to change the class of a returned record to deleted record for later processing with a delete operation
                //    if (temp_LineClass.includes("workDescLine")) {
                //        if (currentNumValidRecs > 1) {//if there is at least one more work description entry, then go ahead and delete this entry
                //            $($(currentRow)).prop("class", "row deletedRecords workDescLine");
                //            $($(currentRow)).find(".button_div .Btn_edit").attr("disabled", "true");
                //            $($(currentRow)).find(".button_div .Btn_delete").attr("disabled", "true");
                //            $($(currentRow)).find(".Btn_rtndRecord").attr("hidden", "true");
                //            $($(currentRow)).find(".Btn_deletedRecord").removeAttr("hidden");
                //            recordsToDeleteStatus = 1;
                //        }
                //        else {
                //            $.alert({
                //                title: 'Cannot Delete!',
                //                content: 'Must have at least one copied record or added record in the work description section.',
                //            });
                //        }
                //    }
                //}
            });

            function fn_loadEntries_Add() {

                var subJobTypes_div_Add = $(".subJobTypes_div").find(".sub-job-type_input");

                $(subJobTypes_div_Add).each(function (index) {

                    var temp_subJobTypeID = $(this).val();
                    var temp_subJobTypeStatus = $(this).prop('checked');

                    //console.log("Sub-job Type ID " + temp_subJobTypeID + " selected status is: " + temp_subJobTypeStatus);

                    if (temp_subJobTypeStatus) {
                        subJobTypes_Add.push(temp_subJobTypeID)
                    }                    
                });

                var jobCrspdt_div_Add = $(".addRecord.jobCrspdtLine");

                $(jobCrspdt_div_Add).each(function (index) {

                    var temp_name = $(this).find(".name_input").val();
                    var temp_email = $(this).find(".email_input").val();

                    jobCrspdtInfo_Add.push([temp_name, temp_email]);
                });

                for (var i = 0; i < jobCrspdtInfo_Add.length; i++) {

                    console.log(jobCrspdtInfo_Add[i][0]);
                    console.log(jobCrspdtInfo_Add[i][1]);

                }

                //var workDescUserNamesArrTemp = [];

                    //currentDropdownLine_Add = $(this).parent().attr("id");
                    //workDescTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    //$(workDescTeam_dpdwn_Content_Add).each(function (index2) {

                    //    var tempworkDescTeam_dpdwn_ID = $(workDescTeam_dpdwn_Content_Add[index2]).attr("id");
                    //    var regex = /\w+$/;
                    //    var temp_workDescTeam_dpdwn_ID_object = tempworkDescTeam_dpdwn_ID.match(regex);
                    //    var temp_UserID = temp_workDescTeam_dpdwn_ID_object[0];

                    //    workDescUserNamesArrTemp.push(temp_UserID);
                    //});

                    //workDesc_Add.push([$(workDescTeam_narr_div_Content_Add[index1]).html(), 0, workDescUserNamesArrTemp]);
                    //console.log(workDesc_Add);

                    //if (recordsToAddStatus == 0) {
                    //    recordsToAddStatus = 1;
                    //}
            }

            function fn_buildJsonObjects() {
                //BEGIN BUILD THE WORK DESCRIPTION JSON OBJECT
                //if there are no work description time entries to add, set the json object to null
                if (jobCrspdtInfo_Add.length < 1) {
                    jobCrspdtInfoJson_Add = null
                }
                else {
                    for (var i = 0; i < jobCrspdtInfo_Add.length; i++) {
                        jobCrspdtInfoJson_Add[i] = {
                            jobCrspdtName: jobCrspdtInfo_Add[i][0],
                            jobCrspdtEmail: jobCrspdtInfo_Add[i][1]
                        };
                    }
                }
                console.log("jobCrspdtInfoJson_Add:");
                console.log(jobCrspdtInfoJson_Add);

                //END BUILD THE WORK DESCRIPTION JSON OBJECT                
            }

        });//end document read jquery statements
    </script>
</head>

@*BEGIN USER SECTION*@
<hr class="sectionSeparator">
<div class="col-md-12" style="padding:0px;">
    <span><strong>Add a New Job</strong></span>
    <span>
        <button class="btn btn-light btn-sm" data-toggle="modal" data-target="#jobNewForm">
            <i class="far fa-plus-square fa-2x" style="color:black;"></i>
        </button>
    </span>
</div>
<hr class="sectionSeparator">
@*BEGIN RETURNED RECORDS*@
<div class="container" id="customerData_container" style="overflow:auto; height: calc(100vh - 150px)">
    <div class="table-responsive">
        <table id="dt_customerData" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th class="">
                        <span>Job ID</span>
                    </th>
                    <th class="">
                        Customer Code
                    </th>
                    <th class="">
                        Customer Contact
                    </th>
                    <th class="">
                        Work Description
                    </th>
                    <th class="">
                        Active
                    </th>
                    <th class="">
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var job in Model.jobs)
                {
                    //BEGIN TEMPORARY LOOP VARIABLES
                    string temp_jobID = job.jobID;
                    string temp_customerCode = job.customerCode;
                    string temp_customerContact = job.customerContact;
                    string temp_jobDescription = job.description;
                    bool temp_active = job.active;
                    int temp_id = job.id;
                    //END TEMPORARY LOOP VARIABLES

                    @*<hr class="sectionSeparator">*@
                    <tr class="returnedRecords" id="" style="">
                        <td class="jobID_div">@temp_jobID</td>
                        <td class="customerCode_div">@temp_customerCode</td>
                        <td class="customerContact_div">@temp_customerContact</td>
                        <td class="jobDescription_div">@temp_jobDescription</td>
                        <td class="active_div">
                            @if (temp_active)
                            {
                                <i class="fas fa-check-circle fa-2x" style="color:lawngreen;"></i>
                            }
                            else
                            {
                                <i class="fas fa-check-circle fa-2x" style="color:red;"></i>
                            }
                        </td>
                        <td class="id_div" hidden>@temp_id</td>
                        <td class="button_div" style="padding:0px;">
                            <button class="btn btn-light btn-sm Btn_edit" data-toggle="modal" data-target="#jobEditForm" data-job-id="@temp_jobID" data-customer-code="@temp_customerCode"
                                    data-customer-contact="@temp_customerContact" data-job-description="@temp_jobDescription" data-active="@temp_active" data-id="@temp_id">
                                <i class="far fa-edit fa-2x" style="color:black;">
                                </i>
                            </button>
                            <button class="btn btn-light btn-sm Btn_delete"><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@*END RETURNED RECORDS*@
@*BEGIN EDIT CUSTOMER MODAL TEMPLATE*@
<div class="modal fade" id="jobEditForm" tabindex="-1" role="dialog" aria-labelledby="jobEditForm" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="float-left">
                    <h5 class="modal-title" id="jobEditForm">Edit Job</h5>
                </div>
                <div class="float-none">
                    <button type="button" class="btn btn-light btn-sm jobEditForm" data-toggle="modal" data-target="#jobNewForm"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>
                    <button type="button" class="btn btn-light btn-sm jobEditForm btn_delete"><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                <label for="job-id" class="col-form-label">Job ID:</label>
                                <input type="text" class="form-control job-id" maxlength="10">
                                <label for="customer-code" class="col-form-label">Customer Code:</label>
                                <input type="text" class="form-control customer-code" maxlength="3">
                                <label for="customer-name" class="col-form-label">Customer Name:</label>
                                <input type="text" class="form-control customer-name" maxlength="50" disabled value="dead for the db">
                                <label for="customer-location" class="col-form-label">Customer Location:</label>
                                <input type="text" class="form-control customer-location" disabled value="dead for the db">
                                <label for="customer-contact" class="col-form-label">Customer Contact:</label>
                                <input type="text" class="form-control customer-contact">
                            </div>
                            <div class="col-6">
                                <label for="job-id" class="col-form-label">Job ID:</label>
                                <input type="text" class="form-control job-id" maxlength="3">
                                <label for="normal-hours-start" class="col-form-label">Normal Hours Start:</label>
                                <input type="time" class="form-control normal-hours-start">
                                <label for="normal-hours-end" class="col-form-label">Normal Hours End:</label>
                                <input type="time" class="form-control normal-hours-end">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <label for="job-description" class="col-form-label">Job Description:</label>
                                <input type="text" class="form-control job-description" maxlength="50">
                            </div>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input active" type="checkbox" value="">
                            <label class="form-check-label" for="">
                                Job Active
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn jobEditForm btn_save" value="">Save</button>
                <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
@*END EDIT CUSTOMER MODAL TEMPLATE*@
@*BEGIN NEW CUSTOMER MODAL TEMPLATE*@
<div class="modal fade" id="jobNewForm" tabindex="-1" role="dialog" aria-labelledby="jobNewForm" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Job</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3"><strong>Job ID</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-id" maxlength="10">
                    </div>
                    <div class="col-sm-auto">
                        <div class="form-check">
                            <input class="form-check-input job-active" type="checkbox" id="">
                            <label class="form-check-label" for="job-active">
                                <strong>Job Active</strong>
                            </label>
                        </div>
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3"><strong>Customer Code</strong></div>
                    <div class="col-md-3">
                        <select class="customer-code" id="customer-code-new">
                        </select>
                    </div>
                    <div class="col-md-3"><strong>Customer Name</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control customer-name" id="customer-name-new" maxlength="50"
                               disabled value="">
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Customer Location</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control customer-location" id="customer-location-new"
                               maxlength="50" disabled value="">
                    </div>
                    <div class="col-md-3 col-form-label"><strong>Customer Contact</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control customer-contact" maxlength="50">
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3"><strong>Normal Hours Start</strong></div>
                    <div class="col-md-3">
                        <input type="time" class="form-control normal-hours-start">
                    </div>
                    <div class="col-md-3"><strong>Normal Hours End</strong></div>
                    <div class="col-md-3">
                        <input type="time" class="form-control normal-hours-end" id="">
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Normal Hours Daily</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control normal-hours-daily" id="" maxlength="2" value="8">
                    </div>
                    <div class="col-md-4">
                        <div class="form-check">
                            <input class="form-check-input double-time-hours" type="checkbox" id="">
                            <label class="form-check-label" for="double-time-hours">
                                <strong>Double Time Hours</strong>
                            </label>
                        </div>
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Job Description</strong></div>
                    <div class="col-md-9">
                        <textarea class="form-control job-description" id="" rows="3" style="resize: none;"></textarea>
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-5 col-form-label" style="">
                        <strong>Sub-job Types</strong>
                        <div class="subJobTypes_div">
                            @foreach (var subJobtype in Model.subJobTypes)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                byte temp_subJobID = subJobtype.subJobID;
                                string temp_description = subJobtype.description;
                                //END TEMPORARY LOOP VARIABLES

                                <input class="sub-job-type_input" type="checkbox" id="sub-job-type_@temp_subJobID"
                                       name="sub-job-type_@temp_subJobID" value="@temp_subJobID">
                                <label class="sub-job-type_label"
                                       for="sub-job-type_@temp_subJobID">@temp_description</label><br>
                                }
                        </div>
                    </div>
                    <div class="col-md-7" style="">
                        <div class="row">
                            <div class="col-md-12" style="padding:0px;"><strong>Job Resources</strong></div>
                        </div>
                        <div class="row">
                            <div class="col-md-2 tbl_header" style="padding:0px;">Type</div>
                            <div class="col-md-8 tbl_header" style="padding:0px;">Resource</div>
                            <div class="col-md-2 tbl_header" style="padding:0px;">Rate</div>
                        </div>
                        @*<div class="jobResourceTypes_div" style="padding:0px; margin:0px;">*@
                        <div class="" style="padding:0px; margin:0px;">
                            @*<div class="" style="padding:0px; margin:0px;">*@
                            @foreach (var resourceType in Model.resourceTypes)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                byte temp_resourceTypeID = resourceType.resourceTypeID;
                                string temp_resourceType = resourceType.resourceType;
                                string temp_description = resourceType.description;
                                //string temp_rate = resourceType.description;
                                //END TEMPORARY LOOP VARIABLES

                                <div class="row tbl_returned-row">
                                    <div class="col-md-2 tbl_returned-cell">
                                        @temp_resourceType
                                    </div>
                                    <div class="col-md-8 tbl_returned-cell">
                                        @temp_description
                                    </div>
                                    <div class="col-md-2 tbl_returned-cell">
                                        rate
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Job Correspondents</strong></div>
                    <div class="col-md-3 col-form-label" style="padding:5px;">Name</div>
                    <div class="col-md-3 col-form-label" style="padding:5px;">E-mail</div>
                </div>
                @*BEGIN NEW JOB CORRESPONDENT TEMPLATE*@
                <div class="" id="jobCrspdtLine_template" style="">
                    <div class="row entryRow jobCrspdt_template_row_active">
                        <div class="col-md-3" style=""></div>
                        <div class="col-md-3 name_div" style="padding:0px;">
                            <input type="text" class="form-control name_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 email_div" style="padding:0px;">
                            <input type="text" class="form-control email_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 button_div jobCrspdt_button_div" style="padding:0px;">
                            <button id="test_add" class="btn btn-light btn-sm Btn_add newJobCrspdtBtn_add">
                                <i class="far fa-plus-square fa-2x" style="color:black;"></i>
                            </button>

                            <button id="" class="btn btn-light btn-sm Btn_edit lineJobCrspdtBtn_edit" hidden>
                                <i class="far fa-edit fa-2x" style="color:black;"></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_save lineJobCrspdtBtn_save' hidden>
                                <i class='far fa-save fa-2x' style='color: black;'></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_delete lineJobCrspdtBtn_delete' hidden>
                                <i class='far fa-minus-square fa-2x' style='color: black;'></i>
                            </button>
                        </div>
                    </div>

                    <div class="row entryRow jobCrspdtLine_template_row_hidden" id="" style="" hidden>
                        <div class="col-md-3" style=""></div>
                        <div class="col-md-3 name_div" style="padding:0px;">
                            <input type="text" class="form-control name_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 email_div" style="padding:0px;">
                            <input type="text" class="form-control email_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 button_div jobCrspdt_button_div" style="padding:0px;">
                            <button id="" class="btn btn-light btn-sm Btn_add newJobCrspdtBtn_add">
                                <i class="far fa-plus-square fa-2x" style="color:black;"></i>
                            </button>

                            <button id="" class="btn btn-light btn-sm Btn_edit lineJobCrspdtBtn_edit" hidden>
                                <i class="far fa-edit fa-2x" style="color:black;"></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_save lineJobCrspdtBtn_save' hidden>
                                <i class='far fa-save fa-2x' style='color: black;'></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_delete lineJobCrspdtBtn_delete' hidden>
                                <i class='far fa-minus-square fa-2x' style='color: black;'></i>
                            </button>
                        </div>
                    </div>
                </div>
                @*END NEW WORK DESCRIPTION TEMPLATE*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn jobNewForm btn_save" value="">Save</button>
                <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
@*
    </div>*@
@*END NEW CUSTOMER MODAL TEMPLATE*@

@*END CUSTOMER SECTION*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
