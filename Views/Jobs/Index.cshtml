@model allpax_service_record.Models.View_Models.vm_Jobs

@*@model IEnumerable<allpax_service_record.Models.View_Models.vm_Jobs>*@

@{
    ViewBag.Title = "Jobs";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/underscore@1.11.0/underscore-min.js"></script>

    <style>

        .active_div {
            text-align: center
        }

        /*AN INVISIBLE HORIZONTAL SPACE*/
        .sectionSeparator {
            margin: 1px;
            opacity: 0;
        }

        table {
            /*table-layout: auto !important;*/
            table-layout: fixed !important;
        }

        thead th, tbody td, tfoot td, tfoot th {
            /*width: auto !important;*/
            white-space: nowrap;
        }

        td {
            overflow: auto;
        }

        .subJobTypes_div {
            height: 200px;
            /*width: 100%;*/
            overflow: auto;
        }

        .jobResourceTypes_div {
            height: 200px;
            /*width: 100%;*/
            /*overflow: auto;*/
            overflow-y: auto;
        }

        .resourceTypeID_div, .description_div, .resourceRate_div {
            border-left: 1px solid black;
            border-bottom: 1px solid black;
            padding: 0px;
            margin: 0px;
        }

        .sub-job-type_input, .sub-job-type_label, .jobResource_Line {
            padding: 0px;
            margin: 0px;
        }

        .tbl_header {
            border: 1px solid black;
            padding: 0px;
        }

        .tbl_returned-cell {
            border-left: 1px solid black;
            border-bottom: 1px solid black;
            border-right: 1px solid black;
            /*padding: 5px;*/
        }

        .sectionSeparator {
            margin: 1px;
            opacity: 0;
        }

        /*@@media (min-width: 992px) {
            .modal-dialog {
                max-width: 60%;
            }
        }*/

        /*.modal-dialog {
            position: relative;
            display: table;*/ /*This is important*/
        /*overflow-y: auto;
            overflow-x: auto;
            width: auto;
            min-width: 300px;
        }*/

        /*BEGIN CHANGE LAYOUT FOR MOBILE*/
        @@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {
            /* Force table to not be like tables anymore */
            table, thead, tbody, th, td, tr {
                display: block;
            }
                /* Hide table headers (but not display: none;, for accessibility) */
                thead tr {
                    position: absolute;
                    top: -9999px;
                    left: -9999px;
                }

            tr {
                border: 1px solid #ccc;
            }

            td {
                /* Behave  like a "row" */
                border: none;
                border-bottom: 1px solid #eee;
                position: relative;
                padding-left: 50%;
            }

                td:before {
                    /* Now like a table header */
                    position: absolute;
                    /* Top/left values mimic padding */
                    top: 6px;
                    left: 6px;
                    width: 45%;
                    padding-right: 10px;
                    white-space: nowrap;
                }
            /*END CHANGE LAYOUT FOR MOBILE*/
        }
    </style>
    <script>
        $(document).ready(function () {//begin document read jquery statements
            var indexJobCrspdtEntries_Add = 0;
            var subJobTypes_Add = [];

            var jobResources_Add = [];
            var jobResourcesJson_Add = [];

            var jobCrspdtInfo_Add = [];
            var jobCrspdtInfoJson_Add = [];

            var subJobTypeIDs_RtndRecs = [];//array which holds which subJobTypeIDs are stored in the database
            //var subJobTypeIDs_SlctdRecs = [];//array which holds which subJobTypeIDs are selected in the modal

            var jobResource_RtndRecs = [];//array which holds which jobResourceIDs are stored in the database
            var jobResourceIDs_RtndRecs = [];//array which holds which jobResourceIDs are stored in the database
            var jobRates_RtndRecs = [];//array which holds which job resource rates are stored in the database
            //var jobCrspdts_RtndRecs = [];//array which holds which jobCrspdts are stored in the database

            fn_enableSelect2();
            //fn_loadRtndRecs();

            //////////////////BEGIN THE COMMON NEW JOB AND EDIT JOB MODAL SECTION

            $(".newJobCrspdtBtn_add").click(function () {

                if (fn_jobCrspdtValidate($(this))) {

                var currentRow = $(this).parent().parent();
                var currentFormID = "#" + currentRow.parents().eq(4).attr("id");
                var jobCrspdtLine_templateID = "#" + currentRow.parent().attr("id");

                //console.log(currentRow);
                //console.log(jobCrspdtLine_templateID);
                //console.log(currentFormID);

                currentRow.find(".name_input").attr("disabled", "true");//lock the name field for edits
                currentRow.find(".email_input").attr("disabled", "true");//lock the email field for edits
                currentRow.find(".Btn_add").hide();//hide the add button
                currentRow.find(".Btn_edit").removeAttr("hidden");//show the edit button
                currentRow.find(".Btn_delete").removeAttr("hidden");//show the delete button

                indexJobCrspdtEntries_Add = indexJobCrspdtEntries_Add + 1;

                //$("#jobNewForm .jobCrspdtLine_template_row_hidden").removeAttr("hidden");
                $(currentFormID + " .jobCrspdtLine_template_row_hidden").removeAttr("hidden");

                //currentRow.prop("id", "jobCrspdtLine_" + indexJobCrspdtEntries_Add).appendTo("#jobCrspdtLine_template_new");
                currentRow.prop("id", "jobCrspdtLine_" + indexJobCrspdtEntries_Add).appendTo(jobCrspdtLine_templateID);

                $("#jobCrspdtLine_" + indexJobCrspdtEntries_Add).prop("class", " row addRecord jobCrspdtLine");
                $("#jobCrspdtLine_" + indexJobCrspdtEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                //$("#jobNewForm .jobCrspdtLine_template_row_hidden").clone(true).prop("class", "row entryRow jobCrspdtLine_template_row_active").appendTo("#jobCrspdtLine_template_new");
                //$("#jobNewForm .jobCrspdtLine_template_row_hidden").clone(true).prop("class", "row entryRow jobCrspdtLine_template_row_active").appendTo(jobCrspdtLine_templateID);
                $(currentFormID + " .jobCrspdtLine_template_row_hidden").clone(true).prop("class", "row entryRow jobCrspdtLine_template_row_active").appendTo(jobCrspdtLine_templateID);

                //$("#jobNewForm .jobCrspdtLine_template_row_hidden").attr("hidden", "true");
                $(currentFormID + " .jobCrspdtLine_template_row_hidden").attr("hidden", "true");

                //enable_disableSave();
                }
            });

            $("#jobNewForm .lineJobCrspdtBtn_edit, #jobEditForm .lineJobCrspdtBtn_edit").click(function () {
                var currentRow = $(this).parent().parent();

                $(this).hide();
                $(currentRow).find(".Btn_save").removeAttr("hidden");
                $(currentRow).find(".Btn_save").show();

                currentRow.find(".name_input").removeAttr("disabled");//
                currentRow.find(".email_input").removeAttr("disabled");//
                $(currentRow).find(".name_input, .email_input").css("color", "red");
            });

            $("#jobNewForm .lineJobCrspdtBtn_save, #jobEditForm .lineJobCrspdtBtn_save").click(function () {

                if (fn_jobCrspdtValidate($(this))) {


                var currentRow = $(this).parent().parent();
                temp_LineClass = $(currentRow).prop("class");

                $(this).hide();
                $(currentRow).find(".Btn_edit").removeAttr("hidden");
                $(currentRow).find(".Btn_edit").show();

                currentRow.find(".name_input").attr("disabled", "true");//lock the name field for edits
                currentRow.find(".email_input").attr("disabled", "true");//lock the name field for edits

                if (temp_LineClass.includes("returnedRecords edit")) {

                    $(currentRow).find(".name_input, .email_input").css("color", "red");
                }
                else {
                    $(currentRow).find(".name_input, .email_input").css("color", "black");
                }
                }
            });

            $(".jobCrspdt_button_div .Btn_delete").click(function () {
                var currentRow = $(this).parent().parent();
                temp_LineClass = $(currentRow).prop("class");

                //if this line is a new record, simply remove it
                if (temp_LineClass.includes("addRecord")) {
                    $(currentRow).remove();
                }

                //if this line is a returned record, set its class to deletedRecords
                if (temp_LineClass.includes("returnedRecords")) {

                    //used to change the class of a returned record to deleted record for later processing with a delete operation
                    $($(currentRow)).prop("class", "row returnedRecords delete jobCrspdtLine");

                    currentRow.find(".name_input, .email_input").css("text-decoration", "line-through");
                    currentRow.find(".name_input, .email_input").css("color", "red");
                    $(this).find(".fa-minus-square").css("color", "red");
                    currentRow.find(".Btn_edit").attr("disabled", "true");
                }

                if (temp_LineClass.includes("returnedRecords delete")) {

                    //used to change the class of a deleted record back to a returned record
                    $($(currentRow)).prop("class", "row returnedRecords jobCrspdtLine");

                    currentRow.find(".name_input, .email_input").css("text-decoration", "none");
                    currentRow.find(".name_input, .email_input").css("color", "black");
                    $(this).find(".fa-minus-square").css("color", "black");
                    currentRow.find(".Btn_edit").removeAttr("disabled");
                }

                if (temp_LineClass.includes("returnedRecords edit")) {

                    //used to change the class of an edited record to a deleted record
                    $($(currentRow)).prop("class", "row returnedRecords delete jobCrspdtLine");

                    currentRow.find(".name_input, .email_input").css("text-decoration", "line-through");
                    currentRow.find(".name_input, .email_input").css("color", "red");
                    currentRow.find(".fa-edit").css("color", "black");
                    $(this).find(".fa-minus-square").css("color", "red");
                    currentRow.find(".Btn_edit").attr("disabled", "disabled");
                }
            });

            $(".resourceTypeID").on("change", function () {
                var currentRow = $(this).parent().parent();
                temp_LineClass = $(currentRow).prop("class");
                temp_resourceRateInput = currentRow.find(".resourceRate");

                //console.log("currentRow:" + currentRow.attr("class"));

                if ($(this).prop('checked')) {
                    currentRow.find(".resourceRate").removeAttr('disabled');//un-lock the field for edits;
                    //console.log("checked.")
                    if (temp_LineClass.includes("returnedRecords edited")) {
                        temp_resourceRateInput.css("color", "red");
                    }
                }

                else {
                    currentRow.find(".resourceRate").attr("disabled", "true");//lock the field for edits;
                    temp_resourceRateInput.css("color", "black");
                    //console.log("un-checked.")
                }
            });

            $('.job-id').keyup(function () {
                $(this).val($(this).val().toUpperCase());
            });

            //begin customer code dropdown change
            $(".customer-code").change(function () {

                var modal = $(this).parents().eq(2);
                var currCustomerCode = $(this).val();
                var currCustomerName = modal.find(".customer-name");
                var currCustomerLocation = modal.find(".customer-location");

                if (currCustomerCode == '-1') {
                    $("#customer-name-new").val('');
                    $("#customer-location-new").val('');
                }
                else {
                    $.ajax({
                        url: '/DataService.asmx/GetAllCustomers',
                        method: 'post',
                        dataType: 'json',
                        success: function (data) {

                            $(data).each(function (index, item) {

                                if (item.customerCode == currCustomerCode) {
                                    //console.log("Selected customerCode: " + item.customerCode)
                                    //console.log("Selected customerName: " + item.customerName)
                                    //console.log("Selected address: " + item.address)

                                    currCustomerName.val(item.customerName);
                                    currCustomerLocation.val(item.address);
                                }
                            });
                        }
                    });
                }
            });
            //end customer code dropdown change

            //////////////////END THE COMMON NEW JOB AND EDIT JOB MODAL SECTION

            //////////////////BEGIN THE NEW JOB MODAL SECTION

            //reset the new job modal for new inputs
            function fn_resetModalForm(modalID) {

                fn_disableSelect2();

                var allJobCustomerInputs = $(modalID).find(".job-customer-info");
                var allCheckInputs = $(modalID).find("input:checkbox");
                var allTextAreaInputs = $(modalID).find("textarea");
                var allSelectInputs = $(modalID).find("select");
                var startTimeInput = $(modalID).find(".normal-hours-start");
                var endTimeInput = $(modalID).find(".normal-hours-end");
                var normalHoursInput = $(modalID).find(".normal-hours-daily");

                $(allJobCustomerInputs).val('');//reset text boxes
                $(allCheckInputs).prop('checked', false);//reset check boxes
                $(allTextAreaInputs).val('');//reset text areas
                $(allSelectInputs).val(-1);//reset select boxes
                $(startTimeInput).val('06:00');//reset time
                $(endTimeInput).val('18:00');//reset time
                $(normalHoursInput).val('8');//reset normal hours

                fn_enableSelect2();
            }

            $('#jobNewForm').on('show.bs.modal', function (event) {

                indexJobCrspdtEntries_Add = 0;
                fn_resetModalForm("#jobNewForm");//reset the modal for new inputs
                $(".addRecord.jobCrspdtLine").remove();//remove any incomplete job correspondent lines

            })

            $(".jobNewForm.btn_save").click(function () {

                fn_loadEntries_Add();//determine which list items need to be added
                fn_buildJsonObjects();


                if (fn_modalValidate($(this))) {

                fn_showSpinner();

                var modal = $(this).parent().parent();
                var temp_jobID = modal.find('.job-id').val();
                var temp_active = modal.find('.job-active').prop('checked');
                var temp_customerCode = modal.find('.customer-code').val();
                var temp_customerName = modal.find('.customer-name').val();
                var temp_location = modal.find('.customer-location').val();
                var temp_customerContact = modal.find('.customer-contact').val();
                var temp_nrmlHoursStart = modal.find('.normal-hours-start').val();
                var temp_nrmlHoursEnd = modal.find('.normal-hours-end').val();
                var temp_nrmlHoursDaily = modal.find('.normal-hours-daily').val();
                var temp_dblTimeHours = modal.find('.double-time-hours').prop('checked');
                var temp_description = modal.find('.job-description').val();

                var data = {
                    jobID: temp_jobID,
                    active: temp_active,
                    customerCode: temp_customerCode,
                    location: temp_location,
                    customerContact: temp_customerContact,
                    nrmlHoursStart: temp_nrmlHoursStart,
                    nrmlHoursEnd: temp_nrmlHoursEnd,
                    nrmlHoursDaily: temp_nrmlHoursDaily,
                    dblTimeHours: temp_dblTimeHours,
                    description: temp_description,
                    jobSubJobsAdd: subJobTypes_Add,
                    resourceTypes: jobResourcesJson_Add,
                    jobCrspdtInfo: jobCrspdtInfoJson_Add
                };

                //console.log(data);

                $.ajax({
                    url: '/Jobs/AddJob',
                    method: 'post',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    traditional: true,
                    success: function (response) {
                        window.location.href = response;
                    },
                    error: function (response) {
                        fn_hideSpinner();
                        var alertContent = "An error has occurred. \n" + response.responseText;
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });

                }
            });

            function fn_loadEntries_Add() {

                subJobTypes_Add.length = 0;
                jobResources_Add.length = 0;
                jobCrspdtInfo_Add.length = 0;

                var subJobTypes_div_Add = $("#jobNewForm .subJobTypes_div").find(".sub-job-type_input");
                var jobResources_div_Add = $("#jobNewForm .jobResourceTypes_div").find(".jobResource_Line");
                var jobCrspdt_div_Add = $("#jobNewForm .addRecord.jobCrspdtLine");

                $(subJobTypes_div_Add).each(function (index) {

                    var temp_subJobTypeID = $(this).val();
                    var temp_subJobTypeStatus = $(this).prop('checked');

                    if (temp_subJobTypeStatus) {//if this sub-job type is selected..
                        subJobTypes_Add.push(temp_subJobTypeID)//...push it to the array
                    }
                });
                //console.log("subJobTypes_Add");
                //console.log(subJobTypes_Add);

                $(jobResources_div_Add).each(function (index) {

                    var temp_resourceTypeStatus = $(this).find(".resource-type_input.resourceTypeID").prop('checked');
                    var temp_resourceTypeID = $(this).find(".resource-type_input.resourceTypeID").val();
                    var temp_resourceTypeRate = $(this).find(".resource-type_input.resourceRate").val();

                    if (temp_resourceTypeStatus) {//if this resource type is selected..
                        jobResources_Add.push([temp_resourceTypeID, temp_resourceTypeRate]);//...push it to the array
                    }
                });
                console.log("jobResources_Add");
                console.log(jobResources_Add);

                $(jobCrspdt_div_Add).each(function (index) {

                    var temp_name = $(this).find(".name_input").val();
                    var temp_email = $(this).find(".email_input").val();

                    jobCrspdtInfo_Add.push([temp_name, temp_email]);
                });
                //console.log("jobCrspdtInfo_Add");
                //console.log(jobCrspdtInfo_Add);

            }

            function fn_buildJsonObjects() {
                
                //BEGIN BUILD THE JOB RESOURCES JSON OBJECT
                //if there are none to add, set the json object to null

                jobResourcesJson_Add.length = 0;

                if (jobResources_Add.length < 1) {
                    jobResourcesJson_Add = null
                }
                else {
                    for (var i = 0; i < jobResources_Add.length; i++) {
                        jobResourcesJson_Add[i] = {

                            resourceTypeID: jobResources_Add[i][0],
                            rate: jobResources_Add[i][1]
                        };
                    }
                }
                //console.log("jobResourcesJson_Add:");
                //console.log(jobResourcesJson_Add);

                //END BUILD THE JOB RESOURCES JSON OBJECT

                //BEGIN BUILD THE JOB CORRESPONDENT JSON OBJECT
                //if there are none to add, set the json object to null
                if (jobCrspdtInfo_Add.length < 1) {
                    jobCrspdtInfoJson_Add = null
                }
                else {
                    for (var i = 0; i < jobCrspdtInfo_Add.length; i++) {
                        jobCrspdtInfoJson_Add[i] = {
                            //jobCrspdtName: jobCrspdtInfo_Add[i][0],
                            //jobCrspdtEmail: jobCrspdtInfo_Add[i][1]
                            name: jobCrspdtInfo_Add[i][0],
                            email: jobCrspdtInfo_Add[i][1]
                        };
                    }
                }
                //console.log("jobCrspdtInfoJson_Add:");
                //console.log(jobCrspdtInfoJson_Add);

                //END BUILD THE JOB CORRESPONDENT JSON OBJECT
            }

            //////////////////END THE NEW JOB MODAL SECTION

            //////////////////BEGIN THE EDIT JOB MODAL SECTION

            $('#jobEditForm').on('show.bs.modal', function (event) {
                indexJobCrspdtEntries_Add = 0;

                console.clear();
                //console.log("Arrays upon modal load.")
                subJobTypeIDs_RtndRecs.length = 0;
                jobResourceIDs_RtndRecs.length = 0;
                jobRates_RtndRecs.length = 0;

                jobCrspdtID_RtndRecs = [];

                //jobCrspdts_RtndRecs.length = 0;

                fn_disableSelect2();//disable select2 so the selected option can be reached

                var modal = $(this)
                var button = $(event.relatedTarget) // Button that triggered the modal
                var temp_jobID = button.data('job-id') // Extract info from data-* attributes
                var temp_customerCode = button.data('customer-code') // Extract info from data-* attributes
                var temp_customerCode_dpdwn = modal.find('.customer-code option');
                var temp_subJobTypeInput = modal.find('.sub-job-type_input');
                var temp_resourceTypeInput = modal.find('.resource-type_input.resourceTypeID');
                var temp_resourceRateInput;
                var jobCrspdt_template_row_active = modal.find(".jobCrspdt_template_row_active");

                modal.find('.modal-title').text('Job Edit Form');
                modal.find(".returnedRecords").remove();

                //begin get job info by job id
                $.ajax({
                    url: '/DataService.asmx/GetJobInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: temp_jobID },
                    success: function (data) {

                        $(data).each(function (index, item) {

                            modal.find('.job-id').val(temp_jobID);
                            modal.find('.normal-hours-start').val(item.nrmlHoursStart);
                            modal.find('.normal-hours-end').val(item.nrmlHoursEnd);
                            modal.find('.normal-hours-daily').val(item.nrmlHoursDaily);
                            modal.find('.job-description').text(item.description);

                            if (item.active) {
                                modal.find('.job-active').prop('checked', true);
                            }
                            else {
                                modal.find('.job-active').prop('checked', false);
                            }

                            if (item.dblTimeHours) {
                                modal.find('.double-time-hours').prop('checked', true);
                            }
                            else {
                                modal.find('.double-time-hours').prop('checked', false);
                            }
                        });
                    }
                });
                //end get job info by job id

                //set the record's customer as the one selected in the customer dropdown on form load
                $(temp_customerCode_dpdwn).each(function (index) {

                    if ($(this).val() == temp_customerCode) {
                        $(this).prop('selected', true);
                    }

                });

                //begin get customer info by job id
                $.ajax({
                    url: '/DataService.asmx/GetCustomerInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: temp_jobID },
                    success: function (data) {

                        $(data).each(function (index, item) {
                            modal.find('.customer-name').val(item.customerName);
                            modal.find('.customer-location').val(item.address);
                            modal.find('.customer-contact').val(item.customerContact);
                        });
                    }
                });
                //end get customer info by job id

                //begin get sub-job types by job id
                $.ajax({
                    url: '/DataService.asmx/GetSubJobTypesByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: temp_jobID },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            var temp_subJobID = item.subJobID;

                            //store the subJobTypeIDs in the database to an array
                            subJobTypeIDs_RtndRecs.push(temp_subJobID);
                        });

                        //console.log("subJobTypeIDs_RtndRecs:" + subJobTypeIDs_RtndRecs);

                        //get the value of each sub-job type checkbox
                        $(temp_subJobTypeInput).each(function (index, item) {

                            //if the value of the current sub-job type checkbox is part of the subJobTypeIDs_RtndRecs array...
                            if ($.inArray($(this).val(), subJobTypeIDs_RtndRecs) !== -1) {
                                //console.log($(this).val() + " was found in the returned record array.");
                                $(this).prop('checked', true);//...check the input box for the HTML element
                            }

                            else {
                                //console.log($(this).val() + " was not found in the returned record array.");
                                $(this).prop('checked', false);//...un-check the input box for the HTML element
                            }
                        });
                    }
                });
                //end get sub-job types by job id

                //begin get job resources by job id
                $.ajax({
                    url: '/DataService.asmx/GetJobResourcesByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: temp_jobID },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            var temp_resourceTypeID = item.resourceTypeID;
                            var temp_rate = item.rate.toFixed(2);

                            //store the job resource ids in the database to an array
                            jobResourceIDs_RtndRecs.push(temp_resourceTypeID);
                            //store the resource rates in the database to an array
                            jobRates_RtndRecs.push(temp_rate);
                        });

                        //dump jobResourceIDs_RtndRecs array into index 0 of jobResource_RtndRecs
                        jobResource_RtndRecs[0] = jobResourceIDs_RtndRecs;
                        //dump jobRates_RtndRecs array into index 1 of jobResource_RtndRecs
                        jobResource_RtndRecs[1] = jobRates_RtndRecs;

                        //console.log("jobResource_RtndRecs[0]:" + jobResource_RtndRecs[0]);
                        //console.log("jobResourceIDs_RtndRecs:" + jobResourceIDs_RtndRecs);
                        //console.log("jobResource_RtndRecs[1]:" + jobResource_RtndRecs[1]);
                        //console.log("jobRates_RtndRecs:" + jobRates_RtndRecs);

                        //get the value of each sub-job type checkbox
                        $(temp_resourceTypeInput).each(function (index, item) {
                            var currentRow = $(this).parent().parent();
                            temp_resourceRateInput = currentRow.find(".resourceRate");

                            //if the value of the current resource type checkbox is part of the jobResourceIDs_RtndRecs array...
                            //if ($.inArray($(this).val(), jobResourceIDs_RtndRecs) !== -1) {
                            if ($.inArray($(this).val(), jobResource_RtndRecs[0]) !== -1) {

                                var temp_index = jobResourceIDs_RtndRecs.indexOf($(this).val());

                                currentRow.prop("class", " row returnedRecords jobResource_Line");
                                $(this).prop('checked', true);//...check the input box for the HTML element
                                temp_resourceRateInput.val(jobRates_RtndRecs[temp_index]);
                                temp_resourceRateInput.removeAttr('disabled');
                                temp_resourceRateInput.css("color", "black");

                                //console.log("Index of jobResourceIDs_RtndRecs " + temp_index + " has a value of " + jobResourceIDs_RtndRecs[temp_index]);
                                //console.log("Index of jobRates_RtndRecs " + temp_index + " has a value of " + jobRates_RtndRecs[temp_index]);
                                //console.log($(this).val() + " was found in the returned record array.");
                            }

                            else {
                                //console.log($(this).val() + " was not found in the returned record array.");
                                currentRow.prop("class", " row jobResource_Line");
                                $(this).prop('checked', false);//...un-check the input box for the HTML element
                                temp_resourceRateInput.attr("disabled", "true");
                                temp_resourceRateInput.css("color", "black");
                            }
                        });
                    }
                });
                //end get job resources by job id

                //begin get job correspondents by job id
                $.ajax({
                    url: '/DataService.asmx/GetJobCrspdtInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: temp_jobID },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            var temp_jobCrspdtName = item.jobCrspdtName;
                            var temp_jobCrspdtEmail = item.jobCrspdtEmail;
                            var temp_jobCrspdtActive = item.jobCrspdtActive;
                            var temp_jobCrspdtID = item.jobCrspdtID;

                            //store the job resource ids in the database to an array
                            //jobCrspdtID_RtndRecs.push(temp_jobCrspdtID);

                            //add the job correspondents from the database to the form
                            jobCrspdt_template_row_active.clone(true).prop("id", "jobCrspdtLine_" + temp_jobCrspdtID).prependTo("#jobCrspdtLine_template_edit");
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).prop("class", "row returnedRecords jobCrspdtLine");
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).find(".name_input").val(temp_jobCrspdtName);
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).find(".name_input").attr("disabled", "true");
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).find(".email_input").val(temp_jobCrspdtEmail);
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).find(".email_input").attr("disabled", "true");
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).attr("data-job-crspdt-id", temp_jobCrspdtID);
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).find(".Btn_add").remove();
                            $("#jobCrspdtLine_" + temp_jobCrspdtID).find(".Btn_edit, .Btn_delete").removeAttr("hidden");
                        });

                    }
                });
                //end get job correspondents by job id

                fn_enableSelect2();//re-enable select2 after affecting work to allow the selected option to be reached
            })

            //Begin when a resource rate on the edit page is checked or unchecked...
            $("#jobEditForm .resourceRate").on("change", function () {
                var currentRow = $(this).parent().parent();
                temp_LineClass = $(currentRow).prop("class");
                temp_resourceRateInput = $(this);

                //if editing the resource rate of a record stored in the database...
                if (temp_LineClass.includes("returnedRecords")) {

                    //...change the class of that resource line to edited
                    currentRow.prop("class", " row returnedRecords edited jobResource_Line");
                    //...and make the text red to indicate so
                    temp_resourceRateInput.css("color", "red");
                }

                //...otherwise, simply enforce the text to be black if you are adding a resource to the database
                else {
                    temp_resourceRateInput.css("color", "black");
                }
            });
            //End when a resource type on the edit page is checked or unchecked...

            //Begin when a field in the job correspondent is changed...
            $("#jobEditForm .job-crspdt_input").on("change", function () {
                var currentRow = $(this).parent().parent();
                temp_LineClass = $(currentRow).prop("class");

                //...for a returned record...
                if (temp_LineClass.includes("row returnedRecords jobCrspdtLine")) {
                    //...change the class to returned records that are under edit
                    $($(currentRow)).prop("class", "row returnedRecords edit jobCrspdtLine");
                    //...and change the color of the edit symbol to indicate this
                    currentRow.find(".fa-edit").css("color", "red");
                }
            });
            //End when a field in the job correspondent is changed for a returned record...

            //Begin when the save button on the edit job modal is pressed
            $(".jobEditForm.btn_save").click(function () {

                if (fn_modalValidate($(this))) {

                fn_showSpinner();

                console.log("_____________________")
                console.log("Arrays upon modal save press.")

                var modal = $(this).parent().parent();
                var temp_jobID = modal.find('.job-id').val();
                var temp_active = modal.find('.job-active').prop('checked');
                var temp_customerCode = modal.find('.customer-code').val();
                var temp_customerContact = modal.find('.customer-contact').val();
                var temp_nrmlHoursStart = modal.find('.normal-hours-start').val();
                var temp_nrmlHoursEnd = modal.find('.normal-hours-end').val();
                var temp_nrmlHoursDaily = modal.find('.normal-hours-daily').val();
                var temp_dblTimeHours = modal.find('.double-time-hours').prop('checked');
                var temp_description = modal.find('.job-description').val();

                var subJobTypeIDs_SlctdRecs = [];//array which holds which subJobTypeIDs are selected in the modal
                var jobResourceIDs_SlctdRecs = [];//array which holds which jobResourceIDs are selected in the modal
                var jobRates_SlctdRecs = [];//array which holds which jobRates are selected in the modal
                var temp_subJobTypeInput = modal.find('.sub-job-type_input');
                var temp_resourceTypeInput = modal.find('.resource-type_input.resourceTypeID');

                var subJobTypeIDsAddArr = [];
                var subJobTypeIDsDeleteArr = [];

                var jobResourceIDsAddArr = [];
                var jobResourcesJson_Add = [];

                var jobResourceIDsDeleteArr = [];
                var jobResourcesJson_Delete = [];

                var jobResourcesJson_Edit = [];

                var temp_jobCrspdt_div_Add = modal.find('.addRecord.jobCrspdtLine');
                var temp_jobCrspdt_div_Delete = modal.find('.returnedRecords.delete.jobCrspdtLine');
                var temp_jobCrspdt_div_Edit = modal.find('.returnedRecords.edit.jobCrspdtLine');
                var temp_jobCrspdtInfoJson_Add = [];
                var temp_jobCrspdtInfoJson_Delete = [];
                var temp_jobCrspdtInfoJson_Edit = [];

                //var jobResourceIDsSlctdArr = [];
                //var jobResourceRatesSlctdArr = [];
                var jobResourcesSlctdArr = [];

                var generalCounter = 0;

                $(temp_subJobTypeInput).each(function (index, item) {

                    var temp_val = $(this).val();
                    //var currentRow = $(this).parent().parent();
                    //var temp_resourceRateInput = currentRow.find(".resourceRate");

                    //if the the current sub-job type checkbox is checked...
                    if ($(this).prop('checked')) {
                        subJobTypeIDs_SlctdRecs.push(temp_val);//add it to array subJobTypeIDs_SlctdRecs for later comparison to _RtndRecs
                        //console.log(temp_val + " is selected.")

                        //if (currentRow.includes("returnedRecords edited")) {
                        //    console.log("temp_resourceRateInput value to be edited:" + temp_resourceRateInput.val());
                        //}
                    }
                });

                //console.log("generalCounter:" + generalCounter);

                $(temp_resourceTypeInput).each(function (index, item) {

                    var temp_val = $(this).val();
                    var currentRow = $(this).parent().parent();
                    var temp_rate = currentRow.find(".resourceRate").val();

                    //if the the current resource type checkbox is checked...
                    if ($(this).prop('checked')) {

                        jobResourceIDs_SlctdRecs.push(temp_val);//add it to array jobResourceIDs_SlctdRecs for later comparison to _RtndRecs
                        jobRates_SlctdRecs.push(temp_rate);//add it to array jobResourceIDs_SlctdRecs for later comparison to _RtndRecs

                        //console.log("jobResourceID " + temp_val + " is selected with a rate of " + temp_rate);

                        if (currentRow.attr("class").includes("returnedRecords edited")) {

                            //console.log("temp_val value to be edited:" + temp_val);
                            //console.log("temp_rate value to be edited:" + temp_rate);

                            jobResourcesJson_Edit[generalCounter] = {
                                jobID: temp_jobID,
                                resourceTypeID: temp_val,
                                rate: temp_rate,
                            };

                            //console.log("general counter:" + generalCounter);
                            generalCounter++;
                        }
                    }
                });

                generalCounter = 0;

                jobResourcesSlctdArr[0] = jobResourceIDs_SlctdRecs;
                jobResourcesSlctdArr[1] = jobRates_SlctdRecs;

                subJobTypeIDsAddArr = _.difference(subJobTypeIDs_SlctdRecs, subJobTypeIDs_RtndRecs);
                subJobTypeIDsDeleteArr = _.difference(subJobTypeIDs_RtndRecs, subJobTypeIDs_SlctdRecs);
                jobResourceIDsAddArr = _.difference(jobResourceIDs_SlctdRecs, jobResourceIDs_RtndRecs);
                jobResourceIDsDeleteArr = _.difference(jobResourceIDs_RtndRecs, jobResourceIDs_SlctdRecs);

                for (var i = 0, j = 0; i < jobResourcesSlctdArr[0].length; i++) {

                    if ($.inArray(jobResourcesSlctdArr[0][i], jobResourceIDsAddArr) !== -1) {

                        jobResourcesJson_Add[j] = {
                            jobID: temp_jobID,
                            resourceTypeID: jobResourcesSlctdArr[0][i],
                            rate: jobResourcesSlctdArr[1][i],
                        };

                        j++;

                        //console.log("jobResourcesSlctdArr[i][" + i + "] found in jobResourceIDsAddArr.")
                        //console.log("Add id of:" + jobResourcesSlctdArr[0][i]);
                        //console.log("Add rate of:" + jobResourcesSlctdArr[1][i]);
                    }
                }

                for (var i = 0; i < jobResourceIDsDeleteArr.length; i++) {

                    jobResourcesJson_Delete[i] = {
                        jobID: temp_jobID,
                        resourceTypeID: jobResourceIDsDeleteArr[i]
                    };
                }

                //BEGIN PACK UP JOB CORRESPONDENT ADD, EDITS AND DELETES
                $(temp_jobCrspdt_div_Add).each(function (index) {

                    var temp_name = $(this).find(".name_input").val();
                    var temp_email = $(this).find(".email_input").val();

                    temp_jobCrspdtInfoJson_Add[index] = {
                        jobID: temp_jobID,
                        name: temp_name,
                        email: temp_email
                    }
                });

                $(temp_jobCrspdt_div_Delete).each(function (index) {

                    var temp_jobCrspdtID = $(this).attr("data-job-crspdt-id");

                    temp_jobCrspdtInfoJson_Delete[index] = {
                        jobCorrespondentID: temp_jobCrspdtID
                    }
                });

                $(temp_jobCrspdt_div_Edit).each(function (index) {

                    var temp_name = $(this).find(".name_input").val();
                    var temp_email = $(this).find(".email_input").val();
                    var temp_jobCrspdtID = $(this).attr("data-job-crspdt-id");

                    temp_jobCrspdtInfoJson_Edit[index] = {
                        jobID: temp_jobID,
                        name: temp_name,
                        email: temp_email,
                        jobCorrespondentID: temp_jobCrspdtID
                    }
                });
                //END PACK UP JOB CORRESPONDENT ADD, EDITS AND DELETES

                var data = {
                    jobID: temp_jobID,
                    description: temp_description,
                    customerCode: temp_customerCode,
                    customerContact: temp_customerContact,
                    active: temp_active,
                    nrmlHoursStart: temp_nrmlHoursStart,
                    nrmlHoursEnd: temp_nrmlHoursEnd,
                    dblTimeHours: temp_dblTimeHours,
                    nrmlHoursDaily: temp_nrmlHoursDaily,
                    description: temp_description,
                    jobSubJobsAdd: subJobTypeIDsAddArr,
                    jobSubJobsDelete: subJobTypeIDsDeleteArr,
                    resourceTypesAdd: jobResourcesJson_Add,
                    resourceTypesDelete: jobResourcesJson_Delete,
                    resourceTypesEdit: jobResourcesJson_Edit,
                    jobCrspdtInfoAdd: temp_jobCrspdtInfoJson_Add,
                    jobCrspdtInfoDelete: temp_jobCrspdtInfoJson_Delete,
                    jobCrspdtInfoEdit: temp_jobCrspdtInfoJson_Edit
                };



                $.ajax({
                    url: '/Jobs/UpdateJob',
                    method: 'post',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    traditional: true,
                    success: function (response) {
                        serverResponseSuccess = response;
                        //console.log("response is: " + response)
                        window.location.href = serverResponseSuccess;
                    },
                    error: function (response) {
                        fn_hideSpinner();
                        var alertContent = "An error has occurred. \n" + response.responseText;
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });

                //}

                //console.log("subJobTypeIDs_SlctdRecs:" + subJobTypeIDs_SlctdRecs);
                //console.log("subJobTypeIDs to add:" + subJobTypeIDsAddArr);
                //console.log("subJobTypeIDs to delete:" + subJobTypeIDsDeleteArr);
                //console.log("---------------------");
                //console.log("jobResourceIDs to add:" + jobResourceIDsAddArr);
                //console.log("jobResourceIDs to delete:" + jobResourceIDsDeleteArr);

                //console.log("---------------------");
                //console.log("jobResourcesSlctdArr[0]:" + jobResourcesSlctdArr[0]);
                //console.log("jobResourcesSlctdArr[0][0]:" + jobResourcesSlctdArr[0][0]);
                //console.log("jobResourcesSlctdArr[1]:" + jobResourcesSlctdArr[1]);

                //console.log("jobResourceIDs to add:" + jobResourceIDsAddArr);
                //console.log("jobResourcesJson_Add:");
                //console.log(jobResourcesJson_Add);
                //console.log("jobResourceIDs to delete:" + jobResourceIDsDeleteArr);
                //console.log("jobResourcesJson_Delete:");
                //console.log(jobResourcesJson_Delete);

                //console.log("---------------------");
                //console.log("jobResourcesJson_Edit:");
                //console.log(jobResourcesJson_Edit);

                //console.log("---------------------");
                //console.log("temp_jobCrspdtInfoJson_Add:");
                //console.log(temp_jobCrspdtInfoJson_Add);

                //console.log("---------------------");
                //console.log("temp_jobCrspdtInfoJson_Delete:");
                //console.log(temp_jobCrspdtInfoJson_Delete);

                //console.log("---------------------");
                //console.log("temp_jobCrspdtInfoJson_Edit:");
                //console.log(temp_jobCrspdtInfoJson_Edit);

                }
            });
            //End when the save button on the edit job modal is pressed

            //////////////////END THE EDIT JOB MODAL SECTION

            //////////////////BEGIN RETURNED RECORDS SECTION

            $(".returnedRecords .Btn_delete").click(function () {

                var currentRow = $(this).parent().parent();
                var temp_jobID = currentRow.find('.jobID_div').html();
                //var temp_resourceType = currentRow.find('.jobID_div').html();
                //var temp_description = currentRow.find('.description_div').html();

                //console.log("Delete temp_resourceTypeID: " + temp_resourceTypeID);

                var data = {
                    jobID: temp_jobID
                };

                //console.log(data);

                $.confirm({
                    title: "Delete Job: " + temp_jobID + "?",
                    content: '',
                    buttons: {
                        confirm: function () {
                            fn_showSpinner();
                            $.ajax({
                                url: '/Jobs/DeleteJob',
                                method: 'post',
                                contentType: 'application/json',
                                dataType: 'json',
                                data: JSON.stringify(data),
                                traditional: true,
                                success: function (response) {
                                    window.location.href = response;
                                },
                                error: function (response) {
                                    fn_hideSpinner();
                                    var alertContent = "An error has occurred. \n" + response.responseText;
                                    $.alert({
                                        title: 'Alert!',
                                        content: alertContent,
                                    });
                                }
                            });
                        },
                        cancel: function () {
                        }
                    }
                });
            });

            //////////////////END RETURNED RECORDS SECTION

            //////////////////BEGIN MISCELLANEOUS SECTION

            //enable the select2 add-on
            function fn_enableSelect2() {

                $('#customer-code-new').select2({
                    width: "100%",
                    placeholder: "Select Customer",
                    closeOnSelect: "false"
                })

                $('#customer-code-edit').select2({
                    width: "100%",
                    closeOnSelect: "false"
                })
            }

            //disable the select2 add-on
            function fn_disableSelect2() {
                $('#customer-code-new').select2('destroy')
            }

            function fn_showSpinner() {
                $.LoadingOverlay("show", {
                    image: "",
                    fontawesome: "fa fa-cog fa-spin"
                });
            }

            function fn_hideSpinner() {
                $.LoadingOverlay("hide");
            }

            //Begin validation
            function fn_modalValidate(button) {
                var currentRow = button.parent().parent();
                var modalValid = true;

                var temp_jobID = currentRow.find(".job-id").val();
                var temp_customerCode = currentRow.find(".customer-code").val();
                var temp_customerContact = currentRow.find(".customer-contact").val();
                var temp_nrmlHoursStart = currentRow.find(".normal-hours-start").val();
                var temp_nrmlHoursEnd = currentRow.find(".normal-hours-end").val();
                var temp_nrmlHoursDaily = currentRow.find(".normal-hours-daily").val();
                var temp_jobDescription = currentRow.find(".job-description").val();

                if (temp_jobID.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'Job ID must not be empty.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_customerCode == -1) {
                    $.alert({
                        title: 'Error!',
                        content: 'A customer code must be selected.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_customerContact.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'Customer contact must not be empty.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_jobDescription.length < 10) {
                    $.alert({
                        title: 'Error!',
                        content: 'Description must contain at least ten characters.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_nrmlHoursStart.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'A start time must be entered.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_nrmlHoursEnd.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'An end time must be entered.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_nrmlHoursEnd < temp_nrmlHoursStart ) {
                    $.alert({
                        title: 'Error!',
                        content: 'The end time must not be earlier than the start time.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                if (temp_nrmlHoursDaily.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'Normal hours daily must not be empty.',
                    });
                    modalValid = false;
                    return modalValid;
                }

                return modalValid;
            }
            //Begin validation

            //Begin validation
            function fn_jobCrspdtValidate(button) {

                var currentRow = button.parent().parent();
                var jobCrspdtValid = true;

                var temp_name = currentRow.find(".name_input").val();
                var temp_email = currentRow.find(".email_input").val();
                var temp_emailMatch = temp_email.match(/\w+([-+.']\w+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*$/);//

                if (temp_name.length < 1) {
                    $.alert({
                        title: 'Error!',
                        content: 'Name must not be empty.',
                    });
                    jobCrspdtValid = false;
                    return jobCrspdtValid;
                }

                if (!temp_emailMatch) {
                    $.alert({
                        title: 'Error!',
                        content: 'E-mail format is not valid.',
                    });
                    jobCrspdtValid = false;
                    return jobCrspdtValid;
                }

                return jobCrspdtValid;
            }
            //Begin validation

            //////////////////END MISCELLANEOUS SECTION           

        });//end document read jquery statements

    </script>

</head>

@*BEGIN USER SECTION*@
<hr class="sectionSeparator">
<div class="col-md-12" style="padding:0px;">
    <span><strong>Add a New Job</strong></span>
    <span>
        <button class="btn btn-light btn-sm" data-toggle="modal" data-target="#jobNewForm">
            <i class="far fa-plus-square fa-2x" style="color:black;"></i>
        </button>
    </span>
</div>
<hr class="sectionSeparator">
@*BEGIN RETURNED RECORDS*@
<div class="container-md" id="customerData_container" style="overflow:auto; height: calc(100vh - 150px)">
    <div class="table-responsive">
        <table id="dt_customerData" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th class="">
                        <span>Job ID</span>
                    </th>
                    <th class="">
                        Customer Code
                    </th>
                    <th class="">
                        Customer Contact
                    </th>
                    <th class="">
                        Work Description
                    </th>
                    <th class="">
                        Active
                    </th>
                    <th class="">
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var job in Model.jobs)
                {
                    //BEGIN TEMPORARY LOOP VARIABLES
                    string temp_jobID = job.jobID;
                    string temp_customerCode = job.customerCode;
                    string temp_customerContact = job.customerContact;
                    string temp_jobDescription = job.description;
                    bool temp_active = job.active;
                    int temp_id = job.id;
                    //END TEMPORARY LOOP VARIABLES

                    @*<hr class="sectionSeparator">*@
                    <tr class="returnedRecords" id="" style="">
                        <td class="jobID_div">@temp_jobID</td>
                        <td class="customerCode_div">@temp_customerCode</td>
                        <td class="customerContact_div">@temp_customerContact</td>
                        <td class="jobDescription_div">@temp_jobDescription</td>
                        <td class="active_div">
                            @if (temp_active)
                            {
                                <i class="fas fa-check-circle fa-2x" style="color:lawngreen;"></i>
                            }
                            else
                            {
                                <i class="fas fa-check-circle fa-2x" style="color:red;"></i>
                            }
                        </td>
                        <td class="id_div" hidden>@temp_id</td>
                        <td class="button_div" style="padding:0px;">
                            <button class="btn btn-light btn-sm Btn_edit" data-toggle="modal" data-target="#jobEditForm" data-job-id="@temp_jobID" data-customer-code="@temp_customerCode"
                                    data-customer-contact="@temp_customerContact" data-job-description="@temp_jobDescription" data-active="@temp_active" data-id="@temp_id">
                                <i class="far fa-edit fa-2x" style="color:black;">
                                </i>
                            </button>
                            <button class="btn btn-light btn-sm Btn_delete"><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@*END RETURNED RECORDS*@
@*BEGIN EDIT CUSTOMER MODAL TEMPLATE*@
<div class="modal fade" id="jobEditForm" tabindex="-1" role="dialog" aria-labelledby="jobEditForm" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Job</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3"><strong>Job ID</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info job-id" maxlength="8" disabled>
                    </div>
                    <div class="col-sm-auto">
                        <div class="form-check">
                            <input class="form-check-input job-customer-info job-active" type="checkbox">
                            <label class="form-check-label" for="job-active">
                                <strong>Job Active</strong>
                            </label>
                        </div>
                    </div>
                </div>
                <hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3"><strong>Customer Code</strong></div>
                    <div class="col-md-3">
                        <select class="job-customer-info customer-code" id="customer-code-edit">
                            @foreach (var customer in Model.customers)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                string temp_customerCode = customer.customerCode;
                                string temp_customerName = customer.customerName;
                                string temp_address = customer.address;
                                int temp_id = customer.id;
                                //END TEMPORARY LOOP VARIABLES

                                <option value="@temp_customerCode">@temp_customerCode</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3"><strong>Customer Name</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info customer-name" id="customer-name-edit" maxlength="50" disabled value="">
                    </div>
                </div>
                <hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Customer Location</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info customer-location" id="customer-location-edit"
                               maxlength="50" disabled value="">
                    </div>
                    <div class="col-md-3 col-form-label"><strong>Customer Contact</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info customer-contact" maxlength="50">
                    </div>
                </div>
                <hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3"><strong>Normal Hours Start</strong></div>
                    <div class="col-md-3">
                        <input type="time" class="form-control job-customer-info normal-hours-start">
                    </div>
                    <div class="col-md-3"><strong>Normal Hours End</strong></div>
                    <div class="col-md-3">
                        <input type="time" class="form-control job-customer-info normal-hours-end">
                    </div>
                </div>
                <hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Normal Hours Daily</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info normal-hours-daily" maxlength="2" value="8">
                    </div>
                    <div class="col-md-4">
                        <div class="form-check">
                            <input class="form-check-input job-customer-info double-time-hours" type="checkbox">
                            <label class="form-check-label" for="double-time-hours">
                                <strong>Double Time Hours</strong>
                            </label>
                        </div>
                    </div>
                </div>
                <hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Job Description</strong></div>
                    <div class="col-md-9">
                        <textarea class="form-control job-customer-info job-description" rows="3" style="resize: none;"></textarea>
                    </div>
                </div>
                <hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-4 col-form-label" style="">
                        <strong>Sub-job Types</strong>
                        <div class="subJobTypes_div">
                            @foreach (var subJobtype in Model.subJobTypes)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                byte temp_subJobID = subJobtype.subJobID;
                                string temp_description = subJobtype.description;
                                //END TEMPORARY LOOP VARIABLES

                                <input class="sub-job-type_input" type="checkbox" id="sub-job-type_@temp_subJobID"
                                       name="sub-job-type_@temp_subJobID" value="@temp_subJobID">
                                <label class="sub-job-type_label"
                                       for="sub-job-type_@temp_subJobID">@temp_description</label><br>
                                }
                        </div>
                    </div>

                    <div class="col-md-8 col-form-label" style="">
                        <strong>Job Resources</strong>
                        <div class="jobResourceTypes_div">
                            @foreach (var resourceType in Model.resourceTypes)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                byte temp_resourceTypeID = resourceType.resourceTypeID;
                                string temp_resourceType = resourceType.resourceType;
                                string temp_description = resourceType.description;
                                decimal temp_rate = resourceType.rate;
                                //string temp_rate = resourceType.description;
                                //END TEMPORARY LOOP VARIABLES

                                <div class="row jobResource_Line">
                                    <div class="col-md-3 resourceTypeID_div">
                                        <input class="resource-type_input resourceTypeID" type="checkbox"
                                               id="resource-type_@temp_resourceTypeID"
                                               name="resource-type_@temp_resourceTypeID" value="@temp_resourceTypeID"
                                               style="padding:0px; margin:0px;">
                                        <label class="resource-type_label" for="resource-type_@temp_resourceTypeID"
                                               style="padding:0px; margin:0px;">@temp_resourceType</label>
                                        </div>
                                        <div class="col-md-6 description_div">
                                            @temp_description
                                        </div>
                                        <div class="col-md-3 resourceRate_div">
                                            <input type="text" class="form-control resource-type_input resourceRate"
                                                   maxlength="6" value="@temp_rate" style="padding:0px; margin:0px;" disabled>
                                        </div>
                                    </div>
                                }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Job Correspondents</strong></div>
                    <div class="col-md-auto name_div" style="padding:0px;">
                        <input class="" type="checkbox" id="" name="" value="" style="vertical-align:middle" hidden>
                    </div>
                    <div class="col-md-2 col-form-label" style="padding:5px;">Name</div>
                    <div class="col-md-3 col-form-label" style="padding:5px;">E-mail</div>
                </div>
                @*BEGIN NEW JOB CORRESPONDENT TEMPLATE*@
                <div class="" id="jobCrspdtLine_template_edit" style="">
                    <div class="row entryRow jobCrspdt_template_row_active" data-job-crspdt-id="">
                        <div class="col-md-3" style=""></div>
                        <div class="col-md-3 name_div" style="padding:0px;">
                            <input type="text" class="form-control job-crspdt_input name_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 email_div" style="padding:0px;">
                            <input type="text" class="form-control job-crspdt_input email_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 button_div jobCrspdt_button_div" style="padding:0px;">
                            <button id="" class="btn btn-light btn-sm Btn_add newJobCrspdtBtn_add">
                                <i class="far fa-plus-square fa-2x" style="color:black;"></i>
                            </button>

                            <button id="" class="btn btn-light btn-sm Btn_edit lineJobCrspdtBtn_edit" hidden>
                                <i class="far fa-edit fa-2x" style="color:black;"></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_save lineJobCrspdtBtn_save' hidden>
                                <i class='far fa-save fa-2x' style='color: black;'></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_delete lineJobCrspdtBtn_delete' hidden>
                                <i class='far fa-minus-square fa-2x' style='color: black;'></i>
                            </button>
                        </div>
                    </div>

                    <div class="row entryRow jobCrspdtLine_template_row_hidden" data-job-crspdt-id="" hidden>
                        <div class="col-md-3" style=""></div>
                        <div class="col-md-3 name_div" style="padding:0px;">
                            <input type="text" class="form-control job-crspdt_input name_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 email_div" style="padding:0px;">
                            <input type="text" class="form-control job-crspdt_input email_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 button_div jobCrspdt_button_div" style="padding:0px;">
                            <button id="" class="btn btn-light btn-sm Btn_add newJobCrspdtBtn_add">
                                <i class="far fa-plus-square fa-2x" style="color:black;"></i>
                            </button>

                            <button id="" class="btn btn-light btn-sm Btn_edit lineJobCrspdtBtn_edit" hidden>
                                <i class="far fa-edit fa-2x" style="color:black;"></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_save lineJobCrspdtBtn_save' hidden>
                                <i class='far fa-save fa-2x' style='color: black;'></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_delete lineJobCrspdtBtn_delete' hidden>
                                <i class='far fa-minus-square fa-2x' style='color: black;'></i>
                            </button>
                        </div>
                    </div>
                </div>
                @*END NEW WORK DESCRIPTION TEMPLATE*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn jobEditForm btn_save" value="">Save</button>
                <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
@*END EDIT CUSTOMER MODAL TEMPLATE*@
@*BEGIN NEW CUSTOMER MODAL TEMPLATE*@
<div class="modal fade" id="jobNewForm" tabindex="-1" role="dialog" aria-labelledby="jobNewForm" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Job</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3"><strong>Job ID</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info job-id" maxlength="8">
                    </div>
                    <div class="col-sm-auto">
                        <div class="form-check">
                            <input class="form-check-input job-customer-info job-active" type="checkbox">
                            <label class="form-check-label" for="job-active">
                                <strong>Job Active</strong>
                            </label>
                        </div>
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3"><strong>Customer Code</strong></div>
                    <div class="col-md-3">
                        <select class="customer-code" id="customer-code-new">
                            <option value="-1">Select Customer Code</option>
                            @foreach (var customer in Model.customers)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                string temp_customerCode = customer.customerCode;
                                string temp_customerName = customer.customerName;
                                string temp_address = customer.address;
                                int temp_id = customer.id;
                                //END TEMPORARY LOOP VARIABLES

                                <option value="@temp_customerCode">@temp_customerCode</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3"><strong>Customer Name</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info customer-name" id="customer-name-new" maxlength="50"
                               disabled value="">
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Customer Location</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info customer-location" id="customer-location-new"
                               maxlength="50" disabled value="">
                    </div>
                    <div class="col-md-3 col-form-label"><strong>Customer Contact</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control job-customer-info customer-contact" maxlength="50">
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3"><strong>Normal Hours Start</strong></div>
                    <div class="col-md-3">
                        <input type="time" class="form-control normal-hours-start">
                    </div>
                    <div class="col-md-3"><strong>Normal Hours End</strong></div>
                    <div class="col-md-3">
                        <input type="time" class="form-control normal-hours-end">
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Normal Hours Daily</strong></div>
                    <div class="col-md-3">
                        <input type="text" class="form-control normal-hours-daily" maxlength="2" value="8">
                    </div>
                    <div class="col-md-4">
                        <div class="form-check">
                            <input class="form-check-input double-time-hours" type="checkbox">
                            <label class="form-check-label" for="double-time-hours">
                                <strong>Double Time Hours</strong>
                            </label>
                        </div>
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Job Description</strong></div>
                    <div class="col-md-9">
                        <textarea class="form-control job-description" rows="3" style="resize: none;"></textarea>
                    </div>
                </div><hr class="sectionSeparator">
                <div class="row">
                    <div class="col-md-4 col-form-label" style="">
                        <strong>Sub-job Types</strong>
                        <div class="subJobTypes_div">
                            @foreach (var subJobtype in Model.subJobTypes)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                byte temp_subJobID = subJobtype.subJobID;
                                string temp_description = subJobtype.description;
                                //END TEMPORARY LOOP VARIABLES

                                <input class="sub-job-type_input" type="checkbox" id="sub-job-type_@temp_subJobID"
                                       name="sub-job-type_@temp_subJobID" value="@temp_subJobID">
                                <label class="sub-job-type_label"
                                       for="sub-job-type_@temp_subJobID">@temp_description</label><br>
                                }
                        </div>
                    </div>

                    <div class="col-md-8 col-form-label" style="">
                        <strong>Job Resources</strong>
                        <div class="jobResourceTypes_div">
                            @foreach (var resourceType in Model.resourceTypes)
                            {
                                //BEGIN TEMPORARY LOOP VARIABLES
                                byte temp_resourceTypeID = resourceType.resourceTypeID;
                                string temp_resourceType = resourceType.resourceType;
                                string temp_description = resourceType.description;
                                decimal temp_rate = resourceType.rate;
                                //string temp_rate = resourceType.description;
                                //END TEMPORARY LOOP VARIABLES

                                <div class="row jobResource_Line">
                                    @*<div class="col-md-3" style="border:1px solid black; padding:0px; margin:0px;">*@
                                    <div class="col-md-3 resourceTypeID_div">
                                        <input class="resource-type_input resourceTypeID" type="checkbox" id="resource-type_@temp_resourceTypeID"
                                               @*name="resource-type_@temp_resourceTypeID" value="@temp_resourceTypeID"
                style="border:1px solid black; padding:0px; margin:0px;">*@
                                               name="resource-type_@temp_resourceTypeID" value="@temp_resourceTypeID" style="padding:0px; margin:0px;">
                                        <label class="resource-type_label" for="resource-type_@temp_resourceTypeID"
                                               style="padding:0px; margin:0px;">@temp_resourceType</label>
                                        </div>
                                        <div class="col-md-6 description_div">
                                            @temp_description
                                        </div>
                                        <div class="col-md-3 resourceRate_div">
                                            <input type="text" class="form-control resource-type_input resourceRate" maxlength="6" value="@temp_rate" style="padding:0px; margin:0px;" disabled>
                                        </div>
                                    </div>
                                }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-form-label"><strong>Job Correspondents</strong></div>
                    <div class="col-md-3 col-form-label" style="padding:5px;">Name</div>
                    <div class="col-md-3 col-form-label" style="padding:5px;">E-mail</div>
                </div>
                @*BEGIN NEW JOB CORRESPONDENT TEMPLATE*@
                <div class="" id="jobCrspdtLine_template_new" style="">
                    <div class="row entryRow jobCrspdt_template_row_active">
                        <div class="col-md-3" style=""></div>
                        <div class="col-md-3 name_div" style="padding:0px;">
                            <input type="text" class="form-control job-customer-info name_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 email_div" style="padding:0px;">
                            <input type="text" class="form-control job-customer-info email_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 button_div jobCrspdt_button_div" style="padding:0px;">
                            <button id="" class="btn btn-light btn-sm Btn_add newJobCrspdtBtn_add">
                                <i class="far fa-plus-square fa-2x" style="color:black;"></i>
                            </button>

                            <button id="" class="btn btn-light btn-sm Btn_edit lineJobCrspdtBtn_edit" hidden>
                                <i class="far fa-edit fa-2x" style="color:black;"></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_save lineJobCrspdtBtn_save' hidden>
                                <i class='far fa-save fa-2x' style='color: black;'></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_delete lineJobCrspdtBtn_delete' hidden>
                                <i class='far fa-minus-square fa-2x' style='color: black;'></i>
                            </button>
                        </div>
                    </div>

                    <div class="row entryRow jobCrspdtLine_template_row_hidden" id="" style="" hidden>
                        <div class="col-md-3" style=""></div>
                        <div class="col-md-3 name_div" style="padding:0px;">
                            <input type="text" class="form-control job-customer-info name_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 email_div" style="padding:0px;">
                            <input type="text" class="form-control job-customer-info email_input" style="padding:5px;">
                        </div>
                        <div class="col-md-3 button_div jobCrspdt_button_div" style="padding:0px;">
                            <button id="" class="btn btn-light btn-sm Btn_add newJobCrspdtBtn_add">
                                <i class="far fa-plus-square fa-2x" style="color:black;"></i>
                            </button>

                            <button id="" class="btn btn-light btn-sm Btn_edit lineJobCrspdtBtn_edit" hidden>
                                <i class="far fa-edit fa-2x" style="color:black;"></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_save lineJobCrspdtBtn_save' hidden>
                                <i class='far fa-save fa-2x' style='color: black;'></i>
                            </button>
                            <button class='btn btn-light btn-sm Btn_delete lineJobCrspdtBtn_delete' hidden>
                                <i class='far fa-minus-square fa-2x' style='color: black;'></i>
                            </button>
                        </div>
                    </div>
                </div>
                @*END NEW WORK DESCRIPTION TEMPLATE*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn jobNewForm btn_save" value="">Save</button>
                <button type="button" class="btn btn_cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

    @*END NEW CUSTOMER MODAL TEMPLATE*@

    @*END CUSTOMER SECTION*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
