@model List<allpax_service_record.Models.View_Models.vm_dailyReportByReportID>
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*DAILY REPORT BY REPORT ID PAGE*@

<head>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/underscore@1.11.0/underscore-min.js"></script>

    <style>

        #workDesc_container, #delays_container, #wntyDelays_container {
            padding-bottom: 5px;
        }

        .container {
            border: 1px solid black;
        }

        .narr_div, .dpdwn_div, .dpdwn_parsed_div, .hours_div, .button_div, .state_div {
            border-top: 1px solid black;
            border-left: 1px solid black;
            padding: 5px;
        }

        .state_div {
            border-right: 1px solid black;
        }

        .row {
            border: none;
            padding-left: 5px;
            padding-right: 5px;
        }

        .entryRow .narr_div, .entryRow .dpdwn_div, .entryRow .hours_div, .entryRow .button_div, .entryRow .state_div {
            border-bottom: 1px solid black;
        }

        .sectionSeparator {
            margin: 1px;
            opacity: 0;
        }
    </style>

    <script>
        $(document).ready(function () {//begin document read jquery statements
          
            var dailyReportID = $("#txt_dailyReportID").attr("value");
            var rtndSubmissionStatus;
            var jobs_dpdown = $('#jobs_dpdown');
            var subJobTypes_dpdwn = $('#subJobTypes_dpdwn');
            var team_dpdwn = $('#team_dpdwn');
            var dailyRptAuthor = $('#dailyRptAuthor').html();//suck in the current user name along with the domain
            dailyRptAuthor = dailyRptAuthor.replace(/@@.*/, "");//chop off the domain         

            var dailyRptTeamArr = [];
            var dailyRptTeamUserIDArr = [];
            var dailyLogInfoChngd = 0;
            var recordsToAddStatus = 0;
            var recordsToEditStatus = 0;
            var recordsToDeleteStatus = 0;
            var updateSubmissionStatus = 0;  

            var workDesc_RtndRecs = [];
            var delays_RtndRecs = [];
            var wntyDelays_RtndRecs = [];

            var workDesc_Add = [];
            var workDescArrJson_Add = [];
            var indexWorkDescEntries_Add = 0;//keep track of the number of work description entries added

            var delays_Add = [];
            var delaysArrJson_Add = [];
            var indexDelaysEntries_Add = 0;//keep track of the number of delays entries added

            var wntyDelays_Add = [];
            var wntyDelaysArrJson_Add = [];
            var indexWntyDelaysEntries_Add = 0;//keep track of the number of warranty delays entries added

            var workDesc_Edit = [];
            var workDescArrJson_Edit = [];

            var delays_Edit = [];
            var delaysArrJson_Edit = [];

            var wntyDelays_Edit = [];
            var wntyDelaysArrJson_Edit = [];

            var timeEntryDeleteArr = [];//stores the time entry ids that are to be deleted
            //end added for new one shot work

            fn_enableSelect2();//enable the select2 add-on on page load
            fn_loadDropDowns();
            fn_loadTimeEntries_RtndRecs();//record the values of the returned records for comparison to the _Edit arrays
            fn_getSubmissionStatus();

            //BEGIN DAILY REPORT LOG SECTION

            //begin jobs id dropdown change
            //differs between new daily report and an existing one
            jobs_dpdown.change(function () {

                $.ajax({
                    url: 'DataService.asmx/GetCustomerInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {

                        $(data).each(function (index, item) {
                            $("#output_customerName").html(item.customerName.toString());
                            $("#output_location").html(item.address.toString());
                            $("#output_customerCode").html(item.customerCode.toString());
                            $("#output_customerContact").html(item.customerContact.toString());
                        });
                    },
                    error: function (response) {
                        var alertContent = "An error has occurred.";
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });
               
                //begin fill sub jobs dropdown
                $('#subJobTypes_dpdwn').empty();//clear the dropdown

                $.ajax({
                    url: 'DataService.asmx/GetSubJobTypesByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            subJobTypes_dpdwn.append($('<option/>', { value: item.subJobID, text: item.description }));
                        });
                    },
                    error: function (response) {
                        fn_hideSpinner();
                        var alertContent = "An error has occurred.";
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });
                //end fill sub jobs dropdown

                //begin fill the job correspondents section
                $.ajax({
                    url: 'DataService.asmx/GetJobCrspdtInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {
                        //console.clear();
                        var temp_output_jobCrspdtInfo = "";
                        $(data).each(function (index, item) {
                            temp_output_jobCrspdtInfo = temp_output_jobCrspdtInfo + item.jobCrspdtName + "|";
                        });
                        $("#output_jobCrspdtInfo").text(temp_output_jobCrspdtInfo);
                    },
                    error: function (response) {
                        fn_hideSpinner();
                        var alertContent = "An error has occurred.";
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });
                //end fill the job correspondents section
            });
            //end jobs id dropdown change

            //begin add team member on drop down change
            //differs between new daily report and an existing one
            $(team_dpdwn).on("select2:select", function (e) {//on selecting a new team member to add...

                var tempTeamMemberUserID = e.params.data.id;

                $.ajax({
                    url: 'DataService.asmx/GetAllTeamNames',
                    method: 'post',
                    dataType: 'json',
                    data: { userName: tempTeamMemberUserID },//
                    success: function (data) {

                        $(data).each(function (index, item) {
                            var temp_userName = item.userName;
                            var temp_name = item.name;
                            var temp_shortName = item.shortName;

                            dailyRptTeamArr.push([temp_userName, temp_name, temp_shortName]);
                            dailyRptTeamUserIDArr.push(temp_userName);

                            $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".team_dpdwn_new");
                            $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".RtndRecs");
                            enable_disableSave();//determine if the save button needs to be enabled or disabled
                        });

                        var data = {
                            dailyReportID: dailyReportID,
                            userName: tempTeamMemberUserID,
                        };

                        $.ajax({
                            url: '/dailyReportByReportID/AddTeamMember',
                            method: 'post',
                            contentType: 'application/json',
                            dataType: 'json',
                            data: JSON.stringify(data),
                            traditional: true,
                            success: function (response) {
                                
                            }                           
                        });
                    }
                });
            });
            //end add team member on drop down change

            //begin when a team member class is clicked for deletion...
            //differs between new daily report and an existing one
            $(team_dpdwn).on("select2:unselect", function (e) {//on unselecting a team member to delete...

                var tempTeamMemberUserID = e.params.data.id;
                
                for (var row = 0; row < dailyRptTeamArr.length; row++) {
                    if (dailyRptTeamArr[row][0] == tempTeamMemberUserID) {
                        dailyRptTeamArr.splice(row, 1);
                        dailyRptTeamUserIDArr.splice(row, 1);
                    }
                }

                $(".team_dpdwn_new option[value='" + tempTeamMemberUserID + "']").remove();
                $(".RtndRecs option[value='" + tempTeamMemberUserID + "']").remove();

                enable_disableSave();//determine if the save button needs to be enabled or disabled
               
                var data = {
                    dailyReportID: dailyReportID,
                    userName: tempTeamMemberUserID
                };

                $.ajax({
                    url: '/dailyReportByReportID/DeleteTeamMember',
                    method: 'post',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    traditional: true,
                    success: function (response) {
                        window.location.href = response;
                    }
                });

            });
            //end when a team member class is clicked for deletion...

            //cloned to new daily report
            $("#contnrDailyLog").on("change keypress", function () {
                dailyLogInfoChngd = true;
                enable_disableSave();
            });

            $("#input_equipment").on("blur", function () {

                //clean up the text entry
                $("#input_equipment").val(fn_cleanupDataEntryFields($("#input_equipment").val()));
            });

            //END DAILY REPORT LOG SECTION      

            //BEGIN RETURNED RECORDS AND TIME ENTRY SECTION

            //cloned to new daily report
            $(".Btn_add").click(function () {

                if (fn_rowFilled($(this))) {

                    fn_produceParsedShortNames($(this));
                    fn_disableSelect2();
                    var currentRow = $(this).parent().parent();

                    var cleaned_narrDiv = fn_cleanupDataEntryFields(currentRow.find(".narr_div").html());
                    currentRow.find(".narr_div").html(cleaned_narrDiv);//set the content of .narr_div to cleaned html

                    currentRow.find(".narr_div").attr("contenteditable", "false");//lock the narrative for edits
                    currentRow.find(".dpdwn_div").hide();//hide the team dropdown
                    currentRow.find(".dpdwn_parsed_div").removeAttr("hidden");//show the parsed version of the team dropdown
                    currentRow.find(".dpdwn_parsed_div").show();//show the parsed version of the team dropdown
                    currentRow.find(".Btn_add").hide();//remove the add button, only needed for new work descriptions
                    currentRow.find(".Btn_clear").hide();//remove the clear button, only needed for new work descriptions
                    currentRow.find(".Btn_edit").removeAttr("hidden");//show the edit button, only needed for work description line entries
                    currentRow.find(".Btn_delete").removeAttr("hidden");//show the delete button, only needed for work description line entries
                    currentRow.last().find(".narr_div").css('border-bottom-style', 'none');
                    currentRow.find(".dpdwn_parsed_div").css('border-bottom-style', 'none');
                    currentRow.find(".button_div").css('border-bottom-style', 'none');

                    if (/newWorkDescBtn_add/i.test($(this).attr("class"))) {
                        indexWorkDescEntries_Add = indexWorkDescEntries_Add + 1;

                        $(".workDescriptionLine_template_row_hidden").removeAttr("hidden");
                        currentRow.prop("id", "workDescLine_" + indexWorkDescEntries_Add).appendTo("#workDescriptionLine_template");
                        $("#workDescLine_" + indexWorkDescEntries_Add).prop("class", " row addRecord workDescLine");
                        $("#workDescLine_" + indexWorkDescEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                        $(".workDescriptionLine_template_row_hidden").clone(true).prop("class", "row entryRow workDescriptionLine_template_row_active").appendTo("#workDescriptionLine_template");
                        $(".workDescriptionLine_template_row_hidden").attr("hidden", "true");
                    }
                    else if (/newDelaysBtn_add/i.test($(this).attr("class"))) {
                        indexDelaysEntries_Add = indexDelaysEntries_Add + 1;

                        $(".delaysLine_template_row_hidden").removeAttr("hidden");
                        currentRow.prop("id", "delaysLine_" + indexDelaysEntries_Add).appendTo("#delaysLine_template");
                        $("#delaysLine_" + indexDelaysEntries_Add).prop("class", " row addRecord delaysLine");
                        //HOURS INPUT UPDATE
                        //$("#delaysLine_" + indexDelaysEntries_Add).find(".delaysTeam_hours_div").attr("contenteditable", "false");
                        $("#delaysLine_" + indexDelaysEntries_Add).find(".delaysTeam_hours_div input").attr("disabled", "disabled");
                        //HOURS INPUT UPDATE
                        $("#delaysLine_" + indexDelaysEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                        $(".delaysLine_template_row_hidden").clone(true).prop("class", "row entryRow delaysLine_template_row_active").appendTo("#delaysLine_template");
                        $(".delaysLine_template_row_hidden").attr("hidden", "true");
                    }
                    else if (/newWntyDelaysBtn_add/i.test($(this).attr("class"))) {
                        indexWntyDelaysEntries_Add = indexWntyDelaysEntries_Add + 1;

                        $(".wntyDelaysLine_template_row_hidden").removeAttr("hidden");
                        currentRow.prop("id", "wntyDelaysLine_" + indexWntyDelaysEntries_Add).appendTo("#wntyDelaysLine_template");
                        $("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).prop("class", " row addRecord wntyDelaysLine");
                        //HOURS INPUT UPDATE
                        //$("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).find(".wntyDelaysTeam_hours_div").attr("contenteditable", "false");
                        $("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).find(".wntyDelaysTeam_hours_div input").attr("disabled", "disabled");
                        //HOURS INPUT UPDATE
                        $("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                        $(".wntyDelaysLine_template_row_hidden").clone(true).prop("class", "row entryRow wntyDelaysLine_template_row_active").appendTo("#wntyDelaysLine_template");
                        $(".wntyDelaysLine_template_row_hidden").attr("hidden", "true");
                    }

                    fn_enableSelect2();
                    enable_disableSave();
                }
            });

            //cloned to new daily report
            $(".Btn_edit").click(function () {
                //HOURS INPUT UPDATE
                var currentRow = $(this).parent().parent();
                var currentRowClass = currentRow.attr("class");
                var currentRowClassSwap;

                console.log(currentRowClass);

                if (currentRowClass.includes("addRecord")) {
                    currentRowClassSwap = currentRowClass.replace(/addRecord/, "addRecordInEdit");//
                    $(currentRow).prop("class", currentRowClassSwap);
                }

                if (currentRowClass.includes("editedRecords")) {
                    currentRowClassSwap = currentRowClass.replace(/editedRecords/, "editedRecordsInEdit");//
                    $(currentRow).prop("class", currentRowClassSwap);
                }

                if (currentRowClass.includes("returnedRecords")) {                   
                    currentRowClassSwap = currentRowClass.replace(/returnedRecords/, "returnedRecordsInEdit");//
                    $(currentRow).prop("class", currentRowClassSwap);

                    recordsToEditStatus = 1;
                    $($(currentRow)).find(".Btn_rtndRecord").attr("hidden", "true");
                    $($(currentRow)).find(".Btn_editedRecord").removeAttr("hidden");
                    $($(currentRow)).find(".button_div .Btn_delete").attr("disabled", "true");
                }

                console.log(".Btn_edit:" + currentRow.attr("class"));
                console.log(".Btn_edit" + currentRowClassSwap);

                //HOURS INPUT UPDATE

                $(this).hide();
                $(currentRow).find(".Btn_save").removeAttr("hidden");
                $(currentRow).find(".Btn_save").show();

                $(currentRow).find(".narr_div").attr("contenteditable", "true");
                //HOURS INPUT UPDATE
                //$(currentRow).find(".hours_div").attr("contenteditable", "true");
                $(currentRow).find(".hours_div input").removeAttr("disabled");
                //HOURS INPUT UPDATE
                $(currentRow).find(".dpdwn_parsed_div").hide();
                $(currentRow).find(".dpdwn_div").show();
                $(currentRow).css("color", "red");
            });

            //cloned to new daily report
            $(".Btn_save").click(function () {

                //HOURS INPUT UPDATE
                var currentRow = $(this).parent().parent();
                var currentRowClass = currentRow.attr("class");
                var currentRowClassSwap;
                //HOURS INPUT UPDATE

                if (fn_rowFilled($(this))) {

                    //var currentRow = $(this).parent().parent();

                    //HOURS INPUT UPDATE
                    if (currentRowClass.includes("addRecordInEdit")) {
                        //currentRowClassSwap = currentRowClass.replace(/addRecord inEdit/, "addRecord");//
                        currentRowClassSwap = currentRowClass.replace(/addRecordInEdit/, "addRecord");//
                        $(currentRow).prop("class", currentRowClassSwap);
                    }

                    if (currentRowClass.includes("editedRecordsInEdit")) {
                        //currentRowClassSwap = currentRowClass.replace(/addRecord inEdit/, "addRecord");//
                        currentRowClassSwap = currentRowClass.replace(/editedRecordsInEdit/, "editedRecords");//
                        $(currentRow).prop("class", currentRowClassSwap);
                    }

                    if (currentRowClass.includes("returnedRecordsInEdit")) {
                        //currentRowClassSwap = currentRowClass.replace(/addRecord inEdit/, "addRecord");//
                        currentRowClassSwap = currentRowClass.replace(/returnedRecordsInEdit/, "editedRecords");//
                        $(currentRow).prop("class", currentRowClassSwap);
                    }
                    //HOURS INPUT UPDATE

                    var cleaned_narrDiv = fn_cleanupDataEntryFields(currentRow.find(".narr_div").html());
                    currentRow.find(".narr_div").html(cleaned_narrDiv);//set the content of .narr_div to cleaned html 

                    $(this).hide();
                    $(currentRow).find(".Btn_edit").removeAttr("hidden");
                    $(currentRow).find(".Btn_edit").show();

                    $(currentRow).find(".narr_div").attr("contenteditable", "false");
                    //HOURS INPUT UPDATE
                    //$(currentRow).find(".hours_div ").attr("contenteditable", "false");
                    $(currentRow).find(".hours_div input").attr("disabled", "disabled");
                    //HOURS INPUT UPDATE
                    $(currentRow).find(".dpdwn_parsed_div").show();
                    $(currentRow).find(".dpdwn_div").hide();
                    $(currentRow).css("color", "black");

                    fn_produceParsedShortNames($(this));
                }
            });

            //cloned to new daily report
            $(".Btn_delete").click(function () {
                var currentRow = $(this).parent().parent(); 
                var currentNumValidRecs = $(".returnedRecords.workDescLine").length + indexWorkDescEntries_Add;
                temp_LineClass = $(currentRow).prop("class");

                //if this line is a new record, simply remove it
                if (temp_LineClass.includes("addRecord")) {
                    $(currentRow).remove();
                }

                //if this line is a returned record, set its class to deletedRecords
                if (temp_LineClass.includes("returnedRecords")) {                  
                    
                    //used to change the class of a returned record to deleted record for later processing with a delete operation
                    if (temp_LineClass.includes("workDescLine")) {
                        if (currentNumValidRecs > 1) {//if there is at least one more work description entry, then go ahead and delete this entry
                            $($(currentRow)).prop("class", "row deletedRecords workDescLine");
                            $($(currentRow)).find(".button_div .Btn_edit").attr("disabled", "true");
                            $($(currentRow)).find(".button_div .Btn_delete").attr("disabled", "true");
                            $($(currentRow)).find(".Btn_rtndRecord").attr("hidden", "true");
                            $($(currentRow)).find(".Btn_deletedRecord").removeAttr("hidden");
                            recordsToDeleteStatus = 1;
                        }
                        else {
                            $.alert({
                            title: 'Cannot Delete!',
                                content: 'Must have at least one copied record or added record in the work description section.',
                            });
                        }                       
                    }
                    if (temp_LineClass.includes("delaysLine")) {
                        $($(currentRow)).prop("class", "row deletedRecords delaysLine");
                        $($(currentRow)).find(".button_div .Btn_edit").attr("disabled", "true");
                        $($(currentRow)).find(".button_div .Btn_delete").attr("disabled", "true");
                        $($(currentRow)).find(".Btn_rtndRecord").attr("hidden", "true");
                        $($(currentRow)).find(".Btn_deletedRecord").removeAttr("hidden");
                        recordsToDeleteStatus = 1;
                    }
                    if (temp_LineClass.includes("wntyDelaysLine")) {
                        $($(currentRow)).prop("class", "row deletedRecords wntyDelaysLine");
                        $($(currentRow)).find(".button_div .Btn_edit").attr("disabled", "true");
                        $($(currentRow)).find(".button_div .Btn_delete").attr("disabled", "true");
                        $($(currentRow)).find(".Btn_rtndRecord").attr("hidden", "true");
                        $($(currentRow)).find(".Btn_deletedRecord").removeAttr("hidden");
                        recordsToDeleteStatus = 1;
                    }                    
                }
            });

            //cloned to new daily report
            $(".Btn_selectAll").click(function () {
                var currentRow = $(this).parent().parent();

                //disable select2 for this particular dropdown, select all team members and then re-enable select2
                currentRow.find(".Team_dpdwn").select2('destroy').find('option').prop('selected', 'selected');
                fn_enableSelect2();
            });

            //differs between new daily report and an existing one
            function fn_loadDropDowns() {

                //cloned to new daily report
                //begin fill the jobs dropdown
                $.ajax({
                    url: 'DataService.asmx/GetAllJobNos',
                    method: 'post',
                    dataType: 'json',
                    data: { active: '1' },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            if (item.jobID !== jobs_dpdown.val()) {
                                //jobs_dpdown.append($('<option/>', { value: item.jobID, text: item.jobID }));
                                jobs_dpdown.append($('<option/>', { value: item.jobID, text: item.jobID + "|" + item.customerCode }));
                            }
                        });
                    },
                    error: function (response) {
                        
                        var alertContent = "An error has occurred.";
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });
                //end fill the jobs dropdown

                //differs between new daily report and an existing one
                //begin fill sub jobs dropdown
                $.ajax({
                    url: 'DataService.asmx/GetSubJobTypesByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            if (item.subJobID !== subJobTypes_dpdwn.val()) {
                                subJobTypes_dpdwn.append($('<option/>', { value: item.subJobID, text: item.description }));
                            }
                        });
                    },
                    error: function (response) {
                        
                        var alertContent = "An error has occurred.";
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });
                //end fill sub jobs dropdown
              
                //begin load team members on page load
                $.ajax({
                    url: 'DataService.asmx/GetAllTeamNamesByReportID',
                    method: 'post',
                    dataType: 'json',
                    data: { userName: '%', dailyReportID: dailyReportID },
                    success: function (data) {
                        //console.clear();

                        $(data).each(function (index, item) {
                            var temp_userName = item.userName;
                            var temp_name = item.name;
                            var temp_shortName = item.shortName;

                            dailyRptTeamArr.push([temp_userName, temp_name, temp_shortName]);
                            dailyRptTeamUserIDArr.push(temp_userName);
                        });
                        //console.log("the contents of dailyRptTeamUserIDArr: " + dailyRptTeamUserIDArr);

                        //cloned to new daily report
                        //begin fill the team names dropdown
                        $.ajax({
                            url: 'DataService.asmx/GetAllTeamNames',
                            method: 'post',
                            dataType: 'json',
                            data: { userName: '%' },
                            success: function (data) {

                                $(data).each(function (index, item) {

                                    var temp_userName = item.userName;
                                    var temp_name = item.name;
                                    var temp_shortName = item.shortName;

                                    if ($.inArray(temp_userName, dailyRptTeamUserIDArr) !== -1) {
                                        $("<option value=" + temp_userName + " selected>" + temp_name + "|" + temp_shortName + "</option>").appendTo("#team_dpdwn");
                                        $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".Team_dpdwn.team_dpdwn_new");
                                        //console.log(temp_userName + " is in dailyRptTeamUserIDArr");
                                    }

                                    else {
                                        $("<option value=" + temp_userName + ">" + temp_name + "|" + temp_shortName + "</option>").appendTo("#team_dpdwn");
                                        //console.log(temp_userName + " is not in dailyRptTeamUserIDArr");
                                    }
                                });
                            }
                        });
                        //end fill the team names dropdown
                        fn_loadTeamNamesRtndRecs();//load team names into the records returned from the database
                    }
                });
                //end load team members on page load                
            }

            //cloned to new daily report
            function fn_produceParsedShortNames(button) {
                var currentWorkDescTeamShortNamesParsed = "";
                //select the list elements that contain the short names of the team members
                var currentTeamShortNameLists = $(button).parent().parent().find(".dpdwn_div").find(".select2-selection__rendered li");
                //select the div where the short names will be written
                var currentTeamDpdwnParsed = $(button).parent().parent().find(".dpdwn_parsed_div");

                $(currentTeamShortNameLists).each(function (index) {
                    currentWorkDescTeamShortNamesParsed = currentWorkDescTeamShortNamesParsed.concat($(this).attr("title") + "|");
                });
                currentTeamDpdwnParsed.html(currentWorkDescTeamShortNamesParsed);
            }

            //only on existing records or copies
            function fn_loadTeamNamesRtndRecs() {

                var rtndRecordSelects = $(".RtndRecs");//stores the select contents as they come from the server
                var tmpRtndRecUserIDs = [];//stores which users are part of a returned record
                var tmpUserIDsToBeAdded = [];

                //console.log(rtndRecordSelects);//print the object
                //console.log("There are " + $(rtndRecordSelects).length + " .RtndRecs");
                //console.log("*********************************")

                $(rtndRecordSelects).each(function (indexRtdRcrdSlcts, item) {
                    //console.log("Content of .RtndRecs " + (indexRtdRcrdSlcts + 1) + " is " + $(item).val())
                    //console.log("There are " + $(item).find("option").length + " options in this .RtndRecs")
                    //console.log("The first value is " + $(item[0]).val())

                    $($(item)).find('option').each(function () {
                        //console.log($(this).val());
                        tmpRtndRecUserIDs.push($(this).val());
                    });

                    //console.log("UserIDs in this record is " + tmpRtndRecUserIDs);
                    //console.log("UserIDs in the report is " + dailyRptTeamUserIDArr);
                    ////console.log("User data in the report is " + dailyRptTeamArr);

                    tmpUserIDsToBeAdded = _.difference(dailyRptTeamUserIDArr, tmpRtndRecUserIDs);
                    //console.log("Users to be added to this dropdown: " + tmpUserIDsToBeAdded)

                    //console.log("Daily report user info:");
                    $(dailyRptTeamArr).each(function (index, item) {

                        //if a user's info is not in tmpUserIDsToBeAdded, then it needs to be appended to this loop's rtndRecordSelects
                        if (($.inArray(item[0], tmpUserIDsToBeAdded)) !== -1) {

                            //console.log("To be appended: " + item[0] + " " + item[2]);
                            $("<option value=" + item[0] + ">" + item[2] + "</option>").appendTo(rtndRecordSelects[indexRtdRcrdSlcts]);
                        }

                    })
                    //console.log("*********************************")

                    tmpRtndRecUserIDs = [];//empty for the next loop
                    tmpUserIDsToBeAdded = [];//empty for the next loop
                })
            };//daily report by id page only

            //only on existing records or copies
            $(".returnedRecords").on("change keypress", function () {
                //var currentRow = $(this);
                //recordsToEditStatus = 1;
                //temp_LineClass = $(this).prop("class");

                //OLD
                //used to change the class of a returned record to an edited record for later processing with an update operation
                //if (temp_LineClass.includes("workDescLine")) {
                //    $($(currentRow)).prop("class", "row editedRecords workDescLine");
                //}
                //if (temp_LineClass.includes("delaysLine")) {
                //    $($(currentRow)).prop("class", "row editedRecords delaysLine");
                //}
                //if (temp_LineClass.includes("wntyDelaysLine")) {
                //    $($(currentRow)).prop("class", "row editedRecords wntyDelaysLine");
                //}
                //OLD

                //if (temp_LineClass.includes("workDescLine")) {
                //    $($(currentRow)).prop("class", "row returnedRecordsInEdit workDescLine");
                //}

                //if (temp_LineClass.includes("delaysLine")) {
                //    $($(currentRow)).prop("class", "row returnedRecordsInEdit delaysLine");
                //}

                //if (temp_LineClass.includes("wntyDelaysLine")) {
                //    $($(currentRow)).prop("class", "row returnedRecordsInEdit wntyDelaysLine");
                //}

                //$($(currentRow)).find(".button_div .Btn_edit").attr("disabled", "true");
                //$($(currentRow)).find(".button_div .Btn_delete").attr("disabled", "true");

                //$($(currentRow)).find(".Btn_rtndRecord").attr("hidden", "true");
                //$($(currentRow)).find(".Btn_editedRecord").removeAttr("hidden");
            });

            //END RETURNED RECORDS AND TIME ENTRY SECTION
           
            //BEGIN SECTION TO PACK UP AND SAVE NEW RECORDS

            //cloned to new daily report
            $("#saveAndExit_btn").click(function () {//

                fn_exitSubmit(0);
            });

            //cloned to new daily report
            $("#saveAndSubmit_btn").click(function () {//when the add button is clicked...
              
                fn_exitSubmit(1);
            });

            $("#returnDailyRptAll_btn").click(function () {//

                window.location = '/DailyReportAll';
            });

            //differs between new daily report and an existing one
            //$("#addButton").click(function () {//when the add button is clicked...
            function fn_exitSubmit(submissionState) {

                submissionStatus = submissionState;//0 indicates meant to be stored, 1 indicates stored and submitted for review

                if (rtndSubmissionStatus !== submissionStatus) {
                    updateSubmissionStatus = 1;
                    console.log("The submission state needs to be changed from " + rtndSubmissionStatus + " to " + submissionStatus);
                }

                //differs between new daily report and an existing one                
                fn_loadTimeEntries_Add();
                fn_loadTimeEntries_Edit();
                fn_loadTimeEntries_Delete();
                fn_buildJsonObjects();
                fn_printArrays();

                //cloned to new daily report
                var addItem1 = $("#jobs_dpdown").val();
                var addItem2 = $("#slct_date").val();
                var addItem3 = $("#subJobTypes_dpdwn").val();
                var addItem4 = $("#input_startTime").val();
                var addItem5 = $("#input_endTime").val();
                var addItem6 = $("#input_lunch").val();
                var addItem7 = $("#input_equipment").val();
                var addItem8 = dailyRptAuthor;
                var addItem9 = dailyRptTeamUserIDArr;
                var addItem10 = submissionStatus;

                var totalOpsToDo = dailyLogInfoChngd + recordsToAddStatus + recordsToEditStatus + recordsToDeleteStatus + updateSubmissionStatus;//stores the total number of types of ops to carry out
                var serverResponseSuccess = "";//page to which the browser will redirect after all AJAX calls are successful
                //console.log("total operations to complete on entry is: " + totalOpsToDo);

                fn_showSpinner();

                //BEGIN EDIT DAILY LOG SECTION OF A DAILY REPORT
                //only on existing records or copies
                if (dailyLogInfoChngd == 1) {//if the daily log information section has been changed...
                    console.log("editing the daily log info section.")
                    var data = {
                        dailyReportID: dailyReportID,
                        jobID: addItem1,
                        date: addItem2,
                        subJobID: addItem3,
                        startTime: addItem4,
                        endTime: addItem5,
                        lunchHours: addItem6,
                        equipment: addItem7,
                        dailyReportAuthor: addItem8,
                    };

                    $.ajax({
                        url: '/dailyReportByReportID/UpdateDailyReportLogInfo',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            totalOpsToDo = totalOpsToDo - 1;//reduce the total ops to complete by 1
                            //console.log("edit daily log info success. total operations to complete is now: " + totalOpsToDo);
                            serverResponseSuccess = response;
                            //console.log("response is: " + response)
                            if (totalOpsToDo == 0) {//if there are no more ops left to complete, redirect the browser
                                window.location.href = serverResponseSuccess;
                            }
                        },
                        error: function (response) {

                            var alertContent = "An error has occurred.";
                            $.alert({
                                title: 'Alert!',
                                content: alertContent,
                            });
                        }
                    });
                }
                //END EDIT DAILY LOG SECTION OF A DAILY REPORT

                //BEGIN ADD RECORDS TO A DAILY REPORT
                //only on existing records or copies
                if (recordsToAddStatus == 1) {//if there are records to add...
                    var data = {
                        dailyReportID: dailyReportID,
                        workDescArr: workDescArrJson_Add,
                        delaysArr: delaysArrJson_Add,
                        wntyDelaysArr: wntyDelaysArrJson_Add
                    };

                    $.ajax({
                        url: '/dailyReportByReportID/AddDailyReport',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            totalOpsToDo = totalOpsToDo - 1;//reduce the total ops to complete by 1
                            //console.log("add record success. total operations to complete is now: " + totalOpsToDo);
                            serverResponseSuccess = response;
                            //console.log("response is: " + response);
                            if (totalOpsToDo == 0) {//if there are no more ops left to complete, redirect the browser
                                window.location.href = serverResponseSuccess;
                            }
                        },
                        error: function (response) {

                            var alertContent = "An error has occurred.";
                            $.alert({
                                title: 'Alert!',
                                content: alertContent,
                            });
                        }
                    });
                }
                //END ADD RECORDS TO A DAILY REPORT

                //BEGIN EDIT RECORDS ON A DAILY REPORT
                //only on existing records or copies
                if (recordsToEditStatus == 1) {//if there are records to add...                   
                    var data = {
                        dailyReportID: dailyReportID,
                        workDescArr: workDescArrJson_Edit,
                        delaysArr: delaysArrJson_Edit,
                        wntyDelaysArr: wntyDelaysArrJson_Edit
                    };

                    $.ajax({
                        url: '/dailyReportByReportID/UpdateDailyReportTimeEntries',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            totalOpsToDo = totalOpsToDo - 1;//reduce the total ops to complete by 1
                            //console.log("edit record success. total operations to complete is now: " + totalOpsToDo);
                            serverResponseSuccess = response;
                            //console.log("response is: " + response);
                            if (totalOpsToDo == 0) {//if there are no more ops left to complete, redirect the browser
                                window.location.href = serverResponseSuccess;
                            }
                        },
                        error: function (response) {

                            var alertContent = "An error has occurred.";
                            $.alert({
                                title: 'Alert!',
                                content: alertContent,
                            });
                        }
                    });
                }
                //END EDIT RECORDS ON A DAILY REPORT

                //BEGIN DELETE RECORDS FROM A DAILY REPORT
                //only on existing records or copies
                if (recordsToDeleteStatus == 1) {//if there are records to delete...
                    var data = {
                        timeEntryDeleteArr: timeEntryDeleteArr
                    };

                    $.ajax({
                        url: '/dailyReportByReportID/DeleteTimeEntry',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            totalOpsToDo = totalOpsToDo - 1;//reduce the total ops to complete by 1
                            //console.log("delete record success. total operations to complete is now: " + totalOpsToDo);
                            serverResponseSuccess = response;
                            //console.log("response is: " + response);
                            if (totalOpsToDo == 0) {//if there are no more ops left to complete, redirect the browser
                                window.location.href = serverResponseSuccess;
                            }
                        },
                        error: function (response) {

                            var alertContent = "An error has occurred.";
                            $.alert({
                                title: 'Alert!',
                                content: alertContent,
                            });
                        }
                    });
                }
                //END DELETE RECORDS FROM A DAILY REPORT
                //});

                //BEGIN UPDATE RECORD SUBMISSION STATUS
                //only on existing records or copies
                if (updateSubmissionStatus == 1) {//if the record submission status needs to be updated...
                    var data = {
                        dailyReportID: dailyReportID,
                        submissionStatus: addItem10
                    };

                    //console.log("need to update report " + dailyReportID + " submission status to: " + addItem10);

                    $.ajax({
                        url: '/dailyReportByReportID/UpdateDailyReportSubmissionStatus',
                        method: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(data),
                        traditional: true,
                        success: function (response) {
                            totalOpsToDo = totalOpsToDo - 1;//reduce the total ops to complete by 1
                            //console.log("delete record success. total operations to complete is now: " + totalOpsToDo);
                            serverResponseSuccess = response;
                            //console.log("response is: " + response);
                            if (totalOpsToDo == 0) {//if there are no more ops left to complete, redirect the browser
                                window.location.href = serverResponseSuccess;
                            }
                        },
                        error: function (response) {
                            fn_hideSpinner();
                            var alertContent = "An error has occurred.";
                            $.alert({
                                title: 'Alert!',
                                content: alertContent,
                            });
                        }
                    });
                }
                //END UPDATE RECORD SUBMISSION STATUS
            }

            //only on existing records or copies
            function fn_loadTimeEntries_RtndRecs() {
                
                var workDescTeam_narr_div_Content_RtndRecs = $(".returnedRecords").find(".workDescTeam_narr_div");
                var workDescTeam_dpdwn_Content_RtndRecs;

                var delaysTeam_narr_div_Content_RtndRecs = $(".returnedRecords").find(".delaysTeam_narr_div");
                var delaysTeam_hours_div_Content_RtndRecs;
                var delaysTeam_dpdwn_Content_RtndRecs;

                var wntyDelaysTeam_narr_div_Content_RtndRecs = $(".returnedRecords").find(".wntyDelaysTeam_narr_div");
                var wntyDelaysTeam_hours_div_Content_RtndRecs;
                var wntyDelaysTeam_dpdwn_Content_RtndRecs;

                var currentLine_RtndRecs;//generic
                var currentDropdownLine_RtndRecs;//generic

                $(workDescTeam_narr_div_Content_RtndRecs).each(function (index1) {

                    var workDescUserNamesArrTemp = [];

                    currentLine_RtndRecs = $(this).parent().attr("data-time-entry-id");
                    currentDropdownLine_RtndRecs = $(this).parent().attr("id");
                    workDescTeam_dpdwn_Content_RtndRecs = $("#" + currentDropdownLine_RtndRecs).find(".select2-selection__choice__display");

                    $(workDescTeam_dpdwn_Content_RtndRecs).each(function (index2) {

                        var tempworkDescTeam_dpdwn_ID = $(workDescTeam_dpdwn_Content_RtndRecs[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_workDescTeam_dpdwn_ID_object = tempworkDescTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_workDescTeam_dpdwn_ID_object[0];

                        workDescUserNamesArrTemp.push(temp_UserID);
                    });

                    workDesc_RtndRecs.push([currentLine_RtndRecs, $(workDescTeam_narr_div_Content_RtndRecs[index1]).html(), 0, workDescUserNamesArrTemp]);
                });

                $(delaysTeam_narr_div_Content_RtndRecs).each(function (index1) {

                    var delaysUserNamesArrTemp = [];

                    currentLine_RtndRecs = $(this).parent().attr("data-time-entry-id");
                    currentDropdownLine_RtndRecs = $(this).parent().attr("id");
                    delaysTeam_hours_div_Content_RtndRecs = parseFloat($("#" + currentDropdownLine_RtndRecs).find(".delaysTeam_hours_div").html());
                    delaysTeam_dpdwn_Content_RtndRecs = $("#" + currentDropdownLine_RtndRecs).find(".select2-selection__choice__display");

                    $(delaysTeam_dpdwn_Content_RtndRecs).each(function (index2) {

                        var tempDelaysTeam_dpdwn_ID = $(delaysTeam_dpdwn_Content_RtndRecs[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_delaysTeam_dpdwn_ID_object = tempDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_delaysTeam_dpdwn_ID_object[0];

                        delaysUserNamesArrTemp.push(temp_UserID);
                    });

                    delays_RtndRecs.push([currentLine_RtndRecs, $(delaysTeam_narr_div_Content_RtndRecs[index1]).html(), delaysTeam_hours_div_Content_RtndRecs, delaysUserNamesArrTemp]);
                });

                $(wntyDelaysTeam_narr_div_Content_RtndRecs).each(function (index1) {

                    var wntyDelaysUserNamesArrTemp = [];

                    currentLine_RtndRecs = $(this).parent().attr("data-time-entry-id");
                    currentDropdownLine_RtndRecs = $(this).parent().attr("id");
                    wntyDelaysTeam_hours_div_Content_RtndRecs = parseFloat($("#" + currentDropdownLine_RtndRecs).find(".wntyDelaysTeam_hours_div").html());
                    wntyDelaysTeam_dpdwn_Content_RtndRecs = $("#" + currentDropdownLine_RtndRecs).find(".select2-selection__choice__display");

                    $(wntyDelaysTeam_dpdwn_Content_RtndRecs).each(function (index2) {

                        var tempWntyDelaysTeam_dpdwn_ID = $(wntyDelaysTeam_dpdwn_Content_RtndRecs[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_wntyDelaysTeam_dpdwn_ID_object = tempWntyDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_wntyDelaysTeam_dpdwn_ID_object[0];

                        wntyDelaysUserNamesArrTemp.push(temp_UserID);
                    });

                    wntyDelays_RtndRecs.push([currentLine_RtndRecs, $(wntyDelaysTeam_narr_div_Content_RtndRecs[index1]).html(), wntyDelaysTeam_hours_div_Content_RtndRecs, wntyDelaysUserNamesArrTemp]);
                });
            }

            //cloned to new daily report
            function fn_loadTimeEntries_Add () {

                var workDescTeam_narr_div_Content_Add = $(".addRecord").find(".workDescTeam_narr_div");
                var workDescTeam_dpdwn_Content_Add;

                var delaysTeam_narr_div_Content_Add = $(".addRecord").find(".delaysTeam_narr_div");
                var delaysTeam_hours_div_Content_Add;
                var delaysTeam_dpdwn_Content_Add;

                var wntyDelaysTeam_narr_div_Content_Add = $(".addRecord").find(".wntyDelaysTeam_narr_div");
                var wntyDelaysTeam_hours_div_Content_Add;
                var wntyDelaysTeam_dpdwn_Content_Add;

                var currentDropdownLine_Add;//generic

                $(workDescTeam_narr_div_Content_Add).each(function (index1) {

                    var workDescUserNamesArrTemp = [];

                    currentDropdownLine_Add = $(this).parent().attr("id");
                    workDescTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    $(workDescTeam_dpdwn_Content_Add).each(function (index2) {

                        var tempworkDescTeam_dpdwn_ID = $(workDescTeam_dpdwn_Content_Add[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_workDescTeam_dpdwn_ID_object = tempworkDescTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_workDescTeam_dpdwn_ID_object[0];

                        workDescUserNamesArrTemp.push(temp_UserID);
                    });

                    workDesc_Add.push([$(workDescTeam_narr_div_Content_Add[index1]).html(), 0, workDescUserNamesArrTemp]);

                    if (recordsToAddStatus == 0) {
                        recordsToAddStatus = 1;
                    }
                });

                $(delaysTeam_narr_div_Content_Add).each(function (index1) {

                    var delaysUserNamesArrTemp = [];

                    currentDropdownLine_Add = $(this).parent().attr("id");
                    //HOURS INPUT UPDATE
                    //delaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".delaysTeam_hours_div").html());
                    delaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".delaysTeam_hours_div input").val());
                    //HOURS INPUT UPDATE
                    delaysTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    $(delaysTeam_dpdwn_Content_Add).each(function (index2) {

                        var tempDelaysTeam_dpdwn_ID = $(delaysTeam_dpdwn_Content_Add[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_delaysTeam_dpdwn_ID_object = tempDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_delaysTeam_dpdwn_ID_object[0];

                        delaysUserNamesArrTemp.push(temp_UserID);
                    });

                    delays_Add.push([$(delaysTeam_narr_div_Content_Add[index1]).html(), delaysTeam_hours_div_Content_Add, delaysUserNamesArrTemp]);

                    if (recordsToAddStatus == 0) {
                        recordsToAddStatus = 1;
                    }
                });

                $(wntyDelaysTeam_narr_div_Content_Add).each(function (index1) {

                    var wntyDelaysUserNamesArrTemp = [];

                    currentDropdownLine_Add = $(this).parent().attr("id");
                    //HOURS INPUT UPDATE
                    //wntyDelaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".wntyDelaysTeam_hours_div").html());
                    wntyDelaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".wntyDelaysTeam_hours_div input").val());
                    //HOURS INPUT UPDATE
                    wntyDelaysTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    $(wntyDelaysTeam_dpdwn_Content_Add).each(function (index2) {

                        var tempWntyDelaysTeam_dpdwn_ID = $(wntyDelaysTeam_dpdwn_Content_Add[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_wntyDelaysTeam_dpdwn_ID_object = tempWntyDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_wntyDelaysTeam_dpdwn_ID_object[0];

                        wntyDelaysUserNamesArrTemp.push(temp_UserID);
                    });
                    wntyDelays_Add.push([$(wntyDelaysTeam_narr_div_Content_Add[index1]).html(), wntyDelaysTeam_hours_div_Content_Add, wntyDelaysUserNamesArrTemp]);

                    if (recordsToAddStatus == 0) {
                        recordsToAddStatus = 1;
                    }
                });
            }

            //only on existing records or copies
            function fn_loadTimeEntries_Edit() {

                var workDescTeam_narr_div_Content_Edit = $(".editedRecords").find(".workDescTeam_narr_div");
                var workDescTeam_dpdwn_Content_Edit;

                var delaysTeam_narr_div_Content_Edit = $(".editedRecords").find(".delaysTeam_narr_div");
                var delaysTeam_hours_div_Content_Edit;
                var delaysTeam_dpdwn_Content_Edit;

                var wntyDelaysTeam_narr_div_Content_Edit = $(".editedRecords").find(".wntyDelaysTeam_narr_div");
                var wntyDelaysTeam_hours_div_Content_Edit;
                var wntyDelaysTeam_dpdwn_Content_Edit;

                var currentLineUserNamesRtndRec_Edit = [];//generic
                var currentLine_Edit;//generic
                var currentDropdownLine_Edit;//generic

                $(workDescTeam_narr_div_Content_Edit).each(function (index1) {

                    var workDescUserNamesArrTemp = [];

                    currentLine_Edit = $(this).parent().attr("data-time-entry-id");
                    currentDropdownLine_Edit = $(this).parent().attr("id");
                    workDescTeam_dpdwn_Content_Edit = $("#" + currentDropdownLine_Edit).find(".select2-selection__choice__display");

                    $(workDescTeam_dpdwn_Content_Edit).each(function (index2) {//for each selected team member in the dropdown...

                        var tempworkDescTeam_dpdwn_ID = $(workDescTeam_dpdwn_Content_Edit[index2]).attr("id");//pull out the full attribute text
                        var regex = /\w+$/;
                        var temp_workDescTeam_dpdwn_ID_object = tempworkDescTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_workDescTeam_dpdwn_ID_object[0];//pull out the user id from the full attribute text

                        workDescUserNamesArrTemp.push(temp_UserID);//load which user ids are currently selected as being on the team
                    });

                    //BEGIN COPY THE ORIGINAL TEAM MEMBERS FROM THE RETURNED RECORD TO THE EDITED ARRAY
                    for (var i = 0; i < workDesc_RtndRecs.length; i++) {
                        if (workDesc_RtndRecs[i][0] == currentLine_Edit) {
                            currentLineUserNamesRtndRec_Edit = workDesc_RtndRecs[i][3];
                        }
                    };
                    //END COPY THE ORIGINAL TEAM MEMBERS FROM THE RETURNED RECORD TO THE EDITED ARRAY

                    //xxxUserNamesArrTemp contains which team members were returned from the database
                    //currentLineUserNamesRtndRec_Edit contains which team members are presently on the team
                    //a comparison will be done in the JSON logic to determine which user ids need to be added and which need to be deleted
                    workDesc_Edit.push([currentLine_Edit, $(workDescTeam_narr_div_Content_Edit[index1]).html(), 0, workDescUserNamesArrTemp, currentLineUserNamesRtndRec_Edit]);
                    if (recordsToEditStatus  == 0) {
                        recordsToEditStatus  = 1;
                    }
                });

                $(delaysTeam_narr_div_Content_Edit).each(function (index1) {

                    var delaysUserNamesArrTemp = [];

                    currentLine_Edit = $(this).parent().attr("data-time-entry-id");
                    currentDropdownLine_Edit = $(this).parent().attr("id");

                    //delaysTeam_hours_div_Content_Edit = parseFloat($("#" + currentDropdownLine_Edit).find(".delaysTeam_hours_div").html());
                    //HOURS INPUT UPDATE
                    //delaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".delaysTeam_hours_div").html());
                    delaysTeam_hours_div_Content_Edit = parseFloat($("#" + currentDropdownLine_Edit).find(".delaysTeam_hours_div input").val());
                    //HOURS INPUT UPDATE

                    delaysTeam_dpdwn_Content_Edit = $("#" + currentDropdownLine_Edit).find(".select2-selection__choice__display");

                    $(delaysTeam_dpdwn_Content_Edit).each(function (index2) {//for each selected team member in the dropdown...

                        var tempDelaysTeam_dpdwn_ID = $(delaysTeam_dpdwn_Content_Edit[index2]).attr("id");//pull out the full attribute text
                        var regex = /\w+$/;
                        var temp_delaysTeam_dpdwn_ID_object = tempDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_delaysTeam_dpdwn_ID_object[0];//pull out the user id from the full attribute text

                        delaysUserNamesArrTemp.push(temp_UserID);//load which user ids are currently selected as being on the team
                    });

                    //BEGIN COPY THE ORIGINAL TEAM MEMBERS FROM THE RETURNED RECORD TO THE EDITED ARRAY
                    for (var i = 0; i < delays_RtndRecs.length; i++) {
                        if (delays_RtndRecs[i][0] == currentLine_Edit) {
                            currentLineUserNamesRtndRec_Edit = delays_RtndRecs[i][3];
                        }
                    };
                    //END COPY THE ORIGINAL TEAM MEMBERS FROM THE RETURNED RECORD TO THE EDITED ARRAY

                    //xxxUserNamesArrTemp contains which team members were returned from the database
                    //currentLineUserNamesRtndRec_Edit contains which team members are presently on the team
                    //a comparison will be done in the JSON logic to determine which user ids need to be added and which need to be deleted
                    delays_Edit.push([currentLine_Edit, $(delaysTeam_narr_div_Content_Edit[index1]).html(), delaysTeam_hours_div_Content_Edit, delaysUserNamesArrTemp, currentLineUserNamesRtndRec_Edit]);
                    if (recordsToEditStatus == 0) {
                        recordsToEditStatus = 1;
                    }
                });

                $(wntyDelaysTeam_narr_div_Content_Edit).each(function (index1) {

                    var wntyDelaysUserNamesArrTemp = [];

                    currentLine_Edit = $(this).parent().attr("data-time-entry-id");
                    currentDropdownLine_Edit = $(this).parent().attr("id");

                    //wntyDelaysTeam_hours_div_Content_Edit = parseFloat($("#" + currentDropdownLine_Edit).find(".wntyDelaysTeam_hours_div").html());
                    //HOURS INPUT UPDATE
                    //wntyDelaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".wntyDelaysTeam_hours_div").html());
                    wntyDelaysTeam_hours_div_Content_Edit = parseFloat($("#" + currentDropdownLine_Edit).find(".wntyDelaysTeam_hours_div input").val());
                    //HOURS INPUT UPDATE

                    wntyDelaysTeam_dpdwn_Content_Edit = $("#" + currentDropdownLine_Edit).find(".select2-selection__choice__display");

                    $(wntyDelaysTeam_dpdwn_Content_Edit).each(function (index2) {//for each selected team member in the dropdown...

                        var tempWntyDelaysTeam_dpdwn_ID = $(wntyDelaysTeam_dpdwn_Content_Edit[index2]).attr("id");//pull out the full attribute text
                        var regex = /\w+$/;
                        var temp_wntyDelaysTeam_dpdwn_ID_object = tempWntyDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_wntyDelaysTeam_dpdwn_ID_object[0];//pull out the user id from the full attribute text

                        wntyDelaysUserNamesArrTemp.push(temp_UserID);//load which user ids are currently selected as being on the team
                    });

                    //BEGIN COPY THE ORIGINAL TEAM MEMBERS FROM THE RETURNED RECORD TO THE EDITED ARRAY
                    for (var i = 0; i < wntyDelays_RtndRecs.length; i++) {
                        if (wntyDelays_RtndRecs[i][0] == currentLine_Edit) {
                            currentLineUserNamesRtndRec_Edit = wntyDelays_RtndRecs[i][3];
                        }
                    };
                    //END COPY THE ORIGINAL TEAM MEMBERS FROM THE RETURNED RECORD TO THE EDITED ARRAY

                    //xxxUserNamesArrTemp contains which team members were returned from the database
                    //currentLineUserNamesRtndRec_Edit contains which team members are presently on the team
                    //a comparison will be done in the JSON logic to determine which user ids need to be added and which need to be deleted
                    wntyDelays_Edit.push([currentLine_Edit, $(wntyDelaysTeam_narr_div_Content_Edit[index1]).html(), wntyDelaysTeam_hours_div_Content_Edit, wntyDelaysUserNamesArrTemp, currentLineUserNamesRtndRec_Edit]);
                    if (recordsToEditStatus == 0) {
                        recordsToEditStatus = 1;
                    }
                });
            }

            //only on existing records or copies
            function fn_loadTimeEntries_Delete() {

                var timeEntriesToDelete = $(".deletedRecords");

                $(timeEntriesToDelete).each(function (index) {
                    timeEntryDeleteArr.push($(this).attr("data-time-entry-id"));
                });
            }

            //only on existing records or copies
            function fn_buildJsonObjects() {

                //BEGIN BUILD THE WORK DESCRIPTION JSON OBJECT
                //if there are no work description time entries to add, set the json object to null
                if (workDesc_Add.length < 1) {
                    workDescArrJson_Add = null
                }
                else {
                    for (var i = 0; i < workDesc_Add.length; i++) {
                        workDescArrJson_Add[i] = {
                            workDescription: workDesc_Add[i][0],
                            workDescriptionCategory: "1",
                            hours: workDesc_Add[i][1],
                            userNames: workDesc_Add[i][2]
                        };
                    }
                }

                if (workDesc_Edit.length < 1) {
                    workDescArrJson_Edit = null
                }

                else {
                    for (var i = 0; i < workDesc_Edit.length; i++) {
                        workDescArrJson_Edit[i] = {
                            timeEntryID: workDesc_Edit[i][0],
                            workDescription: workDesc_Edit[i][1],
                            workDescriptionCategory: "1",
                            hours: workDesc_Edit[i][2],
                            userNamesToAdd: _.difference(workDesc_Edit[i][3], workDesc_Edit[i][4]),
                            userNamesToDelete: _.difference(workDesc_Edit[i][4], workDesc_Edit[i][3])
                        };
                    }
                }
                //END BUILD THE WORK DESCRIPTION JSON OBJECT

                //BEGIN BUILD THE DELAYS JSON OBJECT
                //if there are no delay time entries to add, set the json object to null
                if (delays_Add.length < 1) {
                    delaysArrJson_Add = null
                }
                else {
                    for (var i = 0; i < delays_Add.length; i++) {
                        delaysArrJson_Add[i] = {
                            workDescription: delays_Add[i][0],
                            workDescriptionCategory: "2",
                            hours: delays_Add[i][1],
                            userNames: delays_Add[i][2]
                        };
                    }
                }

                if (delays_Edit.length < 1) {
                    delaysArrJson_Edit = null
                }

                else {
                    for (var i = 0; i < delays_Edit.length; i++) {
                        delaysArrJson_Edit[i] = {
                            timeEntryID: delays_Edit[i][0],
                            workDescription: delays_Edit[i][1],
                            workDescriptionCategory: "2",
                            hours: delays_Edit[i][2],
                            userNamesToAdd: _.difference(delays_Edit[i][3], delays_Edit[i][4]),
                            userNamesToDelete: _.difference(delays_Edit[i][4], delays_Edit[i][3])
                        };
                    }
                }
                //END BUILD THE DELAYS JSON OBJECT

                //BEGIN BUILD THE WNTY DELAYS JSON OBJECT
                //if there are no warranty delay time entries to add, set the json object to null
                if (wntyDelays_Add.length < 1) {
                    wntyDelaysArrJson_Add = null
                }
                else {
                    for (var i = 0; i < wntyDelays_Add.length; i++) {
                        wntyDelaysArrJson_Add[i] = {
                            workDescription: wntyDelays_Add[i][0],
                            workDescriptionCategory: "3",
                            hours: wntyDelays_Add[i][1],
                            userNames: wntyDelays_Add[i][2]
                        };
                    }
                }

                if (wntyDelays_Edit.length < 1) {
                    wntyDelaysArrJson_Edit = null
                }

                else {
                    for (var i = 0; i < wntyDelays_Edit.length; i++) {
                        wntyDelaysArrJson_Edit[i] = {
                            timeEntryID: wntyDelays_Edit[i][0],
                            workDescription: wntyDelays_Edit[i][1],
                            workDescriptionCategory: "3",
                            hours: wntyDelays_Edit[i][2],
                            userNamesToAdd: _.difference(wntyDelays_Edit[i][3], wntyDelays_Edit[i][4]),
                            userNamesToDelete: _.difference(wntyDelays_Edit[i][4], wntyDelays_Edit[i][3])
                        };
                    }
                }
                //END BUILD THE WNTY DELAYS JSON OBJECT
            }
                        
            //END SECTION TO PACK UP NEW RECORDS

            //BEGIN MISCELLANEOUS SECTION

            //cloned to new daily report
            function fn_showSpinner() {
                $.LoadingOverlay("show", {
                    image: "",
                    fontawesome: "fa fa-cog fa-spin"
                });

                $('#saveAndExit_btn, #saveAndSubmit_btn').attr('disabled', 'disabled');
            }

            function fn_hideSpinner() {
                $.LoadingOverlay("hide");
            }

            //cloned to new daily report
            function fn_printArrays() {

                //console.clear();
                //BEGIN RETURNED RECORDS ARRAYS
                console.log("*****************")
                console.log("work description combined array RETURNED RECORDS section follows:");
                console.log(workDesc_RtndRecs);

                console.log("delays combined array RETURNED RECORDS section follows:");
                console.log(delays_RtndRecs);

                console.log("warranty delays combined array RETURNED RECORDS section follows:");
                console.log(wntyDelays_RtndRecs);
                console.log("*****************")
                //END RETURNED RECORDS ARRAYS

                //BEGIN ADDED ARRAYS
                if (recordsToAddStatus == 1) {
                    console.log("*****************")                    
                    console.log("work description combined array ADDED RECORDS section follows:");
                    //console.log(workDesc_Add);
                    console.log(workDescArrJson_Add);
                   
                    console.log("delays combined array ADDED RECORDS section follows:");
                    //console.log(delays_Add);
                    console.log(delaysArrJson_Add);

                    console.log("warranty delays combined array ADDED RECORDS section follows:");
                    //console.log(wntyDelays_Add);
                    console.log(wntyDelaysArrJson_Add);
                    console.log("*****************")
                }
                //END ADDED ARRAYS

                //BEGIN EDITED ARRAYS
                if (recordsToEditStatus == 1) {
                    console.log("*****************")
                    console.log("work description combined array EDITED RECORDS section follows:");
                    console.log(workDesc_Edit);
                    console.log(workDescArrJson_Edit);

                    console.log("delays combined array EDITED RECORDS section follows:");
                    console.log(delays_Edit);
                    console.log(delaysArrJson_Edit);
                   
                    console.log("warranty delays combined array EDITED RECORDS section follows:");
                    console.log(wntyDelays_Edit);
                    console.log(wntyDelaysArrJson_Edit);
                    console.log("*****************")
                }
                //END EDITED ARRAYS

                //BEGIN DELETED ARRAYS
                if (recordsToDeleteStatus == 1) {
                    console.log("*****************")
                    console.log("time entry delete section follows:");
                    console.log(timeEntryDeleteArr);
                    console.log("*****************")
                }
                //END DELETED ARRAYS
            }

            //enable the select2 add-on
            //cloned to new daily report
            function fn_enableSelect2() {
                $('.Team_dpdwn').select2({
                    width: "80%",
                    placeholder: "Select Team",
                    closeOnSelect: "false"
                })

                $('#team_dpdwn').select2({
                    width: "100%",
                    placeholder: "Select Team",
                    closeOnSelect: "false"
                })
            }

            //disable the select2 add-on
            //cloned to new daily report
            function fn_disableSelect2() {
                $('.Team_dpdwn').select2('destroy')
            }

            //cloned to new daily report
            $("#printDailyReport").click(function () {//when a record's edit button is clicked...

                //begin axios delete post
                //axios.post('/DailyReportByReportIDPrint', {

                //    reportID: dailyReportID,
                //})
                //    .then(function (response) {
                //        console.log(response);
                //        $.alert({
                //            title: 'Confirmation',
                //            content: 'This daily report has been e-mailed.',
                //        });
                //    })
                //    .catch(function (error) {
                //        console.log(error);
                //    });
                //end axios add post

                var data = {
                    reportID: dailyReportID,
                };

                fn_showSpinner();

                $.ajax({
                    url: '/DailyReportByReportIDPrint',
                    method: 'post',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    traditional: true,
                    success: function (response) {
                        
                        $.alert({
                            title: 'Confirmation',
                            content: 'This daily report has been e-mailed.',
                        });
                    },
                    error: function (response) {
                        fn_hideSpinner();
                        var alertContent = "An error has occurred.";
                        $.alert({
                            title: 'Alert!',
                            content: alertContent,
                        });
                    }
                });
            });

            //cloned to new daily report
            function fn_cleanupDataEntryFields(passedText) {
                //BEGIN CLEAN UP TRASH FROM ENTERED TEXT
                passedText = passedText.replace(/(&amp;)+/g, "");//wipe out &amp;
                passedText = passedText.replace(/(amp;)+/g, "");//wipe out &amp;
                passedText = passedText.replace(/(&nbsp;)+/g, "");//wipe out nbsp
                passedText = passedText.replace(/(nbsp;)+/g, "");//wipe out nbsp               
                passedText = passedText.replace(/^\s+/g, "");//wipe out any leading white spaces in input boxes
                passedText = passedText.replace(/\s+$/g, "");//wipe out any trailing white spaces in input boxes

                passedText = passedText.replace(/(<([^>]+)>)/gi, "");//wipe out any html tags in input boxes
                passedText = passedText.replace(/(&lt;\w*&gt;)/ig, "");//wipe out any opening html tags in a div
                passedText = passedText.replace(/(&lt;\/\w*&gt;)/ig, "");//wipe out any closing html tags in a div
              
                return passedText;
                //END CLEAN UP TRASH FROM ENTERED TEXT
            }

            function fn_getSubmissionStatus() {

                rtndSubmissionStatus = $("#txt_rtndSubmissionStatus").attr("value");
                //console.log("returned submission status is: " + rtndSubmissionStatus);

                if (rtndSubmissionStatus == 0) {
                    $("#txt_rtndSubmissionStatus").text("Un-submitted");
                }
                if (rtndSubmissionStatus == 1) {
                    $("#txt_rtndSubmissionStatus").text("Submitted");
                }
            }

            $("#enableSelect2").click(function () {
                fn_enableSelect2();
            });

            $("#disableSelect2").click(function () {
                fn_disableSelect2();
            });

            //END MISCELLANEOUS SECTION

            //BEGIN VALIDATION BEFORE SAVING SECTION

            //cloned to new daily report
            function allFilled() {
                var filled = true;
                //console.clear();

                if ($("#slct_date").val() == '') {
                    //console.log($("#slct_date").val())
                    //console.log("#slct_date is empty")
                    filled = false;
                }

                if ($("#input_equipment").val() == '') {
                    //console.log($("#input_equipment").val())
                    //console.log("input_equipment is empty")
                    filled = false;
                }

                if ($("#input_startTime").val() == '') {
                    //console.log("input_startTime is empty")
                    filled = false;
                }

                if ($("#input_endTime").val() == '') {
                    //console.log("input_endTime is empty")
                    filled = false;
                }

                if ($("#input_lunch").val() == '') {
                    //console.log("input_lunch is empty")
                    filled = false;
                }

                if ($(dailyRptTeamUserIDArr).length < 1) {
                    //console.log("need more team members added to the daily report.")
                    filled = false;
                }

                if ($("#input_endTime").val() < $("#input_startTime").val()) {
                    //console.log("The end time must not be earlier than the start time.")
                    filled = false;
                }

                return filled;
            }

            //cloned to new daily report
            function enable_disableSave() {
                if (allFilled()) {
                    $('#saveAndExit_btn, #saveAndSubmit_btn').removeAttr('disabled');
                } else {
                    $('#saveAndExit_btn, #saveAndSubmit_btn').attr('disabled', 'disabled');
                }
            }

            //cloned to new daily report
            function fn_rowFilled(button) {
                var currentRow = button.parent().parent();
                var rowFilled = true;
                var narrDiv = currentRow.find(".narr_div").html();
                var teamDiv = currentRow.find(".select2-selection__rendered").html();
                //HOURS INPUT UPDATE
                //var hoursDiv = currentRow.find(".hours_div").html();
                var hoursDiv = currentRow.find(".hours_div input").val();
                //HOURS INPUT UPDATE
                var hoursDivMatch = hoursDiv.match(/^(2[0-3]|[01]?[0-9])\.(00|25|50|75)$/g);//should match 0-23.[00|25||50|75]

                
                //HOURS INPUT UPDATE
                //var delayHours = $(".addRecord, .editedRecords , .returnedRecords").find(".delaysTeam_hours_div, .wntyDelaysTeam_hours_div");
                var delayHours = $(".addRecord, .editedRecords, .returnedRecords").find(".delaysTeam_hours_div input, .wntyDelaysTeam_hours_div input");
                //HOURS INPUT UPDATE

                //console.clear();

                var totalDayHours = calcStartStopTimeDiff();
                var totalDelayHours = 0.0;

                if (narrDiv.length < 10) {
                    //console.log("Narr div is empty.")
                    $.alert({
                        title: 'Error!',
                        content: 'Narrative must be greater than 10 characters.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                if (teamDiv.length < 1) {
                    //console.log("dpdwn_div div is empty.")
                    $.alert({
                        title: 'Error!',
                        content: 'Must have at least one team member',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                if (hoursDiv == "" || !hoursDivMatch) {
                    //console.log("Hours div is empty or the hours do match the pattern.")
                    $.alert({
                        title: 'Error!',
                        content: 'Hours must be of form H.00, H.25, H.50, or H.75.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                delayHours.each(function (index) {
                    //HOURS INPUT UPDATE
                    //totalDelayHours = totalDelayHours + parseFloat($(this).html());
                    totalDelayHours = totalDelayHours + parseFloat($(this).val());
                    //HOURS INPUT UPDATE
                });

                //console.log("Total day hours: " + totalDayHours);
                //console.log("Total present delay hours: " + totalDelayHours);
                //console.log("Line delay hours: " + parseFloat(hoursDiv));

                //newly added delay hours are disallowed if the entered value exceeds the day's total possible hours
                if ((parseFloat(hoursDiv) + totalDelayHours) > totalDayHours) {

                    $.alert({
                        title: 'Error!',
                        content: 'Total delay hours must not exceed the total day hours minus lunch of ' + totalDayHours,
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                return rowFilled;
            }

            function calcStartStopTimeDiff() {
                // Get values.
                var valuestart = $("#input_startTime").val();
                var valuestop = $("#input_endTime").val();
                var valuelunch = $("#input_lunch").val();

                // Create date format.          
                var timeStart = new Date("01/01/2021 " + valuestart);
                var timeEnd = new Date("01/01/2021 " + valuestop);

                // Subtract.
                var difference = timeEnd - timeStart
                var time = msToTime(difference) - valuelunch;
                //console.log("Decimal hours is: " + time);

                return time;
            }

            //time is passed in as milliseconds
            function msToTime(s) {
                var ms = s % 1000;
                s = (s - ms) / 1000;
                var secs = s % 60;
                s = (s - secs) / 60;
                var mins = s / 60;

                return mins.toFixed(1);
            }

            $("#input_startTime, #input_endTime").change(calcStartStopTimeDiff);

            //END VALIDATION BEFORE SAVING SECTION   

            if (($("#isAdmin").text() == 'False') && $("#txt_rtndSubmissionStatus").attr("value") == 1) {
                $(":input").prop("disabled", true);

                $("#saveAndSubmit_btn").attr("hidden", "hidden");
                $("#saveAndExit_btn").attr("hidden", "hidden");
                $("#returnDailyRptAll_btn").removeAttr("disabled");
                $("#returnDailyRptAll_btn").parent().removeAttr("hidden");
                $("#pageTitle").html("VIEW FIELD SERVICE RECORD");
                //console.log("not admin.")
            }

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
            

        });//end document read jquery statements
    </script>
</head>
<hr class="sectionSeparator">
<div class="container" id="contnrDailyLog">
    <h3 id="pageTitle" style="text-align:center">EDIT FIELD SERVICE RECORD</h3>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Daily Log Information</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <div>
                <span><strong>Record No</strong></span>
                <span id="txt_dailyReportID" value="@Model.First().dailyReportID">@Model.First().dailyReportID</span>
            </div>
        </div>
        <div class="col-md-3" style="padding:5px">
            <div>
                <span><strong>Submission Status</strong></span>
                <span id="txt_rtndSubmissionStatus" value="@Model.First().submissionStatus">un-submitted?</span>
            </div>
        </div>
        <div class="col-md-3" style="padding:5px">
            <div>
                <span><strong>Author</strong></span>
                @*<span class="" id="dailyRptAuthor">@User.Identity.GetUserName()</span>*@
                <span class="" id="dailyRptAuthor">@Model.First().dailyReportAuthor</span>
                <span class="" id="isAdmin" hidden>@User.IsInRole("Admin")</span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="md-col-md-2" style="padding:5px">
            <strong>Job:</strong>
        </div>
        <div class="md-col-md-2" style="padding:5px">
            <select name="jobs_dpdown" id="jobs_dpdown" style="width:100%" value="">
                <option value="@Model.First().jobID">@Model.First().jobID|@Model.First().customerCode</option>
            </select>
            <input type="text" id="input_jobs_dpdown" name="" style="width:100%" hidden>
        </div>
        <div class="md-col-md-5" style="padding:5px"></div>
    </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Customer:</strong>:
        </div>
        <div class="col-md-7" style="padding:5px" id="output_customerName">@Model.First().customerName</div>
        <div class="col-md-1" style="padding:5px">
            <strong>Sub Job:</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <select name="subJobTypes_dpdwn" id="subJobTypes_dpdwn" style="width:100%" value="">
                <option value="@Model.First().subJobID">@Model.First().description</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Location:</strong>
        </div>
        <div class="col-md-7" style="padding:5px" id="output_location">@Model.First().address</div>
        <div class="col-md-1" style="padding:5px">
            <strong>Code:</strong>
        </div>
        <div class="col-md-2" style="padding:5px" id="output_customerCode">@Model.First().customerCode</div>
    </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Customer Contact:</strong>
        </div>
        <div class="col-md-4" style="padding:5px" id="output_customerContact">@Model.First().customerContact</div>
        <div class="col-md-4" style="padding:5px">
            <div>
                <span><strong>Correspondents:</strong></span>
                @foreach (var item in Model)
                {
                    //BEGIN TEMPORARY LOOP VARIABLES
                    List<string> temp_jobCorrespondentName = item.jobCorrespondentName;
                    //END TEMPORARY LOOP VARIABLES

                        for (var i = 0; i < (temp_jobCorrespondentName.Count); i++)
                        {
                            <span class="" id="output_jobCrspdtInfo" style="pointer-events:none">@temp_jobCorrespondentName[@i]|</span>
                        }
                }
            </div>
        </div>
        </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Equipment:</strong>
        </div>
        <div class="col-md-10" style="padding:5px" contenteditable>
            <input type="text" value="@Model.First().equipment" id="input_equipment" name="" style="width:100%">
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" style="padding:5px; text-align:center">
            <span class="span_inlineBlock">
                <strong>Date:</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="date" class="form-control form-control-sm" id="slct_date" placeholder="@Model.First().date" value=@Model.First().date>
            </span>
            <span class="span_inlineBlock">
                <strong>Start Time:</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="time" class="form-control form-control-sm" id="input_startTime" placeholder="" value="@Model.First().startTime">
            </span>
            <span class="span_inlineBlock">
                <strong>End Time:</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="time" class="form-control form-control-sm" id="input_endTime" placeholder="" value="@Model.First().endTime">
            </span>
            <span class="span_inlineBlock">
                <strong>Lunch (hr)</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="text" class="form-control form-control-sm" id="input_lunch" value="@Model.First().lunchHours">
            </span>
        </div>
    </div>
</div>

@*BEGIN ALLPAX TEAM*@
<hr class="sectionSeparator">
<div class="container" id="">
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Allpax Team:</strong>
        </div>
        <div class="col-md-10" style="padding:5px">
            <div class="row" style="margin:0px;">
                @*<select name="team_dpdwn" id="team_dpdwn" style="width:100%">
        </select>*@
                <select class="Team_dpdwn" id="team_dpdwn" style="width:100%" multiple="multiple">
                </select>
            </div>
            <div class="row" style="margin:0px;" name="txt_teamMembers" id="txt_teamMembers">
                <div class="team_" id="team_" style="padding:5px; border:solid black 1px" hidden>
                    Johnny Watkins|JW
                </div>
            </div>
            @*<button class='btn btn-light btn-sm' id="enableSelect2">enable</button>
            <button class='btn btn-light btn-sm' id="disableSelect2">disable</button>*@
        </div>
    </div>
</div>
@*END ALLPAX TEAM*@

@*BEGIN WORK DESCRIPTION SECTION*@
<hr class="sectionSeparator">
<div class="container" id="workDesc_container">
    <div class="row">
        <div class="col-md-6" style="padding:5px">
            <strong>Work Description</strong>
        </div>
        <div class="col-md-3" style="padding:5px">
            <strong>Team</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <strong>Action</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>State</strong>
        </div>
    </div>
    @*BEGIN RETURNED RECORDS*@
    @foreach (var item in Model)
    {
        for (var i = 0; i < (item.workDescArr.Count); i++)
        {
            //BEGIN TEMPORARY LOOP VARIABLES
            int temp_timeEntryID = item.workDescArr[i].timeEntryID;
            List<string> temp_userNames = item.workDescArr[i].userNames;
            List<string> temp_userShortNames = item.workDescArr[i].userShortNames;
            string temp_workDescription = item.workDescArr[i].workDescription;
            //END TEMPORARY LOOP VARIABLES

<div class=" row returnedRecords workDescLine" id="workDescLine_@temp_timeEntryID" data-time-Entry-ID="@temp_timeEntryID" style="">
    <div class="col-md-6 narr_div workDescTeam_narr_div" id="" contenteditable="false" style="">@temp_workDescription</div>

    <div class="col-md-3 dpdwn_div workDescTeam_dpdwn_div" style="padding: 0px; display:none">
        <button class="btn btn-light btn-sm Btn_selectAll lineWorkDescBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
        <select class="Team_dpdwn workDescTeam_dpdwn RtndRecs" id="" multiple="" tabindex="0" aria-hidden="false">
            @for (var j = 0; j < (@temp_userNames.Count); j++)
            {
                <option value="@temp_userNames[j]" selected>@temp_userShortNames[j]</option>
            }
        </select>
    </div>

    <div class="col-md-3 dpdwn_parsed_div workDescTeam_dpdwn_parsed_div" id="" contenteditable="false" style="">
        @for (var k = 0; k < (temp_userShortNames.Count); k++)
        {
            @(temp_userShortNames[k] + "|");
        }
    </div>

    @*<div class="col-md-1 hours_div workDescTeam_hours_div" id="" contenteditable="false" style="" hidden>0.0</div>*@

    @*//HOURS INPUT UPDATE*@
    @*<div class="col-md-1 hours_div workDescTeam_hours_div" id="" contenteditable="false" style="" hidden>*@
    <div class="col-md-1 hours_div workDescTeam_hours_div" id="" style="" hidden>
        <input type="text" value="0.00" id="" name="" style="width:100%" disabled>
        @*0.0*@
    </div>
    @*//HOURS INPUT UPDATE*@

    <div class="col-md-2 button_div workDescTeam_button_div" style="padding:0px;">
        <button id="" class="btn btn-light btn-sm Btn_edit lineWorkDescBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line."><i class="far fa-edit fa-2x" style="color:black;"></i></button>
        <button class="btn btn-light btn-sm Btn_save lineWorkDescBtn_save" data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class="far fa-save fa-2x" style="color: black;"></i></button>
        <button class="btn btn-light btn-sm Btn_delete lineWorkDescBtn_delete" data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line."><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
    </div>

    <div class="col-md-1 state_div workDescTeam_state_div" style="padding:0px;">
        <button class="btn btn-light btn-sm  Btn_rtndRecord" disabled><i class="fas fa-database fa-2x icon_rtndRecord"></i></button>
        <button class="btn btn-light btn-sm Btn_editedRecord" disabled hidden><i class="far fa-edit fa-2x icon_editedRecord"></i></button>
        <button class="btn btn-light btn-sm Btn_deletedRecord" disabled hidden><i class="far fa-minus-square fa-2x icon_deletedRecord"></i></button>
    </div>
</div>
        }
    }

    @*END RETURNED RECORDS*@

    @*BEGIN NEW WORK DESCRIPTION TEMPLATE*@
    <div class="" id="workDescriptionLine_template" style="">
        <div class="row entryRow workDescriptionLine_template_row_active" id="" style="">
            <div class="col-md-6 narr_div workDescTeam_narr_div" id="" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div workDescTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWorkDescBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new workDescTeam_dpdwn" id="" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div workDescTeam_dpdwn_parsed_div" id="" hidden contenteditable="false" style="">

            </div>

            <div class="col-md-1 hours_div workDescTeam_hours_div" id="" style="" hidden>
                <input type="text" value="0.00" id="" name="" style="width:100%">
                @*0.0*@
            </div>

            <div class="col-md-2 button_div workDescTeam_button_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_add newWorkDescBtn_add" data-bs-toggle="tooltip" data-bs-placement="" title="Add this line to the report."><img class="icon" src="~/assets/images/save-custom.svg" alt="" width="30"></button>

                <button id="" class="btn btn-light btn-sm Btn_edit lineWorkDescBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line." hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineWorkDescBtn_save' data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineWorkDescBtn_delete' data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line." hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>

            <div class="col-md-1 state_div workDescTeam_state_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>

        </div>

        <div class="row entryRow workDescriptionLine_template_row_hidden" id="" style="" hidden>
            <div class="col-md-6 narr_div workDescTeam_narr_div" id="" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div workDescTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWorkDescBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new workDescTeam_dpdwn" id="" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div workDescTeam_dpdwn_parsed_div" id="" hidden contenteditable="false" style="">

            </div>

            <div class="col-md-1 hours_div workDescTeam_hours_div" id="" style="" hidden>
                <input type="text" value="0.00" id="" name="" style="width:100%">
                @*0.0*@
            </div>

            <div class="col-md-2 button_div workDescTeam_button_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_add newWorkDescBtn_add" data-bs-toggle="tooltip" data-bs-placement="" title="Add this line to the report."><img class="icon" src="~/assets/images/save-custom.svg" alt="" width="30"></button>

                <button class="btn btn-light btn-sm Btn_edit lineWorkDescBtn_edit"  data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line." hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineWorkDescBtn_save' data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineWorkDescBtn_delete' data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line." hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>

            <div class="col-md-1 state_div workDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>
    </div>
    @*END NEW WORK DESCRIPTION TEMPLATE*@
</div>
@*END WORK DESCRIPTION SECTION*@

@*BEGIN DELAYS SECTION*@
<hr class="sectionSeparator">
<div class="container" id="delays_container">
    <div class="row">
        <div class="col-md-5" style="padding:5px">
            <strong>Delays</strong>
        </div>
        <div class="col-md-3" style="padding:5px">
            <strong>Team</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>Hours</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <strong>Action/Pending Op.</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>State</strong>
        </div>
    </div>
    @*BEGIN RETURNED RECORDS*@
    @foreach (var item in Model)
    {
        for (var i = 0; i < (item.delaysArr.Count); i++)
        {
            //BEGIN TEMPORARY LOOP VARIABLES
            int temp_timeEntryID = item.delaysArr[i].timeEntryID;
            List<string> temp_userNames = item.delaysArr[i].userNames;
            List<string> temp_userShortNames = item.delaysArr[i].userShortNames;
            //int temp_hours = item.delaysArr[i].hours;
            //float temp_hours = item.delaysArr[i].hours;
            decimal temp_hours = item.delaysArr[i].hours;
            string temp_workDescription = item.delaysArr[i].workDescription;
            //END TEMPORARY LOOP VARIABLES

<div class=" row returnedRecords delaysLine" id="delaysLine_@temp_timeEntryID" data-time-Entry-ID="@temp_timeEntryID" style="">
    <div class="col-md-5 narr_div delaysTeam_narr_div" id="" contenteditable="false" style="">@temp_workDescription</div>

    <div class="col-md-3 dpdwn_div delaysTeam_dpdwn_div" style="padding: 0px; display:none">
        <button class="btn btn-light btn-sm Btn_selectAll lineDelaysBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
        <select class="Team_dpdwn delaysTeam_dpdwn RtndRecs" id="" multiple="" tabindex="0" aria-hidden="false">
            @for (var j = 0; j < (@temp_userNames.Count); j++)
            {
                <option value="@temp_userNames[j]" selected>@temp_userShortNames[j]</option>
            }
        </select>
    </div>

    <div class="col-md-3 dpdwn_parsed_div delaysTeam_dpdwn_parsed_div" id="" contenteditable="false" style="">
        @*AB|DB|JB*@
        @for (var k = 0; k < (temp_userShortNames.Count); k++)
        {
            @(temp_userShortNames[k] + "|");
        }
    </div>

    @*<div class="col-md-1 hours_div delaysTeam_hours_div" id="" contenteditable="false" style="">@temp_hours</div>*@
    @*//HOURS INPUT UPDATE*@
    @*<div class="col-md-1 hours_div delaysTeam_hours_div" id="" contenteditable="true" style="">*@
    <div class="col-md-1 hours_div delaysTeam_hours_div" style="">
        <input type="text" value=@temp_hours id="" name="" style="width:100%" disabled>
    </div>
    @*//HOURS INPUT UPDATE*@

    <div class="col-md-2 button_div delaysTeam_button_div" style="padding:0px;">
        <button id="" class="btn btn-light btn-sm Btn_edit lineDelaysBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line."><i class="far fa-edit fa-2x" style="color:black;"></i></button>
        <button class="btn btn-light btn-sm Btn_save lineDelaysBtn_save" data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class="far fa-save fa-2x" style="color: black;"></i></button>
        <button class="btn btn-light btn-sm Btn_delete lineDelaysBtn_delete" data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line."><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
    </div>

    <div class="col-md-1 state_div delaysDescTeam_state_div" style="padding:0px;">
        <button class="btn btn-light btn-sm  Btn_rtndRecord" disabled><i class="fas fa-database fa-2x icon_rtndRecord"></i></button>
        <button class="btn btn-light btn-sm Btn_editedRecord" disabled hidden><i class="far fa-edit fa-2x icon_editedRecord"></i></button>
        <button class="btn btn-light btn-sm Btn_deletedRecord" disabled hidden><i class="far fa-minus-square fa-2x icon_deletedRecord"></i></button>
    </div>
</div>
        }
    }
    @*END RETURNED RECORDS*@

    @*BEGIN NEW DELAYS TEMPLATE*@
    <div class="" id="delaysLine_template">
        <div class="row entryRow delaysLine_template_row_active" id="" style="">
            <div class="col-md-5 narr_div delaysTeam_narr_div" id="" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div delaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineDelaysBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new delaysTeam_dpdwn" id="" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div delaysTeam_dpdwn_parsed_div" id="" hidden contenteditable="false" style="">

            </div>

            <div class="col-md-1 hours_div delaysTeam_hours_div" style="">
                <input type="text" value="" id="" name="" style="width:100%">
            </div>

            <div class="col-md-2 button_div delaysTeam_button_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_add newDelaysBtn_add" data-bs-toggle="tooltip" data-bs-placement="" title="Add this line to the report."><img class="icon" src="~/assets/images/save-custom.svg" alt="" width="30"></button>

                <button id="" class="btn btn-light btn-sm Btn_edit lineDelaysBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line." hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineDelaysBtn_save' data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineDelaysBtn_delete' data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line." hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>

            <div class="col-md-1 state_div delaysDescTeam_state_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>

        </div>

        <div class="row entryRow delaysLine_template_row_hidden" id="" style="" hidden>
            <div class="col-md-5 narr_div delaysTeam_narr_div" id="" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div delaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineDelaysBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new delaysTeam_dpdwn" id="" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div delaysTeam_dpdwn_parsed_div" id="" hidden contenteditable="false" style="">

            </div>

            <div class="col-md-1 hours_div delaysTeam_hours_div" style="">
                <input type="text" value="" id="" name="" style="width:100%">
            </div>

            <div class="col-md-2 button_div delaysTeam_button_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_add newDelaysBtn_add" data-bs-toggle="tooltip" data-bs-placement="" title="Add this line to the report."><img class="icon" src="~/assets/images/save-custom.svg" alt="" width="30"></button>

                <button id="" class="btn btn-light btn-sm Btn_edit lineDelaysBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line." hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineDelaysBtn_save' data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineDelaysBtn_delete' data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line." hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>
            <div class="col-md-1 state_div delaysDescTeam_state_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>
    </div>
    @*END DELAYS TEMPLATE*@
</div>
@*END DELAYS SECTION*@

@*BEGIN WARRANTY DELAYS  SECTION*@
<hr class="sectionSeparator">
<div class="container" id="wntyDelays_container">
    <div class="row">
        <div class="col-md-5" style="padding:5px">
            <strong>Warranty Delays</strong>
        </div>
        <div class="col-md-3" style="padding:5px">
            <strong>Team</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>Hours</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <strong>Action</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>State</strong>
        </div>
    </div>
    @*BEGIN RETURNED RECORDS*@
    @foreach (var item in Model)
    {
        for (var i = 0; i < (item.wntyDelaysArr.Count); i++)
        {
            //BEGIN TEMPORARY LOOP VARIABLES
            int temp_timeEntryID = item.wntyDelaysArr[i].timeEntryID;
            List<string> temp_userNames = item.wntyDelaysArr[i].userNames;
            List<string> temp_userShortNames = item.wntyDelaysArr[i].userShortNames;
            //int temp_hours = item.wntyDelaysArr[i].hours;
            decimal temp_hours = item.wntyDelaysArr[i].hours;
            string temp_workDescription = item.wntyDelaysArr[i].workDescription;
            //END TEMPORARY LOOP VARIABLES

<div class=" row returnedRecords wntyDelaysLine" id="wntyDelaysLine_@temp_timeEntryID" data-time-Entry-ID="@temp_timeEntryID" style="">
    <div class="col-md-5 narr_div wntyDelaysTeam_narr_div" id="" contenteditable="false" style="">@temp_workDescription</div>

    <div class="col-md-3 dpdwn_div wntyDelaysTeam_dpdwn_div" style="padding: 0px; display:none">
        <button class="btn btn-light btn-sm Btn_selectAll lineWntyDelaysBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
        <select class="Team_dpdwn wntyDelaysTeam_dpdwn RtndRecs" id="" multiple="" tabindex="0" aria-hidden="false">
            @for (var j = 0; j < (@temp_userNames.Count); j++)
            {
                <option value="@temp_userNames[j]" selected>@temp_userShortNames[j]</option>
            }
        </select>
    </div>

    <div class="col-md-3 dpdwn_parsed_div wntyDelaysTeam_dpdwn_parsed_div" id="" contenteditable="false" style="">
        @*AB|DB|JB*@
        @for (var k = 0; k < (temp_userShortNames.Count); k++)
        {
            @(temp_userShortNames[k] + "|");
        }
    </div>

    @*<div class="col-md-1 hours_div wntyDelaysTeam_hours_div" id="" contenteditable="false" style="">@temp_hours</div>*@
    @*//HOURS INPUT UPDATE*@
    @*<div class="col-md-1 hours_div wntyDelaysTeam_hours_div" id="" contenteditable="true" style="">*@
    <div class="col-md-1 hours_div wntyDelaysTeam_hours_div" style="">
        <input type="text" value=@temp_hours id="" name="" style="width:100%" disabled>
    </div>
    @*//HOURS INPUT UPDATE*@

    <div class="col-md-2 button_div wntyDelaysTeam_button_div" style="padding:0px;">
        <button id="" class="btn btn-light btn-sm Btn_edit lineWntyDelaysBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line."><i class="far fa-edit fa-2x" style="color:black;"></i></button>
        <button class="btn btn-light btn-sm Btn_save lineWntyDelaysBtn_save" data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class="far fa-save fa-2x" style="color: black;"></i></button>
        <button class="btn btn-light btn-sm Btn_delete lineWntyDelaysBtn_delete" data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line."><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
    </div>

    <div class="col-md-1 state_div wntyDelaysDescTeam_state_div" style="padding:0px;">
        <button class="btn btn-light btn-sm  Btn_rtndRecord" disabled><i class="fas fa-database fa-2x icon_rtndRecord"></i></button>
        <button class="btn btn-light btn-sm Btn_editedRecord" disabled hidden><i class="far fa-edit fa-2x icon_editedRecord"></i></button>
        <button class="btn btn-light btn-sm Btn_deletedRecord" disabled hidden><i class="far fa-minus-square fa-2x icon_deletedRecord"></i></button>
    </div>
</div>
        }
    }
    @*END RETURNED RECORDS*@

    @*BEGIN NEW WARRANTY DELAYS  TEMPLATE*@
    <div class="" id="wntyDelaysLine_template" style="">
        <div class="row entryRow wntyDelaysLine_template_row_active" id="" style="">
            <div class="col-md-5 narr_div wntyDelaysTeam_narr_div" id="" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div wntyDelaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWntyDelaysBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new wntyDelaysTeam_dpdwn" id="" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div wntyDelaysTeam_dpdwn_parsed_div" id="" hidden contenteditable="false" style="">

            </div>

            <div class="col-md-1 hours_div wntyDelaysTeam_hours_div" style="">
                <input type="text" value="" id="" name="" style="width:100%">
            </div>

            <div class="col-md-2 button_div wntyDelaysTeam_button_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_add newwntyDelaysBtn_add" data-bs-toggle="tooltip" data-bs-placement="" title="Add this line to the report."><img class="icon" src="~/assets/images/save-custom.svg" alt="" width="30"></button>

                <button id="" class="btn btn-light btn-sm Btn_edit linewntyDelaysBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line." hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save linewntyDelaysBtn_save' data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete linewntyDelaysBtn_delete' data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line." hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>
            <div class="col-md-1 state_div wntyDelaysDescTeam_state_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>

        <div class="row entryRow wntyDelaysLine_template_row_hidden" id="" style="" hidden>
            <div class="col-md-5 narr_div wntyDelaysTeam_narr_div" id="" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div wntyDelaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWntyDelaysBtn_selectAll" data-bs-toggle="tooltip" data-bs-placement="" title="Add all team members to this line."><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new wntyDelaysTeam_dpdwn" id="" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div wntyDelaysTeam_dpdwn_parsed_div" id="" hidden contenteditable="false" style="">

            </div>

            <div class="col-md-1 hours_div wntyDelaysTeam_hours_div" style="">
                <input type="text" value="" id="" name="" style="width:100%">
            </div>

            <div class="col-md-2 button_div wntyDelaysTeam_button_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_add newwntyDelaysBtn_add" data-bs-toggle="tooltip" data-bs-placement="" title="Add this line to the report."><img class="icon" src="~/assets/images/save-custom.svg" alt="" width="30"></button>

                <button id="" class="btn btn-light btn-sm Btn_edit linewntyDelaysBtn_edit" data-bs-toggle="tooltip" data-bs-placement="" title="Edit this line." hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save linewntyDelaysBtn_save' data-bs-toggle="tooltip" data-bs-placement="" title="Save edits to this line." hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete linewntyDelaysBtn_delete' data-bs-toggle="tooltip" data-bs-placement="" title="Delete this line." hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>
            <div class="col-md-1 state_div wntyDelaysDescTeam_state_div" style="padding:0px;">
                <button id="" class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>
    </div>
    @*END WARRANTY DELAYS TEMPLATE*@
    </div>
    @*END WARRANTY DELAYS*@
@*END WARRANTY DELAYS  SECTION*@

@*BEGIN FINAL PAGE ACTIONS*@
<hr class="sectionSeparator">
<div class="container" id="_container">
    <div class="row">
        <div class="col-md-6" style="padding:5px">
            <button type="button" class="btn btn-primary btn-sm" id="saveAndExit_btn" style="width: 100%">Save & Exit</button>
        </div>
        <div class="col-md-6" style="padding:5px">
            <button type="button" class="btn btn-primary btn-sm" id="saveAndSubmit_btn" style="width: 100%">Save & Submit</button>
        </div>
        <div class="col-md-12" style="padding:5px" hidden>
            <button type="button" class="btn btn-primary btn-sm" id="returnDailyRptAll_btn" style="width: 100%">Return to View Daily Reports Page</button>
        </div>
        @*<div class="col-md-4" style="padding:5px">
            <button type="button" class="btn btn-primary btn-sm" id="printDailyReport" style="width: 100%" disabled>E-mail Daily Report Test</button>
        </div>*@


    </div>
</div>
@*END FINAL PAGE ACTIONS*@









