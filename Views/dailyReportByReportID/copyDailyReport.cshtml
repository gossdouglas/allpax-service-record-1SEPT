@model List<allpax_service_record.Models.View_Models.vm_dailyReportByReportID>
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*COPY DAILY REPORT BY REPORT ID PAGE*@

<head>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/underscore@1.11.0/underscore-min.js"></script>

    <style>

        #workDesc_container, #delays_container, #wntyDelays_container {
            padding-bottom: 5px;
        }

        .container {
            border: 1px solid black;
        }

        .narr_div, .dpdwn_div, .dpdwn_parsed_div, .hours_div, .button_div, .state_div {
            border-top: 1px solid black;
            border-left: 1px solid black;
            padding: 5px;
        }

        .state_div {
            border-right: 1px solid black;
        }

        .row {
            border: none;
            padding-left: 5px;
            padding-right: 5px;
        }

        .entryRow .narr_div, .entryRow .dpdwn_div, .entryRow .hours_div, .entryRow .button_div, .entryRow .state_div {
            border-bottom: 1px solid black;
        }

        .sectionSeparator {
            margin: 1px;
            opacity: 0;
        }
    </style>

    <script>
        $(document).ready(function () {//begin document read jquery statements

            var dailyReportID = $("#txt_dailyReportID").attr("value");
            var jobs_dpdown = $('#jobs_dpdown');
            var subJobTypes_dpdwn = $('#subJobTypes_dpdwn');
            var team_dpdwn = $('#team_dpdwn');
            var dailyRptAuthor = $('#dailyRptAuthor').html();//suck in the current user name along with the domain
            dailyRptAuthor = dailyRptAuthor.replace(/@@.*/, "");//chop off the domain

            var dailyRptTeamArr = [];
            var dailyRptTeamUserIDArr = [];
            var recordsToAddStatus = 0;

            var workDesc_Add = [];
            var workDescArrJson_Add = [];
            var indexWorkDescEntries_Add = @Model.First().workDescArr.Count;//keep track of the number of work description entries added

            var delays_Add = [];
            var delaysArrJson_Add = [];
            var indexDelaysEntries_Add = @Model.First().delaysArr.Count;//keep track of the number of delays entries added

            var wntyDelays_Add = [];
            var wntyDelaysArrJson_Add = [];
            var indexWntyDelaysEntries_Add = @Model.First().wntyDelaysArr.Count;//keep track of the number of warranty delays entries added

            fn_enableSelect2();//enable the select2 add-on on page load
            fn_loadDropDowns();

            //console.log($(dailyRptTeamUserIDArr))
            //enable_disableSave();
            //console.log($(dailyRptTeamUserIDArr))
            //fn_printOnLoad();

            //BEGIN DAILY REPORT LOG SECTION

            //begin jobs id dropdown change
            //differs between new daily report and an existing one
            jobs_dpdown.change(function () {

                $.ajax({
                    url: '/DataService.asmx/GetCustomerInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {

                        $(data).each(function (index, item) {
                            $("#output_customerName").html(item.customerName.toString());
                            $("#output_location").html(item.address.toString());
                            $("#output_customerCode").html(item.customerCode.toString());
                            $("#output_customerContact").html(item.customerContact.toString());
                        });
                    }
                });

                //begin fill sub jobs dropdown
                $('#subJobTypes_dpdwn').empty();//clear the dropdown

                $.ajax({
                    url: '/DataService.asmx/GetSubJobTypesByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            subJobTypes_dpdwn.append($('<option/>', { value: item.subJobID, text: item.description }));
                        });
                    }
                });
                //end fill sub jobs dropdown

                //begin fill the job correspondents section
                $.ajax({
                    url: '/DataService.asmx/GetJobCrspdtInfoByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {
                        //console.clear();
                        var temp_output_jobCrspdtInfo = "";
                        $(data).each(function (index, item) {
                            temp_output_jobCrspdtInfo = temp_output_jobCrspdtInfo + item.jobCrspdtName + "|";
                        });
                        $("#output_jobCrspdtInfo").text(temp_output_jobCrspdtInfo);
                    }
                });
                //end fill the job correspondents section
            });
            //end jobs id dropdown change

            //begin add team member on drop down change
            //differs between new daily report and an existing one
            $(team_dpdwn).on("select2:select", function (e) {//on selecting a new team member to add...

                var tempTeamMemberUserID = e.params.data.id;

                $.ajax({
                    url: 'DataService.asmx/GetAllTeamNames',
                    method: 'post',
                    dataType: 'json',
                    data: { userName: tempTeamMemberUserID },//
                    success: function (data) {

                        $(data).each(function (index, item) {
                            var temp_userName = item.userName;
                            var temp_name = item.name;
                            var temp_shortName = item.shortName;

                            dailyRptTeamArr.push([temp_userName, temp_name, temp_shortName]);
                            dailyRptTeamUserIDArr.push(temp_userName);

                            $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".team_dpdwn_new");
                            $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".RtndRecs");
                            enable_disableSave();//determine if the save button needs to be enabled or disabled
                        });
                        //end AddTeamMember

                        //begin DeleteTeamMember
                        //begin axios delete post
                        axios.post('/dailyReportByReportID/AddTeamMember', {

                            dailyReportID: dailyReportID,
                            userName: tempTeamMemberUserID,
                        })
                            .then(function (response) {
                                console.log("Added team member " + tempTeamMemberUserID);
                                console.log(dailyRptTeamArr);
                                console.log(response);
                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                        //end axios delete post
                    }
                });
            });
            //end add team member on drop down change

            //begin when a team member class is clicked for deletion...
            //differs between new daily report and an existing one
            //$(".team_").on('click', function () {
            $(team_dpdwn).on("select2:unselect", function (e) {//on unselecting a team member to delete...

                //var tempTeamMemberUserID = this.id.replace(/team_[0-9]*/i, "");
                var tempTeamMemberUserID = e.params.data.id;

                for (var row = 0; row < dailyRptTeamArr.length; row++) {
                    if (dailyRptTeamArr[row][0] == tempTeamMemberUserID) {
                        dailyRptTeamArr.splice(row, 1);
                        dailyRptTeamUserIDArr.splice(row, 1);
                    }
                }

                $(".team_dpdwn_new option[value='" + tempTeamMemberUserID + "']").remove();
                $(".RtndRecs option[value='" + tempTeamMemberUserID + "']").remove();

                enable_disableSave();//determine if the save button needs to be enabled or disabled

                //begin DeleteTeamMember
                //begin axios delete post
                axios.post('/dailyReportByReportID/DeleteTeamMember', {

                    dailyReportID: dailyReportID,
                    userName: tempTeamMemberUserID
                })
                    .then(function (response) {
                        console.log("Deleted team member " + tempTeamMemberUserID);
                        console.log(dailyRptTeamArr);
                        console.log(response);
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                ////end axios delete post
            });
            //end when a team member class is clicked for deletion...

            //cloned to new daily report
            $("#contnrDailyLog").on("change keypress", function () {
                dailyLogInfoChngd = true;
                enable_disableSave();
            });

            $("#input_equipment").on("blur", function () {

                //clean up the text entry
                $("#input_equipment").val(fn_cleanupDataEntryFields($("#input_equipment").val()));
            });

            //END DAILY REPORT LOG SECTION

            //BEGIN RETURNED RECORDS AND TIME ENTRY SECTION

            //cloned to new daily report
            $(".Btn_add").click(function () {

                if (fn_rowFilled($(this))) {

                    fn_produceParsedShortNames($(this));
                    fn_disableSelect2();
                    var currentRow = $(this).parent().parent();

                    var cleaned_narrDiv = fn_cleanupDataEntryFields(currentRow.find(".narr_div").html());
                    currentRow.find(".narr_div").html(cleaned_narrDiv);//set the content of .narr_div to cleaned html

                    currentRow.find(".narr_div").attr("contenteditable", "false");//lock the narrative for edits
                    currentRow.find(".dpdwn_div").hide();//hide the team dropdown
                    currentRow.find(".dpdwn_parsed_div").removeAttr("hidden");//show the parsed version of the team dropdown
                    currentRow.find(".dpdwn_parsed_div").show();//show the parsed version of the team dropdown
                    currentRow.find(".Btn_add").hide();//remove the add button, only needed for new work descriptions
                    currentRow.find(".Btn_clear").hide();//remove the clear button, only needed for new work descriptions
                    currentRow.find(".Btn_edit").removeAttr("hidden");//show the edit button, only needed for work description line entries
                    currentRow.find(".Btn_delete").removeAttr("hidden");//show the delete button, only needed for work description line entries
                    currentRow.last().find(".narr_div").css('border-bottom-style', 'none');
                    currentRow.find(".dpdwn_parsed_div").css('border-bottom-style', 'none');
                    currentRow.find(".button_div").css('border-bottom-style', 'none');

                    if (/newWorkDescBtn_add/i.test($(this).attr("class"))) {
                        indexWorkDescEntries_Add = indexWorkDescEntries_Add + 1;
                        //console.log(indexWorkDescEntries_Add);
                        $(".workDescriptionLine_template_row_hidden").removeAttr("hidden");
                        currentRow.prop("id", "workDescLine_" + indexWorkDescEntries_Add).appendTo("#workDescriptionLine_template");
                        $("#workDescLine_" + indexWorkDescEntries_Add).prop("class", " row addRecord workDescLine");
                        $("#workDescLine_" + indexWorkDescEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                        $(".workDescriptionLine_template_row_hidden").clone(true).prop("class", "row entryRow workDescriptionLine_template_row_active").appendTo("#workDescriptionLine_template");
                        $(".workDescriptionLine_template_row_hidden").attr("hidden", "true");
                    }
                    else if (/newDelaysBtn_add/i.test($(this).attr("class"))) {
                        indexDelaysEntries_Add = indexDelaysEntries_Add + 1;

                        $(".delaysLine_template_row_hidden").removeAttr("hidden");
                        currentRow.prop("id", "delaysLine_" + indexDelaysEntries_Add).appendTo("#delaysLine_template");
                        $("#delaysLine_" + indexDelaysEntries_Add).prop("class", "row addRecord delaysLine");

                        //HOURS INPUT UPDATE
                        //$("#delaysLine_" + indexDelaysEntries_Add).find(".delaysTeam_hours_div").attr("contenteditable", "false");
                        $("#delaysLine_" + indexDelaysEntries_Add).find(".delaysTeam_hours_div input").attr("disabled", "disabled");
                        //HOURS INPUT UPDATE

                        $("#delaysLine_" + indexDelaysEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                        $(".delaysLine_template_row_hidden").clone(true).prop("class", "row entryRow delaysLine_template_row_active").appendTo("#delaysLine_template");
                        $(".delaysLine_template_row_hidden").attr("hidden", "true");
                    }
                    else if (/newWntyDelaysBtn_add/i.test($(this).attr("class"))) {
                        indexWntyDelaysEntries_Add = indexWntyDelaysEntries_Add + 1;

                        $(".wntyDelaysLine_template_row_hidden").removeAttr("hidden");
                        currentRow.prop("id", "wntyDelaysLine_" + indexWntyDelaysEntries_Add).appendTo("#wntyDelaysLine_template");
                        $("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).prop("class", " row addRecord wntyDelaysLine");

                        //HOURS INPUT UPDATE
                        //$("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).find(".wntyDelaysTeam_hours_div").attr("contenteditable", "false");
                        $("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).find(".wntyDelaysTeam_hours_div input").attr("disabled", "disabled");
                        //HOURS INPUT UPDATE

                        $("#wntyDelaysLine_" + indexWntyDelaysEntries_Add).find(".Btn_addedRecord").removeAttr("hidden");

                        $(".wntyDelaysLine_template_row_hidden").clone(true).prop("class", "row entryRow wntyDelaysLine_template_row_active").appendTo("#wntyDelaysLine_template");
                        $(".wntyDelaysLine_template_row_hidden").attr("hidden", "true");
                    }

                    fn_enableSelect2();
                    enable_disableSave();
                }
            });

            //cloned to new daily report
            $(".Btn_edit").click(function () {
                //HOURS INPUT UPDATE
                var currentRow = $(this).parent().parent();
                var currentRowClass = currentRow.attr("class");
                var currentRowClassSwap;

                console.log(currentRowClass);

                if (currentRowClass.includes("addRecord")) {
                    currentRowClassSwap = currentRowClass.replace(/addRecord/, "addRecordInEdit");//
                    $(currentRow).prop("class", currentRowClassSwap);
                }

                console.log(".Btn_edit:" + currentRow.attr("class"));
                console.log(".Btn_edit" + currentRowClassSwap);
                //HOURS INPUT UPDATE

                $(this).hide();
                $(currentRow).find(".Btn_save").removeAttr("hidden");
                $(currentRow).find(".Btn_save").show();

                $(currentRow).find(".narr_div").attr("contenteditable", "true");

                //HOURS INPUT UPDATE
                //$(currentRow).find(".hours_div").attr("contenteditable", "true");
                $(currentRow).find(".hours_div input").removeAttr("disabled");
                //HOURS INPUT UPDATE

                $(currentRow).find(".dpdwn_parsed_div").hide();
                $(currentRow).find(".dpdwn_div").show();
                $(currentRow).css("color", "red");
            });

            //cloned to new daily report
            $(".Btn_save").click(function () {

                //HOURS INPUT UPDATE
                var currentRow = $(this).parent().parent();
                var currentRowClass = currentRow.attr("class");
                var currentRowClassSwap;
                    //HOURS INPUT UPDATE

                if (fn_rowFilled($(this))) {

                    //var currentRow = $(this).parent().parent();
                    //HOURS INPUT UPDATE
                    if (currentRowClass.includes("addRecordInEdit")) {
                        //currentRowClassSwap = currentRowClass.replace(/addRecord inEdit/, "addRecord");//
                        currentRowClassSwap = currentRowClass.replace(/addRecordInEdit/, "addRecord");//
                        $(currentRow).prop("class", currentRowClassSwap);
                    }
                    //HOURS INPUT UPDATE

                    var cleaned_narrDiv = fn_cleanupDataEntryFields(currentRow.find(".narr_div").html());
                    currentRow.find(".narr_div").html(cleaned_narrDiv);//set the content of .narr_div to cleaned html

                    $(this).hide();
                    $(currentRow).find(".Btn_edit").removeAttr("hidden");
                    $(currentRow).find(".Btn_edit").show();

                    $(currentRow).find(".narr_div").attr("contenteditable", "false");

                    //HOURS INPUT UPDATE
                    //$(currentRow).find(".hours_div ").attr("contenteditable", "false");
                    $(currentRow).find(".hours_div input").attr("disabled", "disabled");
                    //HOURS INPUT UPDATE

                    $(currentRow).find(".dpdwn_parsed_div").show();
                    $(currentRow).find(".dpdwn_div").hide();
                    $(currentRow).css("color", "black");

                    fn_produceParsedShortNames($(this));
                }
            });

            //cloned to new daily report
            $(".Btn_delete").click(function () {
                var currentRow = $(this).parent().parent();
                var currentNumValidRecs = indexWorkDescEntries_Add;
                temp_LineClass = $(currentRow).prop("class");

                if (temp_LineClass.includes("workDescLine")) {
                    if (currentNumValidRecs > 1) {//if there is at least one more work description entry, then go ahead and delete this entry
                        $(currentRow).remove();
                        indexWorkDescEntries_Add = indexWorkDescEntries_Add - 1;//only on the new daily report page
                    }
                    else {
                        $.alert({
                            title: 'Cannot Delete!',
                            content: 'Must have at least one copied record or added record in the work description section.',
                        });
                    }
                }
                if (temp_LineClass.includes("delaysLine")) {
                    $(currentRow).remove();
                }
                if (temp_LineClass.includes("wntyDelaysLine")) {
                    $(currentRow).remove();
                }                
            });

            //cloned to new daily report
            $(".Btn_selectAll").click(function () {
                var currentRow = $(this).parent().parent();

                //disable select2 for this particular dropdown, select all team members and then re-enable select2
                currentRow.find(".Team_dpdwn").select2('destroy').find('option').prop('selected', 'selected');
                fn_enableSelect2();
            });

            //differs between new daily report and an existing one
            function fn_loadDropDowns() {

                //cloned to new daily report
                //begin fill the jobs dropdown
                $.ajax({
                    //url: 'DataService.asmx/GetAllJobNos',
                    url: '/DataService.asmx/GetAllJobNos',
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        $(data).each(function (index, item) {
                            if (item.jobID !== jobs_dpdown.val()) {
                                jobs_dpdown.append($('<option/>', { value: item.jobID, text: item.jobID }));
                            }
                        });
                    }
                });
                //end fill the jobs dropdown

                //differs between new daily report and an existing one
                //begin fill sub jobs dropdown
                $.ajax({
                    //url: 'DataService.asmx/GetSubJobTypesByJobID',
                    url: '/DataService.asmx/GetSubJobTypesByJobID',
                    method: 'post',
                    dataType: 'json',
                    data: { jobID: jobs_dpdown.val() },
                    success: function (data) {
                        $(data).each(function (index, item) {
                            if (item.subJobID !== subJobTypes_dpdwn.val()) {
                                subJobTypes_dpdwn.append($('<option/>', { value: item.subJobID, text: item.description }));
                            }
                        });
                    }
                });
                //end fill sub jobs dropdown

                //begin load team members on page load
                //console.log("daily report ID passed: " + dailyReportID);
                $.ajax({
                    //url: 'DataService.asmx/GetAllTeamNamesByReportID',
                    url: '/DataService.asmx/GetAllTeamNamesByReportID',
                    method: 'post',
                    dataType: 'json',
                    data: { userName: '%', dailyReportID: dailyReportID },
                    success: function (data) {
                        //console.clear();

                        $(data).each(function (index, item) {
                            var temp_userName = item.userName;
                            var temp_name = item.name;
                            var temp_shortName = item.shortName;

                            dailyRptTeamArr.push([temp_userName, temp_name, temp_shortName]);
                            dailyRptTeamUserIDArr.push(temp_userName);
                        });
                        //console.log("the contents of dailyRptTeamUserIDArr: " + dailyRptTeamUserIDArr);

                        //cloned to new daily report
                        //begin fill the team names dropdown
                        $.ajax({
                            //url: 'DataService.asmx/GetAllTeamNames',
                            url: '/DataService.asmx/GetAllTeamNames',
                            method: 'post',
                            dataType: 'json',
                            data: { userName: '%' },
                            success: function (data) {

                                $(data).each(function (index, item) {

                                    var temp_userName = item.userName;
                                    var temp_name = item.name;
                                    var temp_shortName = item.shortName;

                                    //if the user is part of this copied daily report, add this user to the report team as selected and as available for the new team dropdowns
                                    if ($.inArray(temp_userName, dailyRptTeamUserIDArr) !== -1) {
                                        $("<option value=" + temp_userName + " selected>" + temp_name + "|" + temp_shortName + "</option>").appendTo("#team_dpdwn");
                                        $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".Team_dpdwn.team_dpdwn_new");                                        
                                        //console.log(temp_userName + " is in dailyRptTeamUserIDArr");
                                    }

                                    //if the user is not part of this copied daily report but is the author, add this user to the report team as selected and as available for the new team dropdowns
                                    else if ($.inArray(dailyRptAuthor, dailyRptTeamUserIDArr) == -1 && dailyRptAuthor == temp_userName) {
                                        //console.log("The currently logged in user " + dailyRptAuthor + " was not found the copied daily report.  They will be added.")
                                        dailyRptTeamArr.push([temp_userName, temp_name, temp_shortName]);
                                        dailyRptTeamUserIDArr.push(temp_userName);
                                        //console.log("the contents of dailyRptTeamUserIDArr: " + dailyRptTeamUserIDArr);

                                        $("<option value=" + temp_userName + " selected>" + temp_name + "|" + temp_shortName + "</option>").appendTo("#team_dpdwn");
                                        $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".Team_dpdwn.team_dpdwn_new");
                                        $("<option value=" + temp_userName + ">" + temp_shortName + "</option>").appendTo(".Team_dpdwn.RtndRecs");
                                    }

                                    //add this user as available, but not selected in the report team dropdown
                                    else {
                                        $("<option value=" + temp_userName + ">" + temp_name + "|" + temp_shortName + "</option>").appendTo("#team_dpdwn");
                                    }
                                });
                            }
                        });
                        //end fill the team names dropdown
                        //fn_loadTeamNamesRtndRecs();//load team names into the records returned from the database
                    }
                });
                //end load team members on page load
            }

            //cloned to new daily report
            function fn_produceParsedShortNames(button) {
                var currentWorkDescTeamShortNamesParsed = "";
                //select the list elements that contain the short names of the team members
                var currentTeamShortNameLists = $(button).parent().parent().find(".dpdwn_div").find(".select2-selection__rendered li");
                //select the div where the short names will be written
                var currentTeamDpdwnParsed = $(button).parent().parent().find(".dpdwn_parsed_div");

                $(currentTeamShortNameLists).each(function (index) {
                    currentWorkDescTeamShortNamesParsed = currentWorkDescTeamShortNamesParsed.concat($(this).attr("title") + "|");
                });
                currentTeamDpdwnParsed.html(currentWorkDescTeamShortNamesParsed);
            }

            //END RETURNED RECORDS AND TIME ENTRY SECTION

            //BEGIN SECTION TO PACK UP AND SAVE NEW RECORDS

            //cloned to new daily report
            $("#saveAndExit_btn").click(function () {//

                fn_exitSubmit(0);
            });

            //cloned to new daily report
            $("#saveAndSubmit_btn").click(function () {//when the add button is clicked...

                fn_exitSubmit(1);
            });

            //differs between new daily report and an existing one
            //$("#addButton").click(function () {//when the add button is clicked...
            function fn_exitSubmit(submissionState) {
                submissionStatus = submissionState;//0 indicates meant to be stored, 1 indicates stored and submitted for review

                //differs between new daily report and an existing one
                fn_loadTimeEntries_Add();
                fn_buildJsonObjects();
                fn_printArrays();

                //cloned to new daily report
                var addItem1 = $("#jobs_dpdown").val();
                var addItem2 = $("#slct_date").val();
                var addItem3 = $("#subJobTypes_dpdwn").val();
                var addItem4 = $("#input_startTime").val();
                var addItem5 = $("#input_endTime").val();
                var addItem6 = $("#input_lunch").val();
                var addItem7 = $("#input_equipment").val();
                var addItem8 = dailyRptAuthor;
                var addItem9 = dailyRptTeamUserIDArr;
                var addItem10 = submissionStatus;

                var totalOpsToDo = recordsToAddStatus;//stores the total number of types of ops to carry out
                var serverResponseSuccess = "";//page to which the browser will redirect after all AJAX calls are successful
                //console.log("total operations to complete on entry to fn_exitSubmit is: " + totalOpsToDo);

                var data = {
                    dailyReportID: 0,
                    jobID: addItem1,
                    date: addItem2,
                    subJobID: addItem3,
                    startTime: addItem4,
                    endTime: addItem5,
                    lunchHours: addItem6,
                    equipment: addItem7,
                    dailyReportAuthor: addItem8,
                    dailyRptTeamArr: addItem9,
                    submissionStatus: addItem10,
                    workDescArr: workDescArrJson_Add,
                    delaysArr: delaysArrJson_Add,
                    wntyDelaysArr: wntyDelaysArrJson_Add
                };

                fn_showSpinner();

                $.ajax({
                    url: '/dailyReport/AddDailyReport',
                    method: 'post',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    traditional: true,
                    success: function (response) {
                        totalOpsToDo = totalOpsToDo - 1;//reduce the total ops to complete by 1
                        console.log("add record success. total operations to complete is now: " + totalOpsToDo);
                        serverResponseSuccess = response;
                        console.log("response is: " + response)
                        if (totalOpsToDo == 0) {//if there are no more ops left to complete, redirect the browser
                            window.location.href = serverResponseSuccess;
                        }
                    }
                });                
            }

            //cloned to new daily report
            function fn_loadTimeEntries_Add () {

                var workDescTeam_narr_div_Content_Add = $(".addRecord").find(".workDescTeam_narr_div");
                var workDescTeam_dpdwn_Content_Add;

                var delaysTeam_narr_div_Content_Add = $(".addRecord").find(".delaysTeam_narr_div");
                var delaysTeam_hours_div_Content_Add;
                var delaysTeam_dpdwn_Content_Add;

                var wntyDelaysTeam_narr_div_Content_Add = $(".addRecord").find(".wntyDelaysTeam_narr_div");
                var wntyDelaysTeam_hours_div_Content_Add;
                var wntyDelaysTeam_dpdwn_Content_Add;

                var currentDropdownLine_Add;//generic

                $(workDescTeam_narr_div_Content_Add).each(function (index1) {

                    var workDescUserNamesArrTemp = [];

                    currentDropdownLine_Add = $(this).parent().attr("id");
                    workDescTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    $(workDescTeam_dpdwn_Content_Add).each(function (index2) {

                        var tempworkDescTeam_dpdwn_ID = $(workDescTeam_dpdwn_Content_Add[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_workDescTeam_dpdwn_ID_object = tempworkDescTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_workDescTeam_dpdwn_ID_object[0];

                        workDescUserNamesArrTemp.push(temp_UserID);
                    });

                    workDesc_Add.push([$(workDescTeam_narr_div_Content_Add[index1]).html(), 0, workDescUserNamesArrTemp]);

                    if (recordsToAddStatus == 0) {
                        recordsToAddStatus = 1;
                    }
                });

                $(delaysTeam_narr_div_Content_Add).each(function (index1) {

                    var delaysUserNamesArrTemp = [];

                    currentDropdownLine_Add = $(this).parent().attr("id");

                    //HOURS INPUT UPDATE
                    //delaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".delaysTeam_hours_div").html());
                    delaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".delaysTeam_hours_div input").val());
                    //HOURS INPUT UPDATE

                    delaysTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    $(delaysTeam_dpdwn_Content_Add).each(function (index2) {

                        var tempDelaysTeam_dpdwn_ID = $(delaysTeam_dpdwn_Content_Add[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_delaysTeam_dpdwn_ID_object = tempDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_delaysTeam_dpdwn_ID_object[0];

                        delaysUserNamesArrTemp.push(temp_UserID);
                    });

                    delays_Add.push([$(delaysTeam_narr_div_Content_Add[index1]).html(), delaysTeam_hours_div_Content_Add, delaysUserNamesArrTemp]);

                    if (recordsToAddStatus == 0) {
                        recordsToAddStatus = 1;
                    }
                });

                $(wntyDelaysTeam_narr_div_Content_Add).each(function (index1) {

                    var wntyDelaysUserNamesArrTemp = [];

                    currentDropdownLine_Add = $(this).parent().attr("id");

                    //HOURS INPUT UPDATE
                    //wntyDelaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".wntyDelaysTeam_hours_div").html());
                    wntyDelaysTeam_hours_div_Content_Add = parseFloat($("#" + currentDropdownLine_Add).find(".wntyDelaysTeam_hours_div input").val());
                    //HOURS INPUT UPDATE

                    wntyDelaysTeam_dpdwn_Content_Add = $("#" + currentDropdownLine_Add).find(".select2-selection__choice__display");

                    $(wntyDelaysTeam_dpdwn_Content_Add).each(function (index2) {

                        var tempWntyDelaysTeam_dpdwn_ID = $(wntyDelaysTeam_dpdwn_Content_Add[index2]).attr("id");
                        var regex = /\w+$/;
                        var temp_wntyDelaysTeam_dpdwn_ID_object = tempWntyDelaysTeam_dpdwn_ID.match(regex);
                        var temp_UserID = temp_wntyDelaysTeam_dpdwn_ID_object[0];

                        wntyDelaysUserNamesArrTemp.push(temp_UserID);
                    });
                    wntyDelays_Add.push([$(wntyDelaysTeam_narr_div_Content_Add[index1]).html(), wntyDelaysTeam_hours_div_Content_Add, wntyDelaysUserNamesArrTemp]);

                    if (recordsToAddStatus == 0) {
                        recordsToAddStatus = 1;
                    }
                });
            }

            //only on existing records or copies
            function fn_buildJsonObjects() {

                //BEGIN BUILD THE WORK DESCRIPTION JSON OBJECT
                //if there are no work description time entries to add, set the json object to null
                if (workDesc_Add.length < 1) {
                    workDescArrJson_Add = null
                }
                else {
                    for (var i = 0; i < workDesc_Add.length; i++) {
                        workDescArrJson_Add[i] = {
                            workDescription: workDesc_Add[i][0],
                            workDescriptionCategory: "1",
                            hours: workDesc_Add[i][1],
                            userNames: workDesc_Add[i][2]
                        };
                    }
                }
                //END BUILD THE WORK DESCRIPTION JSON OBJECT

                //BEGIN BUILD THE DELAYS JSON OBJECT
                //if there are no delay time entries to add, set the json object to null
                if (delays_Add.length < 1) {
                    delaysArrJson_Add = null
                }
                else {
                    for (var i = 0; i < delays_Add.length; i++) {
                        delaysArrJson_Add[i] = {
                            workDescription: delays_Add[i][0],
                            workDescriptionCategory: "2",
                            hours: delays_Add[i][1],
                            userNames: delays_Add[i][2]
                        };
                    }
                }
                //END BUILD THE DELAYS JSON OBJECT

                //BEGIN BUILD THE WNTY DELAYS JSON OBJECT
                //if there are no warranty delay time entries to add, set the json object to null
                if (wntyDelays_Add.length < 1) {
                    wntyDelaysArrJson_Add = null
                }
                else {
                    for (var i = 0; i < wntyDelays_Add.length; i++) {
                        wntyDelaysArrJson_Add[i] = {
                            workDescription: wntyDelays_Add[i][0],
                            workDescriptionCategory: "3",
                            hours: wntyDelays_Add[i][1],
                            userNames: wntyDelays_Add[i][2]
                        };
                    }
                }
                //END BUILD THE WNTY DELAYS JSON OBJECT
            }

            //END SECTION TO PACK UP NEW RECORDS

            //BEGIN MISCELLANEOUS SECTION

            //cloned to new daily report
            function fn_showSpinner() {
                $.LoadingOverlay("show", {
                    image: "",
                    fontawesome: "fa fa-cog fa-spin"
                });

                $('#saveAndExit_btn, #saveAndSubmit_btn').attr('disabled', 'disabled');
            }

            function fn_printOnLoad() {
                //console.log("number of work description entries from the copied report to add: " + indexWorkDescEntries_Add);
                //console.log("number of delays entries from the copied report to add: " + indexDelaysEntries_Add);
                //console.log("number of warranty delays entries from the copied report to add: " + indexWntyDelaysEntries_Add);
            }

            //cloned to new daily report
            function fn_printArrays() {

                //console.clear();

                //BEGIN ADDED ARRAYS
                if (recordsToAddStatus == 1) {
                    console.log("*****************")
                    console.log("work description combined array ADDED RECORDS section follows:");
                    //console.log(workDesc_Add);
                    console.log(workDescArrJson_Add);

                    console.log("delays combined array ADDED RECORDS section follows:");
                    //console.log(delays_Add);
                    console.log(delaysArrJson_Add);

                    console.log("warranty delays combined array ADDED RECORDS section follows:");
                    //console.log(wntyDelays_Add);
                    console.log(wntyDelaysArrJson_Add);
                    console.log("*****************")
                }
                //END ADDED ARRAYS
            }

            //enable the select2 add-on
            //cloned to new daily report
            function fn_enableSelect2() {
                $('.Team_dpdwn').select2({
                    width: "80%",
                    placeholder: "Select Team",
                    closeOnSelect: "false"
                })

                $('#team_dpdwn').select2({
                    width: "100%",
                    placeholder: "Select Team",
                    closeOnSelect: "false"
                })
            }

            //disable the select2 add-on
            //cloned to new daily report
            function fn_disableSelect2() {
                $('.Team_dpdwn').select2('destroy')
            }

            //cloned to new daily report
            $("#printDailyReport").click(function () {//when a record's edit button is clicked...

                //begin axios delete post
                axios.post('/DailyReportByReportIDPrint', {

                    reportID: dailyReportID,
                })
                    .then(function (response) {
                        console.log(response);
                        $.alert({
                            title: 'Confirmation',
                            content: 'This daily report has been e-mailed.',
                        });
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                //end axios add pos
            });

            //cloned to new daily report
            function fn_cleanupDataEntryFields(passedText) {
                //BEGIN CLEAN UP TRASH FROM ENTERED TEXT
                passedText = passedText.replace(/(&amp;)+/g, "");//wipe out &amp;
                passedText = passedText.replace(/(amp;)+/g, "");//wipe out &amp;
                passedText = passedText.replace(/(&nbsp;)+/g, "");//wipe out nbsp
                passedText = passedText.replace(/(nbsp;)+/g, "");//wipe out nbsp
                passedText = passedText.replace(/^\s+/g, "");//wipe out any leading white spaces in input boxes
                passedText = passedText.replace(/\s+$/g, "");//wipe out any trailing white spaces in input boxes

                passedText = passedText.replace(/(<([^>]+)>)/gi, "");//wipe out any html tags in input boxes
                passedText = passedText.replace(/(&lt;\w*&gt;)/ig, "");//wipe out any opening html tags in a div
                passedText = passedText.replace(/(&lt;\/\w*&gt;)/ig, "");//wipe out any closing html tags in a div

                return passedText;
                //END CLEAN UP TRASH FROM ENTERED TEXT
            }

            $("#enableSelect2").click(function () {
                fn_enableSelect2();
            });

            $("#disableSelect2").click(function () {
                fn_disableSelect2();
            });

            function okToCloseBrowser(e) {
                //if (!e) e = window.event;
                ////e.cancelBubble is supported by IE - this will kill the bubbling process.
                //e.cancelBubble = true;
                //e.returnValue = 'You sure you want to leave?';

                ////e.stopPropagation works in Firefox.
                //if (e.stopPropagation) {
                //    e.stopPropagation();
                //    e.preventDefault();
                //}
            }
            //window.onbeforeunload = okToCloseBrowser; 

            //END MISCELLANEOUS SECTION

            //BEGIN VALIDATION BEFORE SAVING SECTION

            //cloned to new daily report
            function allFilled() {
                var filled = true;
                //console.clear();

                if ($("#slct_date").val() == '') {
                    //console.log($("#slct_date").val())
                    //console.log("#slct_date is empty")
                    filled = false;
                }

                if ($("#input_equipment").val() == '') {
                    console.log($("#input_equipment").val())
                    console.log("input_equipment is empty")
                    filled = false;
                }

                if ($("#input_startTime").val() == '') {
                    console.log("input_startTime is empty")
                    filled = false;
                }

                if ($("#input_endTime").val() == '') {
                    console.log("input_endTime is empty")
                    filled = false;
                }

                if ($("#input_lunch").val() == '') {
                    console.log("input_lunch is empty")
                    filled = false;
                }

                if ($(dailyRptTeamUserIDArr).length < 1) {
                    console.log("need more team members added to the daily report.")
                    filled = false;
                }

                if (indexWorkDescEntries_Add < 1) {
                    console.log("need at least one work description added to the daily report.")
                    filled = false;
                }

                if ($("#input_endTime").val() < $("#input_startTime").val()) {
                    console.log("The end time must not be earlier than the start time.")
                    filled = false;
                }

                return filled;
            }

            //cloned to new daily report
            function enable_disableSave() {
                if (allFilled()) {
                    $('#saveAndExit_btn, #saveAndSubmit_btn').removeAttr('disabled');
                } else {
                    $('#saveAndExit_btn, #saveAndSubmit_btn').attr('disabled', 'disabled');
                }
            }

            //cloned to new daily report
            function fn_rowFilled(button) {
                var currentRow = button.parent().parent();
                var rowFilled = true;
                var narrDiv = currentRow.find(".narr_div").html();
                var teamDiv = currentRow.find(".select2-selection__rendered").html();

                //HOURS INPUT UPDATE
                //var hoursDiv = currentRow.find(".hours_div").html();
                var hoursDiv = currentRow.find(".hours_div input").val();
                //HOURS INPUT UPDATE

                var hoursDivMatch = hoursDiv.match(/^(2[0-3]|[01]?[0-9])\.(00|25|50|75)$/g);//should match 0-23.[0|25|50|75]

                //HOURS INPUT UPDATE
                //var delayHours = $(".addRecord").find(".delaysTeam_hours_div, .wntyDelaysTeam_hours_div");
                var delayHours = $(".addRecord").find(".delaysTeam_hours_div input, .wntyDelaysTeam_hours_div input");
                //HOURS INPUT UPDATE
                
                //console.clear();

                var totalDayHours = calcStartStopTimeDiff();
                var totalDelayHours = 0.0;

                if (narrDiv.length < 10) {
                    //console.log("Narr div is empty.")
                    $.alert({
                        title: 'Error!',
                        content: 'Narrative must be greater than 10 characters.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                if (teamDiv.length < 1) {
                    //console.log("dpdwn_div div is empty.")
                    $.alert({
                        title: 'Error!',
                        content: 'Must have at least one team member',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                if (hoursDiv == "" || !hoursDivMatch) {
                    //console.log("Hours div is empty or the hours do match the pattern.")
                    $.alert({
                        title: 'Error!',
                        content: 'Hours must be of form H.00, H.25, H.50, or H.75.',
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                delayHours.each(function (index) {
                    //HOURS INPUT UPDATE
                    //totalDelayHours = totalDelayHours + parseFloat($(this).html());
                    totalDelayHours = totalDelayHours + parseFloat($(this).val());
                    //HOURS INPUT UPDATE
                });

                console.log("Total day hours: " + totalDayHours);
                console.log("Total present delay hours: " + totalDelayHours);
                console.log("Line delay hours: " + parseFloat(hoursDiv));

                //newly added delay hours are disallowed if the entered value exceeds the day's total possible hours
                if ((parseFloat(hoursDiv) + totalDelayHours) > totalDayHours) {

                    $.alert({
                        title: 'Error!',
                        content: 'Total delay hours must not exceed the total day hours of ' + totalDayHours,
                    });
                    rowFilled = false;
                    return rowFilled;
                }

                return rowFilled;
            }

            function calcStartStopTimeDiff() {
                // Get values.
                var valuestart = $("#input_startTime").val();
                var valuestop = $("#input_endTime").val();

                // Create date format.          
                var timeStart = new Date("01/01/2021 " + valuestart);
                var timeEnd = new Date("01/01/2021 " + valuestop);

                // Subtract.
                var difference = timeEnd - timeStart;
                var time = msToTime(difference);
                //console.log("Decimal hours is: " + time);

                return time;
            }

            //time is passed in as milliseconds
            function msToTime(s) {
                var ms = s % 1000;
                s = (s - ms) / 1000;
                var secs = s % 60;
                s = (s - secs) / 60;
                var mins = s / 60;

                return mins.toFixed(1);
            }

            $("#input_startTime, #input_endTime").change(calcStartStopTimeDiff);

            //END VALIDATION BEFORE SAVING SECTION
                       
        });//end document read jquery statements
    </script>
</head>

<div class="container" id="contnrDailyLog">
    <h3 style="text-align:center">FIELD SERVICE RECORD</h3>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Daily Log Information</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <div>
                <span><strong>Record No</strong></span>
                @*<span id="txt_dailyReportID" value="@Model.First().dailyReportID">@Model.First().dailyReportID</span>*@
                <span id="txt_dailyReportID" value="@Model.First().dailyReportID">new</span>
            </div>
        </div>
        <div class="col-md-3" style="padding:5px">
            <div>
                <span><strong>Submission Status</strong></span>
                @*<span id="txt_rtndSubmissionStatus" value="@Model.First().submissionStatus">un-submitted?</span>*@
                <span id="txt_rtndSubmissionStatus" value="">Un-submitted</span>
            </div>
        </div>
        <div class="col-md-3" style="padding:5px">
            <div>
                <span><strong>Author</strong></span>
                <span class="" id="dailyRptAuthor">@User.Identity.GetUserName()</span>
                @*<span class="" id="dailyRptAuthor">@Model.First().dailyReportAuthor</span>*@
            </div>
        </div>
    </div>
    <div class="row">
        <div class="md-col-md-2" style="padding:5px">
            <strong>Job:</strong>
        </div>
        <div class="md-col-md-2" style="padding:5px">
            <select name="jobs_dpdown" id="jobs_dpdown" style="width:100%" value="">
                <option value="@Model.First().jobID">@Model.First().jobID</option>
            </select>
            <input type="text" id="input_jobs_dpdown" name="" style="width:100%" hidden>
        </div>
        <div class="md-col-md-5" style="padding:5px"></div>
    </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Customer:</strong>:
        </div>
        <div class="col-md-7" style="padding:5px" id="output_customerName">@Model.First().customerName</div>
        <div class="col-md-1" style="padding:5px">
            <strong>Sub Job:</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <select name="subJobTypes_dpdwn" id="subJobTypes_dpdwn" style="width:100%" value="">
                <option value="@Model.First().subJobID">@Model.First().description</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Location:</strong>
        </div>
        <div class="col-md-7" style="padding:5px" id="output_location">@Model.First().address</div>
        <div class="col-md-1" style="padding:5px">
            <strong>Code:</strong>
        </div>
        <div class="col-md-2" style="padding:5px" id="output_customerCode">@Model.First().customerCode</div>
    </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Customer Contact:</strong>
        </div>
        <div class="col-md-4" style="padding:5px" id="output_customerContact">@Model.First().customerContact</div>
        <div class="col-md-4" style="padding:5px">
            <div>
                <span><strong>Correspondents:</strong></span>
                @foreach (var item in Model)
                {
                    //BEGIN TEMPORARY LOOP VARIABLES
                    List<string> temp_jobCorrespondentName = item.jobCorrespondentName;
                    //END TEMPORARY LOOP VARIABLES

                        for (var i = 0; i < (temp_jobCorrespondentName.Count); i++)
                        {
                            <span class="" id="output_jobCrspdtInfo" style="pointer-events:none">@temp_jobCorrespondentName[@i]|</span>
                        }
                }
            </div>
        </div>
        </div>
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Equipment:</strong>
        </div>
        <div class="col-md-10" style="padding:5px" contenteditable>
            <input type="text" value="@Model.First().equipment" id="input_equipment" name="" style="width:100%">
        </div>
    </div>
    <div class="row">
        <div class="col-md-12" style="padding:5px; text-align:center">
            <span class="span_inlineBlock">
                <strong>Date:</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="date" class="form-control form-control-sm" id="slct_date" placeholder="" value=@DateTime.Today.ToString("yyyy-MM-dd")>
            </span>
            <span class="span_inlineBlock">
                <strong>Start Time:</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="time" class="form-control form-control-sm" id="input_startTime" placeholder="" value="08:00">
            </span>
            <span class="span_inlineBlock">
                <strong>End Time:</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="time" class="form-control form-control-sm" id="input_endTime" placeholder="" value="16:00">
            </span>
            <span class="span_inlineBlock">
                <strong>Lunch (hr)</strong>
            </span>
            <span class="span_inlineBlock">
                <input type="text" class="form-control form-control-sm" id="input_lunch" value="1">
            </span>
        </div>
    </div>
    </div>

@*BEGIN ALLPAX TEAM*@
<hr class="sectionSeparator">
<div class="container" id="">
    <div class="row">
        <div class="col-md-2" style="padding:5px">
            <strong>Allpax Team:</strong>
        </div>
        <div class="col-md-10" style="padding:5px">
            <div class="row" style="margin:0px;">
                @*<select name="team_dpdwn" id="team_dpdwn" style="width:100%">
        </select>*@
                <select class="Team_dpdwn" id="team_dpdwn" style="width:100%" multiple="multiple">
                </select>
            </div>
            <div class="row" style="margin:0px;" name="txt_teamMembers" id="txt_teamMembers">
                <div class="team_" id="team_" style="padding:5px; border:solid black 1px" hidden>
                    Johnny Watkins|JW
                </div>
            </div>
            @*<button class='btn btn-light btn-sm' id="enableSelect2">enable</button>
            <button class='btn btn-light btn-sm' id="disableSelect2">disable</button>*@
        </div>
    </div>
</div>
@*END ALLPAX TEAM*@

@*BEGIN WORK DESCRIPTION SECTION*@
<hr class="sectionSeparator">
<div class="container" id="workDesc_container">
    <div class="row">
        <div class="col-md-6" style="padding:5px">
            <strong>Work Description</strong>
        </div>
        <div class="col-md-3" style="padding:5px">
            <strong>Team</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <strong>Action</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>State</strong>
        </div>
    </div>
    @*BEGIN RETURNED RECORDS*@
    @foreach (var item in Model)
    {
        for (var i = 0; i < (item.workDescArr.Count); i++)
        {
            //BEGIN TEMPORARY LOOP VARIABLES
            int temp_timeEntryID = item.workDescArr[i].timeEntryID;
            List<string> temp_userNames = item.workDescArr[i].userNames;
            List<string> temp_userShortNames = item.workDescArr[i].userShortNames;
            string temp_workDescription = item.workDescArr[i].workDescription;
            //END TEMPORARY LOOP VARIABLES

            @*<div class=" row returnedRecords workDescLine" id="workDescLine_@temp_timeEntryID" data-time-Entry-ID="@temp_timeEntryID" style="">*@
            @*<div class=" row addRecord workDescLine" id="workDescLine_@i" data-time-Entry-ID="" style="">*@
<div class=" row addRecord workDescLine" id="workDescLine_@(i+1)" style="">

    <div class="col-md-6 narr_div workDescTeam_narr_div" contenteditable="false" style="">@temp_workDescription</div>

    <div class="col-md-3 dpdwn_div workDescTeam_dpdwn_div" style="padding: 0px; display:none">
        <button class="btn btn-light btn-sm Btn_selectAll lineWorkDescBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
        <select class="Team_dpdwn workDescTeam_dpdwn RtndRecs" multiple="" tabindex="0" aria-hidden="false">
            @for (var j = 0; j < (@temp_userNames.Count); j++)
            {
                <option value="@temp_userNames[j]" selected>@temp_userShortNames[j]</option>
            }
        </select>
    </div>

    <div class="col-md-3 dpdwn_parsed_div workDescTeam_dpdwn_parsed_div" contenteditable="false" style="">
        @for (var k = 0; k < (temp_userShortNames.Count); k++)
        {
            @(temp_userShortNames[k] + "|");
        }
    </div>

    @*//HOURS INPUT UPDATE*@
    @*<div class="col-md-1 hours_div workDescTeam_hours_div" contenteditable="false" style="" hidden>*@
    <div class="col-md-1 hours_div workDescTeam_hours_div" style="" hidden>
        <input type="text" value="0.00" name="" style="width:100%">
        @*0.0*@
    </div>
    @*//HOURS INPUT UPDATE*@

    <div class="col-md-2 button_div workDescTeam_button_div" style="padding:0px;">
        <button class="btn btn-light btn-sm Btn_edit lineWorkDescBtn_edit" style=""><i class="far fa-edit fa-2x" style="color:black;"></i></button>
        <button class="btn btn-light btn-sm Btn_save lineWorkDescBtn_save" style="display:none"><i class="far fa-save fa-2x" style="color: black;"></i></button>
        <button class="btn btn-light btn-sm Btn_delete lineWorkDescBtn_delete"><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
    </div>

    <div class="col-md-1 state_div workDescTeam_state_div" style="padding:0px;">
        @*<button class="btn btn-light btn-sm  Btn_rtndRecord" disabled><i class="fas fa-database fa-2x icon_rtndRecord"></i></button>
            <button class="btn btn-light btn-sm Btn_editedRecord" disabled hidden><i class="far fa-edit fa-2x icon_editedRecord"></i></button>
            <button class="btn btn-light btn-sm Btn_deletedRecord" disabled hidden><i class="far fa-minus-square fa-2x icon_deletedRecord"></i></button>*@
        <button class="btn btn-light btn-sm Btn_addedRecord" disabled><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
    </div>
</div>
        }
    }

    @*END RETURNED RECORDS*@
    @*BEGIN NEW WORK DESCRIPTION TEMPLATE*@
    <div class="" id="workDescriptionLine_template" style="">
        <div class="row entryRow workDescriptionLine_template_row_active" style="">
            <div class="col-md-6 narr_div workDescTeam_narr_div" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div workDescTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWorkDescBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new workDescTeam_dpdwn" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div workDescTeam_dpdwn_parsed_div" hidden contenteditable="false" style="">

            </div>

            @*//HOURS INPUT UPDATE*@
            @*<div class="col-md-1 hours_div workDescTeam_hours_div" contenteditable="false" style="" hidden>*@
            <div class="col-md-1 hours_div workDescTeam_hours_div" style="" hidden>
                <input type="text" value="0.00" name="" style="width:100%">
                @*0.0*@
            </div>
            @*//HOURS INPUT UPDATE*@

            <div class="col-md-2 button_div workDescTeam_button_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_add newWorkDescBtn_add"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>

                <button class="btn btn-light btn-sm Btn_edit lineWorkDescBtn_edit" hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineWorkDescBtn_save' hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineWorkDescBtn_delete' hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>

            <div class="col-md-1 state_div workDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>

        </div>

        <div class="row entryRow workDescriptionLine_template_row_hidden" style="" hidden>
            <div class="col-md-6 narr_div workDescTeam_narr_div" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div workDescTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWorkDescBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new workDescTeam_dpdwn" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div workDescTeam_dpdwn_parsed_div" hidden contenteditable="false" style="">

            </div>

            @*//HOURS INPUT UPDATE*@
            @*<div class="col-md-1 hours_div workDescTeam_hours_div" contenteditable="false" style="" hidden>*@
            <div class="col-md-1 hours_div workDescTeam_hours_div" style="" hidden>
                <input type="text" value="0.00" name="" style="width:100%">
                @*0.0*@
            </div>
            @*//HOURS INPUT UPDATE*@

            <div class="col-md-2 button_div workDescTeam_button_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_add newWorkDescBtn_add"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>

                <button class="btn btn-light btn-sm Btn_edit lineWorkDescBtn_edit" hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineWorkDescBtn_save' hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineWorkDescBtn_delete' hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>

            <div class="col-md-1 state_div workDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>
    </div>
    @*END NEW WORK DESCRIPTION TEMPLATE*@
</div>
@*END WORK DESCRIPTION SECTION*@

@*BEGIN DELAYS SECTION*@
<hr class="sectionSeparator">
<div class="container" id="delays_container">
    <div class="row">
        <div class="col-md-5" style="padding:5px">
            <strong>Delays</strong>
        </div>
        <div class="col-md-3" style="padding:5px">
            <strong>Team</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>Hours</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <strong>Action/Pending Op.</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>State</strong>
        </div>
    </div>

    @*BEGIN RETURNED RECORDS*@
    @foreach (var item in Model)
    {
        for (var i = 0; i < (item.delaysArr.Count); i++)
        {
            //BEGIN TEMPORARY LOOP VARIABLES
            int temp_timeEntryID = item.delaysArr[i].timeEntryID;
            List<string> temp_userNames = item.delaysArr[i].userNames;
            List<string> temp_userShortNames = item.delaysArr[i].userShortNames;
            //int temp_hours = item.delaysArr[i].hours;
            //float temp_hours = item.delaysArr[i].hours;
            decimal temp_hours = item.delaysArr[i].hours;
            string temp_workDescription = item.delaysArr[i].workDescription;
            //END TEMPORARY LOOP VARIABLES

            @*<div class=" row addRecord delaysLine" id="delaysLine_@temp_timeEntryID" data-time-Entry-ID="@temp_timeEntryID" style="">*@
<div class=" row addRecord delaysLine" id="delaysLine_@(i+1)" style="">
    <div class="col-md-5 narr_div delaysTeam_narr_div" contenteditable="false" style="">@temp_workDescription</div>

    <div class="col-md-3 dpdwn_div delaysTeam_dpdwn_div" style="padding: 0px; display:none">
        <button class="btn btn-light btn-sm Btn_selectAll lineDelaysBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
        <select class="Team_dpdwn delaysTeam_dpdwn RtndRecs" multiple="" tabindex="0" aria-hidden="false">
            @for (var j = 0; j < (@temp_userNames.Count); j++)
            {
                <option value="@temp_userNames[j]" selected>@temp_userShortNames[j]</option>
            }
        </select>
    </div>

    <div class="col-md-3 dpdwn_parsed_div delaysTeam_dpdwn_parsed_div" contenteditable="false" style="">
        @*AB|DB|JB*@
        @for (var k = 0; k < (temp_userShortNames.Count); k++)
        {
            @(temp_userShortNames[k] + "|");
        }
    </div>

    @*<div class="col-md-1 hours_div delaysTeam_hours_div" contenteditable="false" style="">@temp_hours</div>*@

    @*//HOURS INPUT UPDATE*@
    @*<div class="col-md-1 hours_div delaysTeam_hours_div" contenteditable="true" style="">*@
    <div class="col-md-1 hours_div delaysTeam_hours_div" style="">
        <input type="text" value="@temp_hours" name="" style="width:100%" disabled>
    </div>
    @*//HOURS INPUT UPDATE*@

    <div class="col-md-2 button_div delaysTeam_button_div" style="padding:0px;">
        <button class="btn btn-light btn-sm Btn_edit lineDelaysBtn_edit" style=""><i class="far fa-edit fa-2x" style="color:black;"></i></button>
        <button class="btn btn-light btn-sm Btn_save lineDelaysBtn_save" style="display:none"><i class="far fa-save fa-2x" style="color: black;"></i></button>
        <button class="btn btn-light btn-sm Btn_delete lineDelaysBtn_delete"><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
    </div>

    <div class="col-md-1 state_div delaysDescTeam_state_div" style="padding:0px;">
        @*<button class="btn btn-light btn-sm  Btn_rtndRecord" disabled><i class="fas fa-database fa-2x icon_rtndRecord"></i></button>
            <button class="btn btn-light btn-sm Btn_editedRecord" disabled hidden><i class="far fa-edit fa-2x icon_editedRecord"></i></button>
            <button class="btn btn-light btn-sm Btn_deletedRecord" disabled hidden><i class="far fa-minus-square fa-2x icon_deletedRecord"></i></button>*@
        <button class="btn btn-light btn-sm Btn_addedRecord" disabled><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
    </div>
</div>
        }
    }
    @*END RETURNED RECORDS*@
    @*BEGIN NEW DELAYS TEMPLATE*@
    <div class="" id="delaysLine_template">
        <div class="row entryRow delaysLine_template_row_active" style="">
            <div class="col-md-5 narr_div delaysTeam_narr_div" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div delaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineDelaysBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new delaysTeam_dpdwn" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div delaysTeam_dpdwn_parsed_div" hidden contenteditable="false" style="">

            </div>
            @*//HOURS INPUT UPDATE*@
            @*<div class="col-md-1 hours_div delaysTeam_hours_div" contenteditable="true" style="">*@
            <div class="col-md-1 hours_div delaysTeam_hours_div" style="">
                <input type="text" value="" name="" style="width:100%">
            </div>
            @*//HOURS INPUT UPDATE*@
            <div class="col-md-2 button_div delaysTeam_button_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_add newDelaysBtn_add"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>

                <button class="btn btn-light btn-sm Btn_edit lineDelaysBtn_edit" hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineDelaysBtn_save' hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineDelaysBtn_delete' hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>

            <div class="col-md-1 state_div delaysDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>

        </div>

        <div class="row entryRow delaysLine_template_row_hidden" style="" hidden>
            <div class="col-md-5 narr_div delaysTeam_narr_div" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div delaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineDelaysBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new delaysTeam_dpdwn" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div delaysTeam_dpdwn_parsed_div" hidden contenteditable="false" style="">

            </div>
            @*//HOURS INPUT UPDATE*@
            @*<div class="col-md-1 hours_div delaysTeam_hours_div" contenteditable="true" style="">*@
            <div class="col-md-1 hours_div delaysTeam_hours_div" style="">
                <input type="text" value="" name="" style="width:100%">
            </div>

            @*//HOURS INPUT UPDATE*@
            <div class="col-md-2 button_div delaysTeam_button_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_add newDelaysBtn_add"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>

                <button class="btn btn-light btn-sm Btn_edit lineDelaysBtn_edit" hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save lineDelaysBtn_save' hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete lineDelaysBtn_delete' hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>
            <div class="col-md-1 state_div delaysDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>
    </div>
    @*END DELAYS TEMPLATE*@
</div>
@*END DELAYS SECTION*@

@*BEGIN WARRANTY DELAYS  SECTION*@
<hr class="sectionSeparator">
<div class="container" id="wntyDelays_container">
    <div class="row">
        <div class="col-md-5" style="padding:5px">
            <strong>Warranty Delays</strong>
        </div>
        <div class="col-md-3" style="padding:5px">
            <strong>Team</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>Hours</strong>
        </div>
        <div class="col-md-2" style="padding:5px">
            <strong>Action</strong>
        </div>
        <div class="col-md-1" style="padding:5px">
            <strong>State</strong>
        </div>
    </div>
    @*BEGIN RETURNED RECORDS*@
    @foreach (var item in Model)
    {
        for (var i = 0; i < (item.wntyDelaysArr.Count); i++)
        {
            //BEGIN TEMPORARY LOOP VARIABLES
            int temp_timeEntryID = item.wntyDelaysArr[i].timeEntryID;
            List<string> temp_userNames = item.wntyDelaysArr[i].userNames;
            List<string> temp_userShortNames = item.wntyDelaysArr[i].userShortNames;
            //int temp_hours = item.wntyDelaysArr[i].hours;
            decimal temp_hours = item.wntyDelaysArr[i].hours;
            string temp_workDescription = item.wntyDelaysArr[i].workDescription;
            //END TEMPORARY LOOP VARIABLES

            @*<div class=" row addRecord wntyDelaysLine" id="wntyDelaysLine_@temp_timeEntryID" data-time-Entry-ID="@temp_timeEntryID" style="">*@
<div class=" row addRecord wntyDelaysLine" id="wntyDelaysLine_@(i+1)" style="">
    <div class="col-md-5 narr_div wntyDelaysTeam_narr_div" contenteditable="false" style="">@temp_workDescription</div>

    <div class="col-md-3 dpdwn_div wntyDelaysTeam_dpdwn_div" style="padding: 0px; display:none">
        <button class="btn btn-light btn-sm Btn_selectAll lineWntyDelaysBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
        <select class="Team_dpdwn wntyDelaysTeam_dpdwn RtndRecs" multiple="" tabindex="0" aria-hidden="false">
            @for (var j = 0; j < (@temp_userNames.Count); j++)
            {
                <option value="@temp_userNames[j]" selected>@temp_userShortNames[j]</option>
            }
        </select>
    </div>

    <div class="col-md-3 dpdwn_parsed_div wntyDelaysTeam_dpdwn_parsed_div" contenteditable="false" style="">
        @*AB|DB|JB*@
        @for (var k = 0; k < (temp_userShortNames.Count); k++)
        {
            @(temp_userShortNames[k] + "|");
        }
    </div>

    @*<div class="col-md-1 hours_div wntyDelaysTeam_hours_div" contenteditable="false" style="">@temp_hours</div>*@
    @*//HOURS INPUT UPDATE*@
    @*<div class="col-md-1 hours_div wntyDelaysTeam_hours_div" contenteditable="true" style="">*@
    <div class="col-md-1 hours_div wntyDelaysTeam_hours_div" style="">
        <input type="text" value="@temp_hours" name="" style="width:100%" disabled>
    </div>
    @*//HOURS INPUT UPDATE*@

    <div class="col-md-2 button_div wntyDelaysTeam_button_div" style="padding:0px;">
        <button class="btn btn-light btn-sm Btn_edit lineWntyDelaysBtn_edit" style=""><i class="far fa-edit fa-2x" style="color:black;"></i></button>
        <button class="btn btn-light btn-sm Btn_save lineWntyDelaysBtn_save" style="display:none"><i class="far fa-save fa-2x" style="color: black;"></i></button>
        <button class="btn btn-light btn-sm Btn_delete lineWntyDelaysBtn_delete"><i class="far fa-minus-square fa-2x" style="color: black;"></i></button>
    </div>

    <div class="col-md-1 state_div wntyDelaysDescTeam_state_div" style="padding:0px;">
        @*<button class="btn btn-light btn-sm  Btn_rtndRecord" disabled><i class="fas fa-database fa-2x icon_rtndRecord"></i></button>
            <button class="btn btn-light btn-sm Btn_editedRecord" disabled hidden><i class="far fa-edit fa-2x icon_editedRecord"></i></button>
            <button class="btn btn-light btn-sm Btn_deletedRecord" disabled hidden><i class="far fa-minus-square fa-2x icon_deletedRecord"></i></button>*@
        <button class="btn btn-light btn-sm Btn_addedRecord" disabled><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
    </div>
</div>
        }
    }
    @*END RETURNED RECORDS*@
    @*BEGIN NEW WARRANTY DELAYS  TEMPLATE*@
    <div class="" id="wntyDelaysLine_template" style="">
        <div class="row entryRow wntyDelaysLine_template_row_active" style="">
            <div class="col-md-5 narr_div wntyDelaysTeam_narr_div" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div wntyDelaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWntyDelaysBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new wntyDelaysTeam_dpdwn" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div wntyDelaysTeam_dpdwn_parsed_div" hidden contenteditable="false" style="">

            </div>
            @*//HOURS INPUT UPDATE*@
            @*<div class="col-md-1 hours_div wntyDelaysTeam_hours_div" contenteditable="true" style="">*@
            <div class="col-md-1 hours_div wntyDelaysTeam_hours_div" style="">
                <input type="text" value="" name="" style="width:100%">
            </div>
            @*//HOURS INPUT UPDATE*@
            <div class="col-md-2 button_div wntyDelaysTeam_button_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_add newwntyDelaysBtn_add"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>
                <button class="btn btn-light btn-sm Btn_clear newwntyDelaysBtn_clear" hidden><i class="fas fa-eraser fa-2x" style="color:black;"></i></button>

                <button class="btn btn-light btn-sm Btn_edit linewntyDelaysBtn_edit" hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save linewntyDelaysBtn_save' hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete linewntyDelaysBtn_delete' hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>
            <div class="col-md-1 state_div wntyDelaysDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>

        <div class="row entryRow wntyDelaysLine_template_row_hidden" style="" hidden>
            <div class="col-md-5 narr_div wntyDelaysTeam_narr_div" contenteditable="true" style=""></div>
            <div class="col-md-3 dpdwn_div wntyDelaysTeam_dpdwn_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_selectAll lineWntyDelaysBtn_selectAll"><i class="far fa-object-group fa-2x" style="color:black;"></i></button>
                <select class="Team_dpdwn team_dpdwn_new wntyDelaysTeam_dpdwn" multiple="multiple">
                </select>
            </div>
            <div class="col-md-3 dpdwn_parsed_div wntyDelaysTeam_dpdwn_parsed_div" hidden contenteditable="false" style="">

            </div>
            @*//HOURS INPUT UPDATE*@
            @*<div class="col-md-1 hours_div wntyDelaysTeam_hours_div" contenteditable="true" style="">*@
            <div class="col-md-1 hours_div wntyDelaysTeam_hours_div" style="">
                <input type="text" value="" name="" style="width:100%">
            </div>
            @*//HOURS INPUT UPDATE*@
            <div class="col-md-2 button_div wntyDelaysTeam_button_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_add newwntyDelaysBtn_add"><i class="far fa-plus-square fa-2x" style="color:black;"></i></button>
                <button class="btn btn-light btn-sm Btn_clear newwntyDelaysBtn_clear" hidden><i class="fas fa-eraser fa-2x" style="color:black;"></i></button>

                <button class="btn btn-light btn-sm Btn_edit linewntyDelaysBtn_edit" hidden><i class="far fa-edit fa-2x" style="color:black;"></i></button>
                <button class='btn btn-light btn-sm Btn_save linewntyDelaysBtn_save' hidden><i class='far fa-save fa-2x' style='color: black;'></i></button>
                <button class='btn btn-light btn-sm Btn_delete linewntyDelaysBtn_delete' hidden><i class='far fa-minus-square fa-2x' style='color: black;'></i></button>
            </div>
            <div class="col-md-1 state_div wntyDelaysDescTeam_state_div" style="padding:0px;">
                <button class="btn btn-light btn-sm Btn_addedRecord" disabled hidden><i class="far fa-plus-square fa-2x icon_addedRecord"></i></button>
            </div>
        </div>
    </div>
    @*END WARRANTY DELAYS TEMPLATE*@
</div>
    @*END WARRANTY DELAYS*@
@*END WARRANTY DELAYS  SECTION*@

@*BEGIN FINAL PAGE ACTIONS*@
<hr class="sectionSeparator">
<div class="container" id="_container">
    <div class="row">
        <div class="col-md-4" style="padding:5px">
            <button type="button" class="btn btn-primary btn-sm" id="saveAndExit_btn" style="width: 100%">Save & Exit</button>
        </div>
        <div class="col-md-4" style="padding:5px">
            <button type="button" class="btn btn-primary btn-sm" id="saveAndSubmit_btn" style="width: 100%">Save & Submit</button>
        </div>
        <div class="col-md-4" style="padding:5px">
            <button type="button" class="btn btn-primary btn-sm" id="printDailyReport" style="width: 100%" disabled>E-mail Daily Report Test</button>
        </div>
    </div>
</div>
@*END FINAL PAGE ACTIONS*@









